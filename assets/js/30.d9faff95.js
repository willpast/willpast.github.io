(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{361:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"final-static-super-this-关键字总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#final-static-super-this-关键字总结"}},[s._v("#")]),s._v(" final,static,super,this 关键字总结")]),s._v(" "),a("h2",{attrs:{id:"_1-final-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-final-关键字"}},[s._v("#")]),s._v(" 1. final 关键字")]),s._v(" "),a("p",[s._v("final 关键字主要用在三个地方：变量、方法、类")]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("final 变量")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果是"),a("strong",[s._v("基本数据类型")]),s._v("的变量，其"),a("strong",[s._v("数值一旦初始化之后便不能改变")])])]),s._v(" "),a("li",[a("p",[s._v("如果是"),a("strong",[s._v("引用类型")]),s._v("的变量：则在对其初始化之后便**不能再让其指向另一个对象*")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("final 类")])]),s._v(" "),a("p",[s._v("表明这个类"),a("strong",[s._v("不能被继承")]),s._v("，final 类中的"),a("strong",[s._v("所有成员方法都会被隐式得指定为final方法")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("final方法")])]),s._v(" "),a("p",[s._v("final修饰的成员方法"),a("strong",[s._v("不能被子类重写")])])])]),s._v(" "),a("h2",{attrs:{id:"_2-static关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-static关键字"}},[s._v("#")]),s._v(" 2. static关键字")]),s._v(" "),a("p",[s._v("static 关键字主要有以下四种使用场景")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("修饰成员变量和成员方法：")]),s._v(" "),a("p",[s._v("被static 修饰的成员属于类，不属于这个类的某个实例，被类中所有实例共享。可以并且建议通过类名调用。")]),s._v(" "),a("p",[s._v("被static 声明的成员变量属于静态成员变量，静态变量存在java 内存区域的方法区。")]),s._v(" "),a("p",[s._v("调用格式：类名.静态变量名 类名.静态方法名")])]),s._v(" "),a("li",[a("p",[s._v("静态代码块：")]),s._v(" "),a("p",[s._v("静态代码块定义在类中方法外，静态代码块在非静态代码块之前执行（静态代码块—》非静态代码—》构造方法）。该类不管创建多少对象，静态代码块只执行一次")])]),s._v(" "),a("li",[a("p",[s._v("静态内部类（static修饰类的话只能修饰内部类）：")]),s._v(" "),a("p",[s._v("静态内部类与非静态内部类之间存在一个最大区别：")]),s._v(" "),a("ul",[a("li",[s._v("非静态内部类在编译完成之后会隐含得保存着一个引用，该引用是指向他的外围类")]),s._v(" "),a("li",[s._v("静态内部类，没有保存外部类引用")])]),s._v(" "),a("p",[s._v("没有这个引用意味着")]),s._v(" "),a("ol",[a("li",[s._v("他的创建不需要依赖外围类的创建")]),s._v(" "),a("li",[s._v("他不能使用任何外围类的非static成员变量和方法")])])]),s._v(" "),a("li",[a("p",[s._v("静态导包（用来导入类中的静态资源，1.5 之后的新特性）")]),s._v(" "),a("p",[s._v("格式为："),a("code",[s._v("import static")]),s._v(" 这两个关键字连用可以指定导入某个类中的指定静态资源，并且不需要使用类名调用类中静态成员，可以直接使用类中静态成员变量和成员方法。")])])]),s._v(" "),a("h2",{attrs:{id:"_3-super-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-super-关键字"}},[s._v("#")]),s._v(" 3. Super 关键字")]),s._v(" "),a("p",[s._v("super关键字用于从子类访问父类的变量和方法")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number = "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("showNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("在上面的例子中，Sub 类访问父类成员变量 number 并调用其其父类 Super 的 "),a("code",[s._v("showNumber（）")]),s._v(" 方法。")]),s._v(" "),a("p",[a("strong",[s._v("使用 this 和 super 要注意的问题：")])]),s._v(" "),a("ul",[a("li",[s._v("在构造器中使用 "),a("code",[s._v("super（）")]),s._v(" 调用父类中的其他构造方法时，该语句必须处于构造器的首行，否则编译器会报错。另外，this 调用本类中的其他构造方法时，也要放在首行。")]),s._v(" "),a("li",[s._v("this、super不能用在static方法中。")])]),s._v(" "),a("p",[a("strong",[s._v("简单解释一下：")])]),s._v(" "),a("p",[s._v("被 static 修饰的成员属于类，不属于单个这个类的某个对象，被类中所有对象共享。而 this 代表对本类对象的引用，指向本类对象；而 super 代表对父类对象的引用，指向父类对象；所以， "),a("strong",[s._v("this和super是属于对象范畴的东西，而静态方法是属于类范畴的东西")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_4-this关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-this关键字"}},[s._v("#")]),s._v(" 4. this关键字")]),s._v(" "),a("p",[s._v("定义：java 中的this 关键字用于在方法中引用当前实例")]),s._v(" "),a("p",[a("strong",[s._v("this 的使用方法")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("明确表示使用的成员变量（instance）而不是静态变量（static）或者局部变量（local）。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" javaFAQ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("methodName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" javaFAQ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("javaFAQ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" javaFAQ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("this在这里代表成员变量（译者注："),a("code",[s._v("this.javaFAQ")]),s._v("表示成员变量，"),a("code",[s._v("javaFAQ")]),s._v("表示局部变量）。在这个方法里，局部变量的优先级更高。因此，如果没有用"),a("code",[s._v("this.")]),s._v("表示的话则指定的是局部变量。在这个方法里面，如果局部变量的名字和成员变量的名字并不一样的话，那么用不用这个this其实就没有关系了。")])]),s._v(" "),a("li",[a("p",[s._v("this用来表示构造函数")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JavaQuestions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" javapapers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("javapapers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这里使用this调用同一个类中的另一个包含两个参数的构造方法")])]),s._v(" "),a("li",[a("p",[s._v("用于将当前java实例作为参数传递")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("itIsMe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("和上一个类似，this还可以用于返回当前java实例")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CurrentClassName")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("startMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("this也可以表示当前类的句柄")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Class className = this.getClass(); // this methodology is preferable in java\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("也可以通过 "),a("code",[s._v("Class className = ABC.class;")]),s._v("实现，这里的ABC指的是java类的类名。")])])]),s._v(" "),a("p",[s._v("通常，java中的this都与他的实例相关联，不能在静态方法中使用。")]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/SnailClimb/JavaGuide/blob/master/docs/java/Basis/final%E3%80%81static%E3%80%81this%E3%80%81super.md#finalstaticthissuper-%E5%85%B3%E9%94%AE%E5%AD%97%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"}},[s._v("final,static,this,super 关键字总结"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);