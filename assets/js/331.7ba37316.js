(window.webpackJsonp=window.webpackJsonp||[]).push([[331],{662:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"开发安全-xss-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发安全-xss-详解"}},[s._v("#")]),s._v(" 开发安全 - XSS 详解")]),s._v(" "),a("blockquote",[a("p",[s._v("XSS是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets,\nCSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。")])]),s._v(" "),a("h2",{attrs:{id:"xss-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-简介"}},[s._v("#")]),s._v(" XSS 简介")]),s._v(" "),a("p",[s._v("举一个简单的例子，就是留言板。我们知道留言板通常的任务就是把用户留言的内容展示出来。正常情况下，用户的留言都是正常的语言文字，留言板显示的内容也就没毛病。然而这个时候如果有人不按套路出牌，在留言内容中丢进去一行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <script>alert("aaa")<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("那么留言板界面的网页代码就会变成形如以下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <html>\n        <head>\n           <title>Board</title>\n        </head>\n        <body>\n        <div id="board">\n            <script>alert("aaa")<\/script>\n        </div>     \n        </body>\n    </html>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("那么这个时候问题就来了，当浏览器解析到用户输入的代码那一行时会发生什么呢？答案很显然，浏览器并不知道这些代码改变了原本程序的意图，会照做弹出一个信息框。")]),s._v(" "),a("p",[s._v("既然能够执行脚本，那么，这些脚本完全可以是：")]),s._v(" "),a("ul",[a("li",[s._v("链接劫持")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <script>window.location.href="http://www.baidu.com";<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("盗取cookie")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <script>alert("document.cookie");<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("对于攻击者来说，能够让受害者浏览器执行恶意代码的唯一方式，就是把代码注入到受害者从网站下载的网页中, 这就是xss攻击。")]),s._v(" "),a("h2",{attrs:{id:"xss-攻击类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击类型"}},[s._v("#")]),s._v(" XSS 攻击类型")]),s._v(" "),a("blockquote",[a("p",[s._v("通常XSS攻击分为："),a("code",[s._v("反射型xss攻击")]),s._v(", "),a("code",[s._v("存储型xss攻击")]),s._v(" 和\n"),a("code",[s._v("DOM型xss攻击")]),s._v("。同时注意以下例子只是简单的向你解释这三种类型的攻击方式而已，实际情况比这个复杂，具体可以再结合最后一节深入理解。")])]),s._v(" "),a("h3",{attrs:{id:"反射型xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射型xss攻击"}},[s._v("#")]),s._v(" 反射型xss攻击")]),s._v(" "),a("blockquote",[a("p",[s._v("反射型的攻击需要用户主动的去访问带攻击的链接，攻击者可以通过邮件或者短信的形式，诱导受害者点开链接。如果攻击者配合短链接URL，攻击成功的概率会更高。")])]),s._v(" "),a("p",[s._v("在一个反射型XSS攻击中，恶意文本属于受害者发送给网站的请求中的一部分。随后网站又把恶意文本包含进用于响应用户的返回页面中，发还给用户。")]),s._v(" "),a("p",[s._v("我们来看下面这个场景:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-security-xss-1.png",alt:"img"}})]),s._v(" "),a("ul",[a("li",[s._v("用户误点开了带攻击的url : "),a("code",[s._v("http://xxx?keyword=<script>alert('aaa')<\/script>")])]),s._v(" "),a("li",[s._v("网站给受害者的返回中包含了来自URL的的恶意文本")]),s._v(" "),a("li",[s._v("用户的浏览器收到文本后执行页面，会在网页中弹窗aaa")])]),s._v(" "),a("p",[s._v("注意，这里如果页面是后端模板渲染生成，keyword参数可能是在model里面设置参数的。")]),s._v(" "),a("h3",{attrs:{id:"存储型xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储型xss攻击"}},[s._v("#")]),s._v(" 存储型xss攻击")]),s._v(" "),a("blockquote",[a("p",[s._v("这种攻击方式恶意代码会被存储在数据库中，其他用户在正常访问的情况下，也有会被攻击，影响的范围比较大。")])]),s._v(" "),a("p",[s._v("我们来看这种攻击的一个场景")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-security-xss-3.png",alt:"img"}})]),s._v(" "),a("p",[s._v("1、攻击者通过评论表单提交将"),a("code",[s._v("<script>alert(‘aaa’)<\/script>")]),s._v("提交到网站")]),s._v(" "),a("p",[s._v("2、网站后端对提交的评论数据不做任何操作，直接存储到数据库中")]),s._v(" "),a("p",[s._v("3、其他用户访问正常访问网站，并且需要请求网站的评论数据")]),s._v(" "),a("p",[s._v("4、网站后端会从数据库中取出数据，直接返回给用户")]),s._v(" "),a("p",[s._v("5、用户得到页面后，直接运行攻击者提交的代码"),a("code",[s._v("<script>alert(‘aaa’)<\/script>")]),s._v("，所有用户都会在网页中弹出aaa的弹窗")]),s._v(" "),a("h3",{attrs:{id:"dom型xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom型xss攻击"}},[s._v("#")]),s._v(" DOM型xss攻击")]),s._v(" "),a("blockquote",[a("p",[s._v("基于DOM的XSS攻击是反射型攻击的变种。服务器返回的页面是正常的，只是我们在页面执行js的过程中，会把攻击代码植入到页面中。")])]),s._v(" "),a("p",[s._v("我们来看这种攻击的一个场景")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-security-xss-2.png",alt:"img"}})]),s._v(" "),a("p",[s._v("1、用户误点开了带攻击的url : "),a("code",[s._v("http://xxx?name=<script>alert('aaa')<\/script>")])]),s._v(" "),a("p",[s._v("2、网站给受害者的返回中正常的网页")]),s._v(" "),a("p",[s._v("3、用户的浏览器收到文本后执行页面合法脚本，这时候页面恶意脚本会被执行，会在网页中弹窗aaa")]),s._v(" "),a("p",[s._v("这种攻击方式发生在我们合法的js执行中，服务器无法检测我们的请求是否有攻击的危险")]),s._v(" "),a("h2",{attrs:{id:"xss-攻击的危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击的危害"}},[s._v("#")]),s._v(" XSS 攻击的危害")]),s._v(" "),a("ul",[a("li",[s._v("通过document.cookie盗取cookie")]),s._v(" "),a("li",[s._v("使用js或css破坏页面正常的结构与样式")]),s._v(" "),a("li",[s._v("流量劫持（通过访问某段具有window.location.href定位到其他页面）")]),s._v(" "),a("li",[s._v("Dos攻击：利用合理的客户端请求来占用过多的服务器资源，从而使合法用户无法得到服务器响应。")]),s._v(" "),a("li",[s._v("利用iframe、frame、XMLHttpRequest或上述Flash等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。")]),s._v(" "),a("li",[s._v("利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。")]),s._v(" "),a("li",[s._v("DOS（拒绝服务）客户端浏览器。")]),s._v(" "),a("li",[s._v("钓鱼攻击，高级的钓鱼技巧。")]),s._v(" "),a("li",[s._v("劫持用户Web行为，甚至进一步渗透内网。")]),s._v(" "),a("li",[s._v("蠕虫式挂马攻击、刷广告、刷浏量、破坏网上数据")])]),s._v(" "),a("h2",{attrs:{id:"xss-攻击的防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击的防御"}},[s._v("#")]),s._v(" XSS 攻击的防御")]),s._v(" "),a("p",[s._v("XSS攻击其实就是代码的注入。用户的输入被编译成恶意的程序代码。所以，为了防范这一类代码的注入，需要确保用户输入的安全性。对于攻击验证，我们可以采用以下两种措施：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("编码，就是转义用户的输入，把用户的输入解读为数据而不是代码")])]),s._v(" "),a("li",[a("strong",[s._v("校验，对用户的输入及请求都进行过滤检查，如对特殊字符进行过滤，设置输入域的匹配规则等")]),s._v(" 。")])]),s._v(" "),a("p",[s._v("具体比如：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("对于验证输入")]),s._v(" ，我们既可以在"),a("code",[s._v("服务端验证")]),s._v("，也可以在"),a("code",[s._v("客户端验证")])]),s._v(" "),a("li",[a("strong",[s._v("对于持久性和反射型攻击")]),s._v(" ，"),a("code",[s._v("服务端验证")]),s._v("是必须的，服务端支持的任何语言都能够做到")]),s._v(" "),a("li",[a("strong",[s._v("对于基于DOM的XSS攻击")]),s._v(" ，验证输入在客户端必须执行，因为从服务端来说，所有发出的页面内容是正常的，只是在客户端js代码执行的过程中才发生可攻击")]),s._v(" "),a("li",[s._v("但是对于各种攻击方式，"),a("strong",[s._v("我们最好做到客户端和服务端都进行处理")]),s._v(" 。")])]),s._v(" "),a("p",[s._v("其它还有一些辅助措施，比如：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("入参长度限制")]),s._v(" ： 通过以上的案例我们不难发现xss攻击要能达成往往需要较长的字符串，因此对于一些可以预期的输入可以通过限制长度强制截断来进行防御。")]),s._v(" "),a("li",[s._v("设置cookie httponly为true（具体请看下文的解释）")])]),s._v(" "),a("p",[s._v("具体措施如下：")]),s._v(" "),a("h3",{attrs:{id:"escapehtml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#escapehtml"}},[s._v("#")]),s._v(" escapeHTML")]),s._v(" "),a("ul",[a("li",[s._v("前端：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    // util封装可以参考 HTMLParser.js, 或者自己封装\n    util.escapeHtml(html);\n    \n\n  * 后端， 推荐使用ApacheCommon包下 `StringEscapeUtils` – 用于正确处理转义字符，产生正确的Java、JavaScript、HTML、XML和SQL代码；\n\n    \n    \n    // encode html\n    System.out.println(StringEscapeUtils.escapeHtml("<a>abc</a>"));\n    System.out.println(StringEscapeUtils.unescapeHtml("&lt;a&gt;abc&lt;/a&gt;"));\n    \n    // encode js\n    System.out.println(StringEscapeUtils.escapeJavaScript("<script>alert(\'123\')<script>"));\n    System.out.println(StringEscapeUtils.unescapeJavaScript("<script>alert(\\\'123\\\')<script>"));\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"过滤或者校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤或者校验"}},[s._v("#")]),s._v(" 过滤或者校验")]),s._v(" "),a("p",[s._v("校验是一种过滤用户输入以至于让代码中恶意部分被移除的行为。校验都是通过一定的经验和规则，对用户的输入进行匹配，过滤，去除掉存在攻击风险的部分。")]),s._v(" "),a("p",[s._v("我们可以通过黑名单的方式和白名单的方式来设置我们的规则，对用户提交的数据进行有效性验证，仅接受符合我们期望格式的内容提交，阻止或者忽略除此外的其他任何数据。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("黑名单")]),s._v(" 我们可以把某些危险的标签或者属性纳入黑名单，过滤掉它。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("白名单")]),s._v(" 这种方式只允许部分标签和属性，不在这个白名单中的，一律过滤掉它。")])])]),s._v(" "),a("p",[s._v("这里举个例子，"),a("strong",[s._v("富文本的防御")]),s._v(" : 富文本的情况非常的复杂，js可以藏在标签里，超链接url里，何种属性里。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('<script>alert(1)<\/script>\n<a href="javascript:alert(1)"></a>\n<img src="abc" onerror="alert(1)"/>\n')])])]),a("p",[s._v("所以我们不能过用上面的方法做简单的转义,\n因为情况实在太多了。思路就是黑白名单校验，这里提供一个包，帮助我们去解析html树状结构，它使用起来和jquery非常的类似。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    npm install cheerio --save\n    \n    \n    \n    var xssFilter = function(html) {\n        if(!html) return '';\n        var cheerio = require('cheerio');\n        var $ = cheerio.load(html);\n        //白名单\n        var whiteList = {\n            'html' : [''],\n            'body' : [''],\n            'head' : [''],\n            'div' : ['class'],\n            'img' : ['src'],\n            'a' : ['href'],\n            'font':['size','color']\n        };\n    \n        $('*').each(function(index,elem){\n            if(!whiteList[elem.name]) {\n                $(elem).remove();\n                return;\n            }\n            for(var attr in elem.attribs) {\n                if(whiteList[elem.name].indexOf(attr) === -1) {\n                    $(elem).attr(attr,null);\n                }\n            }\n    \n        });\n    \n        return $.html();\n    }\n    \n    console.log(xssFilter('<div><font color=\"red\">你好</font><a href=\"http://www.baidu.com\">百度</a><script>alert(\"哈哈你被攻击了\")<\/script></div>'));\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("h3",{attrs:{id:"csp-content-security-policy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csp-content-security-policy"}},[s._v("#")]),s._v(" CSP(Content Security Policy)")]),s._v(" "),a("p",[s._v("内容安全策略（Content Security Policy，简称CSP）是一种以可信白名单作机制，来限制网站中是否可以包含某来源内容。")]),s._v(" "),a("p",[s._v("CSP对你用于浏览页面的浏览器做出了限制，以确保它只能从可信赖来源下载的资源。 "),a("em",[s._v("资源")]),s._v("\n可以是脚本，样式，图片，或者其他被页面引用的文件。这意味着即使攻击者成功的在你的网站中注入了恶意内容，CSP也能免于它被执行。")]),s._v(" "),a("p",[s._v("默认配置下不允许执行内联代码（"),a("code",[s._v("<script>")]),s._v("块内容，内联事件，内联样式），以及禁止执行eval() , newFunction() ,\nsetTimeout([string], ...) 和setInterval([string], ...) 。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("只允许本站资源")]),s._v(" "),a("p",[s._v("Content-Security-Policy： default-src ‘self’")])]),s._v(" "),a("li",[a("p",[s._v("允许本站的资源以及任意位置的图片以及 下的脚本。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    Content-Security-Policy： default-src ‘self’; img-src *;\n    script-src \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"xss-攻击再深入理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击再深入理解"}},[s._v("#")]),s._v(" XSS 攻击再深入理解")]),s._v(" "),a("h3",{attrs:{id:"对script再做阐述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对script再做阐述"}},[s._v("#")]),s._v(" 对"),a("code",[s._v("script")]),s._v("再做阐述")]),s._v(" "),a("blockquote",[a("p",[s._v("有很多初学者以为只要对"),a("code",[s._v("<script>")]),s._v("进行替换就可以了？其实不是，具体看下面：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    // 外部攻击代码\n    <script src='ls.js'><\/script>  \n    \n    // 注释方法防止过滤  \n    <script>alert/*注释*/('XSS')<\/script>    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"是不是只要对script进行防御呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是不是只要对script进行防御呢"}},[s._v("#")]),s._v(" 是不是只要对"),a("code",[s._v("script")]),s._v("进行防御呢？")]),s._v(" "),a("blockquote",[a("p",[s._v("用户的输入通过"),a("code",[s._v("<script>这里是脚本<\/script>")]),s._v("插入脚本只是最基本的一种方式， 其它方式还有：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    // img链接地址xss\n    <img src=\"javascript:alert('XSS')\">    \n    \n    // 加载图像失败执行\n    <img src='null' οnerrοr=\"alert('XSS')\">    \n    \n    // 利用onload，onXXX事件\n    <iframe onload=\"alert('XSS')\">\n    \n    // a链接的xss\n    <a href =\"javascript:alert('XSS')\"></a>   \n    \n    // 在css样式中加入\n    body{bockground-image:url(javascript:alert('XSS'))}   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"通过xss盗用cookie危害是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过xss盗用cookie危害是什么"}},[s._v("#")]),s._v(" 通过xss盗用cookie危害是什么？")]),s._v(" "),a("blockquote",[a("p",[s._v("csrf攻击其实是不能盗用cookie的，它只是以当前的名义进行恶意操作；而xss攻击是可以直接盗用cookie。")])]),s._v(" "),a("p",[s._v("那盗用cookie的危害是什么？比如拿到用户的cookie信息，然后传送到攻击者自己的服务器，从cookie中提取敏感信息，拿到用户的登录信息，或者攻击者可以通过修改DOM在页面上插入一个假的登陆框，也可以把表单的"),a("code",[s._v("action")]),s._v("属性指向他自己的服务器地址，然后欺骗用户提交自己的敏感信息。")]),s._v(" "),a("p",[s._v("这就是为什么cookie也是要防御的，比如")]),s._v(" "),a("ul",[a("li",[s._v("设置http-only")]),s._v(" "),a("li",[s._v("设置cookie的有效周期")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    @RequestMapping("/login")\n    @ResponseBody\n    public void login(HttpServletRequest request, HttpServletResponse response) throws IOException {\n        Cookie cookie = new Cookie("access_token", UUID.randomUUID().toString());\n        cookie.setHttpOnly(true); // 这里\n        cookie.setPath("/");\n        cookie.setDomain("localhost");\n        response.addCookie(cookie);\n        response.sendRedirect("http://localhost:8088/index.html");\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"xss攻击和csrf攻击配合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击和csrf攻击配合"}},[s._v("#")]),s._v(" xss攻击和csrf攻击配合")]),s._v(" "),a("blockquote",[a("p",[s._v("一般攻击可能不是单一的行为，而是可能会组合攻击；比如xss攻击一般还可以配合csrf攻击进行配合攻击，这里给个例子，方便你理解；注意，只是仅仅方便你理解，实际不是这么简单。")])]),s._v(" "),a("p",[s._v("假设你可以通过如下GET请求方式进行修改密码，这是典型的csrf攻击方式："),a("RouterLink",{attrs:{to:"/pages/dev-protocol-csrf.html"}},[s._v("开发安全 - CSRF\n详解")])],1),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    http://127.0.0.1/test/vulnerabilities/csrf/?\n    password_new=123456&password_conf=123456&Change=Change\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("那么你可以通过如下方式xss攻击添加脚本")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <script type="text/javascript" src="http://127.0.0.1/test/vulnerabilities/csrf/?\n    password_new=123456&password_conf=123456&Change=Change#"><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"对于后端渲染html框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于后端渲染html框架"}},[s._v("#")]),s._v(" 对于后端渲染HTML框架")]),s._v(" "),a("p",[s._v("在实际的开发中，后端框架（比如SpringMVC相关框架）modelAndView是可以通过viewResolver渲染生成html的；而一般的视图渲染解析框架都已经可以处理一部分xss攻击的情况，比如thymeleaf，freemarker等等。")]),s._v(" "),a("p",[s._v("这里要提醒你的是"),a("code",[s._v("避免误用")]),s._v(", 举个thymeleaf的例子，这个漏洞是我在实际的渗透测试中遇到的一个xss攻击:")]),s._v(" "),a("ul",[a("li",[s._v("html页面，这是一个封装的一个消息module")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    <div id="msgContainer">\n        <div th:utext="${msg}"></div>\n    </div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("后端添加")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    // param\n    String param = "your input name";\n    \n    // 后端根据不同的处理情况，返回不同的信息\n    String msg = "<b>Warning</b>: this is pdai\'s warning, invalid for your input name: " + param; \n    model.addMsg("msg", msg);\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这里后端的本意是期望封装一个msg组件，并且可以通过html方式高亮一些关键字，做到最大程度的通用。")]),s._v(" "),a("p",[s._v("但问题是\n"),a("code",[s._v("th:utext")]),s._v("不做内容编码的，而且存在输入参数（可能这两块是不同的人写的，写后端msg组件的人觉得"),a("code",[s._v("<b>Warning</b>")]),s._v("很方便；但是不会意识到，其他人可能可能会添加用户的输入参数进来），一旦用户的输入中包含脚本，将导致xss注入的可能。")]),s._v(" "),a("h3",{attrs:{id:"对于前端渲染html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于前端渲染html"}},[s._v("#")]),s._v(" 对于前端渲染HTML")]),s._v(" "),a("p",[s._v("在使用 .innerHTML、.outerHTML、document.write() 时要特别小心，不要把不可信的数据作为 HTML\n插到页面上，而应尽量使用 .textContent、.setAttribute() 等。")]),s._v(" "),a("p",[s._v("如果用 Vue/React 技术栈，并且不使用 v-html/dangerouslySetInnerHTML 功能，就在前端 render 阶段避免\ninnerHTML、outerHTML 的 XSS 隐患。")]),s._v(" "),a("p",[s._v("DOM 中的内联事件监听器，如 location、onclick、onerror、onload、onmouseover 等，"),a("code",[s._v("<a>")]),s._v(" 标签的 href\n属性，JavaScript 的 eval()、setTimeout()、setInterval()\n等，都能把字符串作为代码运行。如果不可信的数据拼接到字符串中传递给这些 API，很容易产生安全隐患，请务必避免。")]),s._v(" "),a("p",[a("strong",[s._v("在操作时可以参考如下")]),s._v(" ：")]),s._v(" "),a("ul",[a("li",[s._v("前端有个JS库叫 "),a("code",[s._v("HTMLParser.js")]),s._v(", 可以用来encodeHtml")]),s._v(" "),a("li",[s._v("有一个类库是针对防XSS攻击的："),a("a",{attrs:{href:"https://github.com/leizongmin/js-xss",target:"_blank",rel:"noopener noreferrer"}},[s._v("js-xss在新窗口打开"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"浏览器之间对xss处理有差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器之间对xss处理有差异"}},[s._v("#")]),s._v(" 浏览器之间对xss处理有差异")]),s._v(" "),a("blockquote",[a("p",[s._v("对于有些xss漏洞可能在某些浏览器无法复现的问题？在某些浏览器某些版本下：")])]),s._v(" "),a("ul",[a("li",[s._v("chrome浏览器自带防御,可拦截反射性XSS（HTML内容和属性）")]),s._v(" "),a("li",[s._v("firefox不会自动拦截")])]),s._v(" "),a("p",[s._v("这个在做渗透测试，或者开发修复测试时要注意下这个问题。")]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("ul",[a("li",[s._v("https://blog.csdn.net/Jeffrey20170812/article/details/83749119")]),s._v(" "),a("li",[s._v("https://blog.csdn.net/weixin_38984030/article/details/93494600")]),s._v(" "),a("li",[s._v("https://segmentfault.com/a/1190000018266262")]),s._v(" "),a("li",[s._v("https://segmentfault.com/a/1190000013315450/")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/unclekeith/p/7750681.html")]),s._v(" "),a("li",[s._v("https://zhuanlan.zhihu.com/p/26177815")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/caizhenbo/p/6836390.html")])])])}),[],!1,null,null,null);a.default=n.exports}}]);