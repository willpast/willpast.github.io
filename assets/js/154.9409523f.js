(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{486:function(t,s,a){"use strict";a.r(s);var e=a(4),i=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"【知识框架】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【知识框架】"}},[t._v("#")]),t._v(" 【知识框架】")]),t._v(" "),s("p",[s("strong",[t._v("软件设计")]),t._v("是计算机学科的的核心内容之一。软件设计时要考虑的首要问题是数据的表示、组织和处理方法。")]),t._v(" "),s("p",[s("strong",[t._v("数据结构")]),t._v("是软件设计的重要理论和实践基础。数据结构设计和算法设计是软件系统设计的基础和核心。")]),t._v(" "),s("p",[s("strong",[t._v("数据结构＋算法＝程序设计")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/ka-struct.png",alt:"知识架构"}})]),t._v(" "),s("h2",{attrs:{id:"_1-数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据结构"}},[t._v("#")]),t._v(" 1 数据结构")]),t._v(" "),s("h3",{attrs:{id:"_1-1-基本概念和术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基本概念和术语"}},[t._v("#")]),t._v(" 1.1 基本概念和术语")]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-数据"}},[t._v("#")]),t._v(" 1.1.1 数据")]),t._v(" "),s("p",[s("strong",[t._v("数据(Data)")]),t._v("：所有能输入到计算机中并能被程序识别和处理的符号集合。包括:  "),s("strong",[t._v("数值数据")]),t._v("： 整数、实数等。"),s("strong",[t._v("非数值数据")]),t._v("：图形、图象、声音、文字等。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-2-数据元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-数据元素"}},[t._v("#")]),t._v(" 1.1.2 数据元素")]),t._v(" "),s("p",[s("strong",[t._v("数据元素(Data Element)：")]),t._v(" 表示一个事物的一组数据称为一个数据元素（结点、顶点、记录）；数据元素是数据的基本单位。一个数据元素中能够识别该元素的一个或多个数据项称为关键字，能够唯一识别数据元素的关键字称为主关键字。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-3-数据项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-数据项"}},[t._v("#")]),t._v(" 1.1.3 数据项")]),t._v(" "),s("p",[s("strong",[t._v("数据项(Data Item)：")]),t._v(" 是组成数据元素的、有独立含义的、不可分割的最小单位。例如，学生基本信息表中的学号、姓名、性别等都是数据项。")]),t._v(" "),s("p",[t._v("数据项：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/dataitem.png",alt:"数据项"}})]),t._v(" "),s("h4",{attrs:{id:"_1-1-4-数据对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-数据对象"}},[t._v("#")]),t._v(" 1.1.4 数据对象")]),t._v(" "),s("p",[s("strong",[t._v("数据对象（Data Object）：")]),t._v(" 是性质相同的数据元素的集合，是数据的一个子集。只要集合内的性质均相同，都可称之为一个数据对象。")]),t._v(" "),s("p",[s("strong",[t._v("各术语关系图：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/dataStructRel.png",alt:"各术语关系图"}})]),t._v(" "),s("h4",{attrs:{id:"_1-1-5-数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-数据结构"}},[t._v("#")]),t._v(" "),s("strong",[t._v("1.1.5 数据结构")])]),t._v(" "),s("p",[s("strong",[t._v("数据结构(data structure)")]),t._v("：是相互之间存在一种或多种特定关系的数据元素的集合，即带“结构”的数据元素的集合。“结构”就是指数据元素之间存在的关系，分为逻辑结构和存储结构，同一逻辑结构可以对应不同的存储结构。")]),t._v(" "),s("p",[t._v("数据结构研究的是数据的逻辑结构和数据的存储(物理)结构以及它们之间的相互关系，并对这种结构定义相适应的运算，设计出相应的算法。算法的设计取决于数据的逻辑结构，而算法的实现依赖于指定的存储结构。")]),t._v(" "),s("p",[t._v("数据结构包含三个方面：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/datastruct3.png",alt:"数据结构三方面"}})]),t._v(" "),s("h4",{attrs:{id:"_1-1-6-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-6-类型"}},[t._v("#")]),t._v(" 1.1.6 类型")]),t._v(" "),s("p",[s("strong",[t._v("类型（type）")]),t._v("：是具有相同逻辑意义的一组值的集合。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-7-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-7-数据类型"}},[t._v("#")]),t._v(" 1.1.7 数据类型")]),t._v(" "),s("p",[s("strong",[t._v("数据类型（Data Type）")]),t._v("：是指一个类型和定义在这个类型上的操作集合。数据类型定义了数据的性质、取值范围以及对数据所能进行的各种操作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("【例】java中int类型的值集是[-2³¹,...,-2,-1,-0,1,2,...,2³¹-1],这个集的操作集合是[+,-,*,/,%,=,<,>,<=,>=]。\n")])])]),s("p",[t._v("数据类型与数据结构的不同之处：")]),t._v(" "),s("p",[t._v("数据类型研究的是每种数据所具有的特性，以及对这种特性的数据能够进行哪些操作。")]),t._v(" "),s("p",[t._v("数据结构研究的是数据元素之间具有的相互关系。")]),t._v(" "),s("p",[t._v("数据结构与数据元素的数据类型无关，也不随数据元素值的变化而变化。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-8-抽象数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-8-抽象数据类型"}},[t._v("#")]),t._v(" 1.1.8 抽象数据类型")]),t._v(" "),s("p",[s("strong",[t._v("抽象数据类型（Abstract Data Type,ADT）")]),t._v(" 是指一个数学模型（数据结构）以及定义在该模型上的一组操作。通常使用抽象数据类型描述数据结构的逻辑结构和操作，用数据对象, 数据关系, 基本操作这样的三元组来表示抽象数据类型。")]),t._v(" "),s("p",[s("strong",[t._v("抽象")]),t._v("就是抽取出实际问题的本质。在计算机中使用二进制数来表示数据，在汇编语言中则可给出各种数据的十进制表示，它们是二进制数据的抽象，使用者在编程时可以直接使用，不必考虑实现细节。")]),t._v(" "),s("p",[t._v("在高级语言中，则给出更高一级的数据抽象，出现了数据类型，如实型、字符型等，可以进一步利用这些类型构造出线性表、栈、队列、树、图等复杂的抽象数据类型。")]),t._v(" "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/adtmodel.png",width:"500px",height:"300px"}}),t._v(" "),s("ul",[s("li",[s("p",[t._v("抽象数据模型包含数据结构和操作函数(公有的和私有的)")])]),t._v(" "),s("li",[s("p",[t._v("应用程序只能通过接口访问公有操作。私有操作供内部使用。")])]),t._v(" "),s("li",[s("p",[t._v("数据结构位于抽象数据结构内部，被公有和私有函数操作")])]),t._v(" "),s("li",[s("p",[t._v("公有操作和接口应该独立于实现")])])]),t._v(" "),s("blockquote"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("【例】复数抽象数据类型描述如下：\nADT Complex\n{\n    double real,imag;\n    Complex(double real,double imag);\n    Complex add(Complex c);\n    Complex sub(Complex c);\n}\n\n【例】用接口描述线性表的抽象数据结构：\npublic interface LList<T>                 //线性表接口\n{\n    boolean isEmpty();                    //判断线性表是否为空\n    int length();                         //返回线性表长度\n    T get(int index);                     //返回序号为index的对象\n    T set(int index, T element);          //设置序号为index的对象为element，返回原对象\n    boolean add(int index, T element);    //插入element对象，插入后对象序号为index\n    boolean add(T element);               //插入element对象，插入位置没有约定\n    T remove(int index);                  //移去序号为index的对象，返回被移去对象\n    void clear();                         //清空线性表\n}\n")])])]),s("h3",{attrs:{id:"_1-2-数据结构三个方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数据结构三个方面"}},[t._v("#")]),t._v(" 1.2 数据结构三个方面")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-数据的逻辑结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-数据的逻辑结构"}},[t._v("#")]),t._v(" 1.2.1 数据的逻辑结构")]),t._v(" "),s("p",[t._v("从逻辑关系上描述数据，它与数据的存储无关，是独立于计算机的。因此，数据的逻辑结构可以看作是从具体问题抽象出来的数学模型。")]),t._v(" "),s("blockquote",[s("p",[t._v("数据的逻辑结构有两个要素：一是"),s("strong",[t._v("数据元素")]),t._v("（数据的基本单位）；二是"),s("strong",[t._v("关系")]),t._v("，关系是指数据元素间的逻辑关系。根据数据元素之间关系的不同特性，通常有四类基本结构：线性结构，树结构，图结构，集合结构，其中集合结构、树结构和图结构都属于非线性结构。")])]),t._v(" "),s("p",[s("strong",[t._v("集合：")]),t._v(" 数据元素之间没有关系")]),t._v(" "),s("p",[s("strong",[t._v("线性结构：")]),t._v(" 数据元素之间是一对一的线性关系")]),t._v(" "),s("p",[s("strong",[t._v("树结构：")]),t._v(" 数据元素之间是一对多的层次关系")]),t._v(" "),s("p",[s("strong",[t._v("图结构：")]),t._v(" 数据元素之间是多对多的任意关系")]),t._v(" "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/logicstruct.png",width:"500px",height:"350px"}}),t._v(" "),s("p",[s("strong",[t._v("线性结构")]),t._v("包括线性表、栈和队列（具有特殊限制的线性表，数据操作只能在表的一端或两端进行)、字符串（也是特殊的线性表，其特殊性表现在它的数据元素仅由一个字符组成)、数组（是线性表的推广，它的数据元素是一个线性表)、广义表（也是线性表的推广，它的数据元素是一个线性表，但不同构，即或者是单元素，或者是线性表)。")]),t._v(" "),s("p",[s("strong",[t._v("非线性结构")]),t._v("包括树（具有多个分支的层次结构）和二叉树（具有两个分支的层次结构）、有向图（一种图结构，边是顶点的有序对）和无向图（另一种图结构，边是顶点的无序对）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/logicstruct-2.png",alt:"logicstruct2"}})]),t._v(" "),s("h4",{attrs:{id:"_1-2-2-数据的存储结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-数据的存储结构"}},[t._v("#")]),t._v(" 1.2.2 数据的存储结构")]),t._v(" "),s("blockquote",[s("p",[t._v("数据的"),s("strong",[t._v("物理结构")]),t._v("是数据结构在计算机中的表示（又称映像），它包括数据元素的机内表示和关系的机内表示。由于具体实现的方法有顺序、链接、索引、散列等多种，所以，一种数据结构的逻辑结构根据需要可以表示成多种存储结构。")]),t._v(" "),s("p",[s("strong",[t._v("数据元素")]),t._v("的机内表示（映像方法）： 用二进制位（bit）的位串表示数据元素。通常称这种位串为节点（node）。当数据元素有若干个数据项组成时，位串中与各个数据项对应的子位串称为数据域（data field）。因此，节点是数据元素的机内表示（或机内映像）。")]),t._v(" "),s("p",[s("strong",[t._v("关系")]),t._v("的机内表示（映像方法）：数据元素之间的关系的机内表示可以分为顺序映像和非顺序映像，常用两种存储结构：顺序存储结构和链式存储结构。顺序映像借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系。非顺序映像借助指示元素存储位置的指针（pointer）来表示数据元素之间的逻辑关系。")])]),t._v(" "),s("p",[t._v("数据元素在计算机中有四种基本的存储结构：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("顺序存储")]),t._v("：用一组连续的存储单元依次存储数据元素，数据元素之间的逻辑关系由元素的存储位置表示，数据间的逻辑关系与物理关系一致，如数组，数组分为静态数组和动态数组。\n")]),s("details",[s("summary",[t._v("静态数组和动态数组")]),t._v(" "),s("ul",[s("li",[t._v("静态数组：在定义时就已经确定了数组的大小。")]),t._v(" "),s("li",[t._v("动态数组：可以在程序运行时动态地分配内存空间。")])])]),s("p"),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/store-order.png",alt:"顺序存储"}})]),t._v(" "),s("ul",[s("li",[t._v("优点：随机存取表中元素，访问速度快")]),t._v(" "),s("li",[t._v("缺点：插入和删除操作需要移动元素，效率低下")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("链式存储")]),t._v("：用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系用指针来表示，如链表，链表分为静态链表和动态链表。")]),t._v(" "),s("details",[s("summary",[t._v("静态链表和动态链表")]),t._v(" "),s("ul",[s("li",[t._v("静态链表：是用数组来实现链式存储结构，一种用数组描述的链表，在物理地址上是连续的，而且需要预先分配地址空间大小。\n               数据全部存储在数组中(顺序表)，但存储的位置是随机的，数据直接的一对一关系是通过一个整型变量（称为 “游标”，类似指针的功能）维持。\n               所以静态链表的初始长度一般是固定的，即结点的个数是固定的。\n           ")]),t._v(" "),s("li",[t._v("动态链表：它由若干个结点组成，每个结点包含两部分：数据域和指针域。其中，数据域存储数据，指针域存储下一个结点的地址。它是一种动态结构，不需要预先设定空间大小\n              "),s("ul",[t._v(". 单向链表：是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的地址。一个单向链表包含当前节点的值和一个指向下一个节点的指针。如果要访问链表中的某个元素，需要从第一个元素开始遍历整个链表，直到找到所需的元素为止。")]),t._v(" "),s("ul",[t._v(". 双向链表：是一种链表，它的每个节点除了存储数据外，还有两个指针记录上一个节点和下一个节点的地址，分别是前驱指针 prev 和 后继指针 next 。")]),t._v(" "),s("ul",[t._v(". 循环链表：是一种特殊的链表，它的尾节点指向头节点，形成一个环形结构。循环链表可以是单向循环链表，也可以是双向循环链表。")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/store-link.png",alt:"链式存储"}})]),t._v(" "),s("ul",[s("li",[t._v("优点：插入和删除操作不需要移动元素，效率高")]),t._v(" "),s("li",[t._v("缺点：不能随机存取表中元素，访问速度慢")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("索引存储")]),t._v("：索引存储是在记录文件之外建立一个索引表，索引表中的每个索引项对应文件中的一个记录，索引项由两部分组成：一个是索引项值，另一个是指向该记录的指针。")]),t._v(" "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/store-index.png",width:"500px",height:"300px"}}),t._v(" "),s("ul",[s("li",[t._v("优点：大大提高数据查询速度；可以提高数据检索的效率，降低数据库的IO成本；通过索引列对数据进行排序，降低数据的排序成本降低了CPU的消耗")]),t._v(" "),s("li",[t._v("缺点：索引会占据磁盘空间；索引虽然会提高查询效率，但是会降低更新表的效率；维护索引需要消耗数据库资源")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("散列存储")]),t._v("：散列存储是根据记录的关键字直接计算出该记录的存储地址，又称哈希（Hash）存储，以加快查找速度，它是一种通过关键字直接访问记录的数据结构。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/store-hashlink.png",alt:"散列存储"}})]),t._v(" "),s("p",[t._v("大多数情况下，至少会有两个数据被映射到了同一个位置，这种情况我们称为冲突。解决冲突的方式常见的有两种，链接法和开放寻址法")]),t._v(" "),s("ul",[s("li",[t._v("链式法：是将散列表中的每个元素都指向一个链表，当多个键映射到同一个数组索引上时，它们会被添加到同一个链表中。")]),t._v(" "),s("li",[t._v("开放寻址法：是在散列表中寻找空闲的位置来存储冲突的元素，当多个键映射到同一个数组索引上时，它们会被添加到下一个空闲位置上。")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-2-3-数据的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-数据的操作"}},[t._v("#")]),t._v(" 1.2.3 数据的操作")]),t._v(" "),s("p",[s("strong",[t._v("数据操作")]),t._v("指对一种数据结构中的数据元素进行各种运算或处理。每种数据结构都有一组数据操作。")]),t._v(" "),s("p",[t._v("数据操作定义在数据的逻辑结构上；数据操作的实现依赖于数据的存储结构。常见数据操作如下：")]),t._v(" "),s("ul",[s("li",[t._v("初始化。")]),t._v(" "),s("li",[t._v("判断是否空状态。")]),t._v(" "),s("li",[t._v("求长度：统计元素个数。")]),t._v(" "),s("li",[t._v("包含：判断是否包含指定元素。（contain）")]),t._v(" "),s("li",[t._v("遍历：按某种次序访问所有元素，每个元素只被访问一次。（traverse）")]),t._v(" "),s("li",[t._v("取值：获取指定元素值。")]),t._v(" "),s("li",[t._v("置值：设置指定元素值。")]),t._v(" "),s("li",[t._v("插入：增加指定元素。")]),t._v(" "),s("li",[t._v("删除：移去指定元素。")]),t._v(" "),s("li",[t._v("排序。")])]),t._v(" "),s("p",[t._v("数据的逻辑结构、数据的存储结构及操作这三方面是一个整体，缺一不可。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("存储结构是数据结构不可缺少的一个方面。同一逻辑结构的不同存储结构可冠以不同的数据结构名称来标识。\n【例】线性表是一种逻辑结构，若采用顺序存储，可称其为顺序表；若采用链式存储，则可称其为链表；若采用散列存储，则可称为散列表。\n操作也是数据结构不可分割的一个方面。在给定了数据的逻辑结构和存储结构之后，按定义的操作集合及其操作的性质不同，也可能导致完全不同的数据结构。\n【例】若对线性表上的插入、删除操作限制在表的一端进行，则该线性表称之为栈；若对插入限制在表的一端进行，而删除限制在表的另一端进行，则该线性表称之为队列。\n更进一步，若线性表采用顺序存储（或链式存储）作为存储结构，则对插入和删除操作做了上述限制之后，又可分别得到顺序栈（或链栈）、顺序队列（或链队列）。\n")])])]),s("p",[s("strong",[t._v("数据结构关系图：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ds_algo/ka-struct2.png",alt:"数据结构关系图"}})]),t._v(" "),s("h2",{attrs:{id:"_2-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法"}},[t._v("#")]),t._v(" 2 算法")]),t._v(" "),s("h3",{attrs:{id:"_2-1-算法定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-算法定义"}},[t._v("#")]),t._v(" 2.1 算法定义")]),t._v(" "),s("p",[s("strong",[t._v("算法")]),t._v("（Algorithm）定义：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作，一个算法是一个有穷规则的集合。")]),t._v(" "),s("p",[s("strong",[t._v("算法和数据结构")])]),t._v(" "),s("ul",[s("li",[t._v("算法建立在数据结构之上，对数据的操作需用算法来描述。")]),t._v(" "),s("li",[t._v("算法设计依赖数据的逻辑结构，算法实现依赖数据的存储结构。")]),t._v(" "),s("li",[t._v("实现一种抽象数据类型，需要选择合适的存储结构。")])]),t._v(" "),s("h3",{attrs:{id:"_2-2-算法特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-算法特性"}},[t._v("#")]),t._v(" 2.2 算法特性")]),t._v(" "),s("h4",{attrs:{id:"_2-2-1-算法基本特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-算法基本特性"}},[t._v("#")]),t._v(" 2.2.1 算法基本特性")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("有穷性")]),t._v("：对任意一组合法的输入值，算法在执行有穷步骤之后一定能结束。即算法的操作步骤为有限个，且每步都能在有限时间内完成。")]),t._v(" "),s("li",[s("strong",[t._v("确定性")]),t._v("：对于每种情况下所应执行的操作，在算法中都有确切的规定，使算法的执行者或阅读者都能明确其含义及如何去执行。并且在任何条件下，算法都只有一条执行路径。")]),t._v(" "),s("li",[s("strong",[t._v("可行性")]),t._v("：算法中的所有操作都必须足够基本，都可以通过已实现的基本操作运算有限次实现之。")]),t._v(" "),s("li",[s("strong",[t._v("有输入")]),t._v("：算法有零个或多个输入数据。输入数据是算法的加工对象，既可以由算法指定，也可以在算法执行过程中通过输入得到。")]),t._v(" "),s("li",[s("strong",[t._v("有输出")]),t._v("：算法有一个或多个输出数据。输出数据是一组与输入有确定关系的量值，是算法进行信息加工后得到的结果，无输出的算法没有任何意义。当用函数描述算法时，输出多用返回值或引用类型的形参表示。")])]),t._v(" "),s("h4",{attrs:{id:"_2-2-2-算法设计目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-算法设计目标"}},[t._v("#")]),t._v(" 2.2.2 算法设计目标")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("正确性")]),t._v("：算法应确切地满足应用问题的需求，这是算法设计的基本目标。")]),t._v(" "),s("li",[s("strong",[t._v("健壮性")]),t._v("：当输入的数据非法时,好的算法能适当地做出正确反应或进行相应处理，而不会产生一些莫名其妙的输出结果。")]),t._v(" "),s("li",[s("strong",[t._v("可读性")]),t._v("：算法表达思路清晰，简洁明了，易于理解。")]),t._v(" "),s("li",[s("strong",[t._v("高效性")]),t._v("：高效性包括时间和空间两个方面。时间高效是指算法设计合理，执行效率高，可以用时间复杂度来度量;空间高效是指算法占用存储容量合理，可以用空间复杂度来度量。时间复杂度和空间复杂度是衡量算法的两个主要指标。")])]),t._v(" "),s("h4",{attrs:{id:"_2-2-3-算法的度量方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-算法的度量方法"}},[t._v("#")]),t._v(" 2.2.3 算法的度量方法")]),t._v(" "),s("p",[t._v("事后统计方法（不科学、不准确）、事前分析估算方法。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-算法复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-算法复杂度"}},[t._v("#")]),t._v(" 2.3 算法复杂度")]),t._v(" "),s("h4",{attrs:{id:"_2-3-1-算法时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-算法时间复杂度"}},[t._v("#")]),t._v(" 2.3.1 算法时间复杂度")]),t._v(" "),s("p",[s("strong",[t._v("定义")]),t._v("：在进行算法分析时，语句总的执行次数T(n)是关于问题规模n的函数，进而分析T(n)随n的变化情况并确定T(n)的数量级。\n"),s("strong",[t._v("算法的时间复杂度")]),t._v("，也就是算法的时间度量，记作：T(n)=O(f(n))。")]),t._v(" "),s("p",[t._v("他表示随问题规模n的增大，算法执行时间的增长率和f(n)的增长率相同，称作算法的渐进时间复杂度，简称为时间复杂度。其中f(n)是问题规模n的某个函数。")]),t._v(" "),s("p",[t._v("这样用大写O()来体现算法时间复杂度的记法，我们称之为"),s("strong",[t._v("大O记法")]),t._v("。一般情况下，随着n的增大，T(n)增长最慢的算法为最优算法。")]),t._v(" "),s("p",[t._v("常见的时间复杂度：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("执行次数函数举例")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("阶")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("非正式术语")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("常数阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v("+3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("线性阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("3")]),s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("2")])],1),s("mo",[t._v("+")]),s("mn",[t._v("2")]),s("mi",[t._v("n")]),s("mo",[t._v("+")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("3n^2+2n+1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.897438em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("3")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("1")])])])])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n^2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("平方阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("5")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1),s("mo",[t._v("+")]),s("mn",[t._v("2")]),s("mn",[t._v("0")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("5log2^n+20")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("5")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathit"},[t._v("o")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mord mathrm"},[t._v("0")])])])])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O(logn)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("对数阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("2")]),s("mi",[t._v("n")]),s("mo",[t._v("+")]),s("mn",[t._v("3")]),s("mi",[t._v("n")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1),s("mo",[t._v("+")]),s("mn",[t._v("1")]),s("mn",[t._v("9")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2n+3nlog2^n+19")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("3")]),s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathit"},[t._v("o")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("1")]),s("span",{staticClass:"mord mathrm"},[t._v("9")])])])])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("nlogn")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathit"},[t._v("o")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("线型对数阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mn",[t._v("6")]),s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("3")])],1),s("mo",[t._v("+")]),s("mn",[t._v("2")]),s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("2")])],1),s("mo",[t._v("+")]),s("mn",[t._v("3")]),s("mi",[t._v("n")]),s("mo",[t._v("+")]),s("mn",[t._v("4")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("6n^3+2n^2+3n+4")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.897438em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("6")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("3")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("3")]),s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mord mathrm"},[t._v("4")])])])])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("3")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n^3")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("3")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("立方阶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.664392em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.664392em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.664392em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.664392em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指数阶")])])])]),t._v(" "),s("p",[t._v("所消耗的时间从小到大的比较：")]),t._v(" "),s("p",[t._v("O(1)<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("logn")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathit"},[t._v("o")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("nlogn")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathit"},[t._v("o")]),s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathit"},[t._v("n")])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("2")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n^2")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("2")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mi",[t._v("n")]),s("mn",[t._v("3")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n^3")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathrm"},[t._v("3")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("n")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.664392em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.664392em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathrm"},[t._v("2")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("n")]),s("mo",[t._v("!")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n!")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"mclose"},[t._v("!")])])])]),t._v(")<O("),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("msup",[s("mi",[t._v("n")]),s("mi",[t._v("n")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n^n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.664392em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.664392em","vertical-align":"0em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathit"},[t._v("n")]),s("span",{staticClass:"vlist"},[s("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),s("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[s("span",{staticClass:"mord mathit"},[t._v("n")])])]),s("span",{staticClass:"baseline-fix"},[s("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[s("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v(")")]),t._v(" "),s("h4",{attrs:{id:"_2-3-2-算法空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-算法空间复杂度"}},[t._v("#")]),t._v(" 2.3.2 算法空间复杂度")]),t._v(" "),s("p",[t._v("算法的空间复杂度通过计算算法所需的存储空间实现，算法空间复杂度的计算公式记作：S(n)=O(f(n))。")]),t._v(" "),s("p",[t._v("其中，n为问题的规模，f(n)为语句关于n所占存储空间的函数。")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/Real_Fool_/article/details/115044709",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构知识详细梳理"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=i.exports}}]);