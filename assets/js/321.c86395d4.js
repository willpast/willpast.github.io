(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{653:function(t,e,a){"use strict";a.r(e);var _=a(4),v=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"网络协议-http-协议详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络协议-http-协议详解"}},[t._v("#")]),t._v(" 网络协议 - HTTP 协议详解")]),t._v(" "),e("blockquote",[e("p",[t._v("HTTP 协议详解，web开发必备。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/protocol_http_0.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"一-、基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-、基础概念"}},[t._v("#")]),t._v(" 一 、基础概念")]),t._v(" "),e("h3",{attrs:{id:"url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),e("p",[t._v("URI 包含 URL 和 URN，目前 WEB 只有 URL 比较流行，所以见到的基本都是 URL。")]),t._v(" "),e("ul",[e("li",[t._v("URI(Uniform Resource Identifier，统一资源标识符)")]),t._v(" "),e("li",[t._v("URL(Uniform Resource Locator，统一资源定位符)")]),t._v(" "),e("li",[t._v("URN(Uniform Resource Name，统一资源名称)")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/urlnuri.jpg",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"请求和响应报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求和响应报文"}},[t._v("#")]),t._v(" 请求和响应报文")]),t._v(" "),e("h4",{attrs:{id:"_1-请求报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求报文"}},[t._v("#")]),t._v(" 1. 请求报文")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/HTTP_RequestMessageExample.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_2-响应报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-响应报文"}},[t._v("#")]),t._v(" 2. 响应报文")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/HTTP_ResponseMessageExample.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"二、http-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、http-方法"}},[t._v("#")]),t._v(" 二、HTTP 方法")]),t._v(" "),e("p",[t._v("客户端发送的 "),e("strong",[t._v("请求报文")]),t._v(" 第一行为请求行，包含了方法字段。")]),t._v(" "),e("h3",{attrs:{id:"get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" GET")]),t._v(" "),e("blockquote",[e("p",[t._v("获取资源")])]),t._v(" "),e("p",[t._v("当前网络请求中，绝大部分使用的是 GET 方法。")]),t._v(" "),e("h3",{attrs:{id:"head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),e("blockquote",[e("p",[t._v("获取报文首部")])]),t._v(" "),e("p",[t._v("和 GET 方法一样，但是不返回报文实体主体部分。")]),t._v(" "),e("p",[t._v("主要用于确认 URL 的有效性以及资源更新的日期时间等。")]),t._v(" "),e("h3",{attrs:{id:"post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[t._v("#")]),t._v(" POST")]),t._v(" "),e("blockquote",[e("p",[t._v("传输实体主体")])]),t._v(" "),e("p",[t._v("POST 主要用来传输数据，而 GET 主要用来获取资源。")]),t._v(" "),e("p",[t._v("更多 POST 与 GET 的比较请见第八章。")]),t._v(" "),e("h3",{attrs:{id:"put"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" PUT")]),t._v(" "),e("blockquote",[e("p",[t._v("上传文件")])]),t._v(" "),e("p",[t._v("由于自身不带验证机制，任何人都可以上传文件，因此存在安全性问题，一般不使用该方法。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("PUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n<p>New File</p>\n")])])]),e("h3",{attrs:{id:"patch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" PATCH")]),t._v(" "),e("blockquote",[e("p",[t._v("对资源进行部分修改")])]),t._v(" "),e("p",[t._v("PUT 也可以用于修改资源，但是只能完全替代原始资源，PATCH 允许部分修改。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('PATCH /file.txt HTTP/1.1\nHost: www.example.com\nContent-Type: application/example\nIf-Match: "e0023aa4e"\nContent-Length: 100\n\n[description of changes]\n')])])]),e("h3",{attrs:{id:"delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" DELETE")]),t._v(" "),e("blockquote",[e("p",[t._v("删除文件")])]),t._v(" "),e("p",[t._v("与 PUT 功能相反，并且同样不带验证机制。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("DELETE /file.html HTTP/1.1\n")])])]),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" OPTIONS")]),t._v(" "),e("blockquote",[e("p",[t._v("查询支持的方法")])]),t._v(" "),e("p",[t._v("查询指定的 URL 能够支持的方法。")]),t._v(" "),e("p",[t._v("会返回 Allow: GET, POST, HEAD, OPTIONS 这样的内容。")]),t._v(" "),e("h3",{attrs:{id:"connect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[t._v("#")]),t._v(" CONNECT")]),t._v(" "),e("blockquote",[e("p",[t._v("要求在与代理服务器通信时建立隧道")])]),t._v(" "),e("p",[t._v("使用 SSL(Secure Sockets Layer，安全套接层)和 TLS(Transport Layer\nSecurity，传输层安全)协议把通信内容加密后经网络隧道传输。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("CONNECT www.example.com:443 HTTP/1.1\n")])])]),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dc00f70e-c5c8-4d20-baf1-2d70014a97e3.jpg",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"trace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trace"}},[t._v("#")]),t._v(" TRACE")]),t._v(" "),e("blockquote",[e("p",[t._v("追踪路径")])]),t._v(" "),e("p",[t._v("服务器会将通信路径返回给客户端。")]),t._v(" "),e("p",[t._v("发送请求时，在 Max-Forwards 首部字段中填入数值，每经过一个服务器就会减 1，当数值为 0 时就停止传输。")]),t._v(" "),e("p",[t._v("通常不会使用 TRACE，并且它容易受到 XST 攻击(Cross-Site Tracing，跨站追踪)。")]),t._v(" "),e("h2",{attrs:{id:"三、http-状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、http-状态码"}},[t._v("#")]),t._v(" 三、HTTP 状态码")]),t._v(" "),e("p",[t._v("服务器返回的 "),e("strong",[t._v("响应报文")]),t._v(" 中第一行为状态行，包含了状态码以及原因短语，用来告知客户端请求的结果。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("状态码")]),t._v(" "),e("th",[t._v("类别")]),t._v(" "),e("th",[t._v("原因短语")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1XX")]),t._v(" "),e("td",[t._v("Informational(信息性状态码)")]),t._v(" "),e("td",[t._v("接收的请求正在处理")])]),t._v(" "),e("tr",[e("td",[t._v("2XX")]),t._v(" "),e("td",[t._v("Success(成功状态码)")]),t._v(" "),e("td",[t._v("请求正常处理完毕")])]),t._v(" "),e("tr",[e("td",[t._v("3XX")]),t._v(" "),e("td",[t._v("Redirection(重定向状态码)")]),t._v(" "),e("td",[t._v("需要进行附加操作以完成请求")])]),t._v(" "),e("tr",[e("td",[t._v("4XX")]),t._v(" "),e("td",[t._v("Client Error(客户端错误状态码)")]),t._v(" "),e("td",[t._v("服务器无法处理请求")])]),t._v(" "),e("tr",[e("td",[t._v("5XX")]),t._v(" "),e("td",[t._v("Server Error(服务器错误状态码)")]),t._v(" "),e("td",[t._v("服务器处理请求出错")])])])]),t._v(" "),e("h3",{attrs:{id:"_1xx-信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1xx-信息"}},[t._v("#")]),t._v(" 1XX 信息")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("100 Continue")]),t._v(" : 表明到目前为止都很正常，客户端可以继续发送请求或者忽略这个响应。")])]),t._v(" "),e("h3",{attrs:{id:"_2xx-成功"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2xx-成功"}},[t._v("#")]),t._v(" 2XX 成功")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("200 OK")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("204 No Content")]),t._v(" : 请求已经成功处理，但是返回的响应报文不包含实体的主体部分。一般在只需要从客户端往服务器发送信息，而不需要返回数据时使用。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("206 Partial Content")]),t._v(" : 表示客户端进行了范围请求，响应报文包含由 Content-Range 指定范围的实体内容。")])])]),t._v(" "),e("h3",{attrs:{id:"_3xx-重定向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[t._v("#")]),t._v(" 3XX 重定向")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("301 Moved Permanently")]),t._v(" : 永久性重定向")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("302 Found")]),t._v(" : 临时性重定向")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("303 See Other")]),t._v(" : 和 302 有着相同的功能，但是 303 明确要求客户端应该采用 GET 方法获取资源。")])]),t._v(" "),e("li",[e("p",[t._v("注: 虽然 HTTP 协议规定 301、302 状态下重定向时不允许把 POST 方法改成 GET 方法，但是大多数浏览器都会在 301、302 和 303 状态下的重定向把 POST 方法改成 GET 方法。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("304 Not Modified")]),t._v(" : 如果请求报文首部包含一些条件，例如: If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since，如果不满足条件，则服务器会返回 304 状态码。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("307 Temporary Redirect")]),t._v(" : 临时重定向，与 302 的含义类似，但是 307 要求浏览器不会把重定向请求的 POST 方法改成 GET 方法。")])])]),t._v(" "),e("h3",{attrs:{id:"_4xx-客户端错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[t._v("#")]),t._v(" 4XX 客户端错误")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("400 Bad Request")]),t._v(" : 请求报文中存在语法错误。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("401 Unauthorized")]),t._v(" : 该状态码表示发送的请求需要有认证信息(BASIC 认证、DIGEST 认证)。如果之前已进行过一次请求，则表示用户认证失败。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("403 Forbidden")]),t._v(" : 请求被拒绝。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("404 Not Found")])])])]),t._v(" "),e("h3",{attrs:{id:"_5xx-服务器错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[t._v("#")]),t._v(" 5XX 服务器错误")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("500 Internal Server Error")]),t._v(" : 服务器正在执行请求时发生错误。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("503 Service Unavailable")]),t._v(" : 服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。")])])]),t._v(" "),e("h2",{attrs:{id:"四、http-首部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、http-首部"}},[t._v("#")]),t._v(" 四、HTTP 首部")]),t._v(" "),e("p",[t._v("有 4 种类型的首部字段: 通用首部字段、请求首部字段、响应首部字段和实体首部字段。")]),t._v(" "),e("p",[t._v("各种首部字段及其含义如下(不需要全记，仅供查阅):")]),t._v(" "),e("h3",{attrs:{id:"通用首部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用首部字段"}},[t._v("#")]),t._v(" 通用首部字段")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("首部字段名")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Cache-Control")]),t._v(" "),e("td",[t._v("控制缓存的行为")])]),t._v(" "),e("tr",[e("td",[t._v("Connection")]),t._v(" "),e("td",[t._v("控制不再转发给代理的首部字段、管理持久连接")])]),t._v(" "),e("tr",[e("td",[t._v("Date")]),t._v(" "),e("td",[t._v("创建报文的日期时间")])]),t._v(" "),e("tr",[e("td",[t._v("Pragma")]),t._v(" "),e("td",[t._v("报文指令")])]),t._v(" "),e("tr",[e("td",[t._v("Trailer")]),t._v(" "),e("td",[t._v("报文末端的首部一览")])]),t._v(" "),e("tr",[e("td",[t._v("Transfer-Encoding")]),t._v(" "),e("td",[t._v("指定报文主体的传输编码方式")])]),t._v(" "),e("tr",[e("td",[t._v("Upgrade")]),t._v(" "),e("td",[t._v("升级为其他协议")])]),t._v(" "),e("tr",[e("td",[t._v("Via")]),t._v(" "),e("td",[t._v("代理服务器的相关信息")])]),t._v(" "),e("tr",[e("td",[t._v("Warning")]),t._v(" "),e("td",[t._v("错误通知")])])])]),t._v(" "),e("h3",{attrs:{id:"请求首部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求首部字段"}},[t._v("#")]),t._v(" 请求首部字段")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("首部字段名")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Accept")]),t._v(" "),e("td",[t._v("用户代理可处理的媒体类型")])]),t._v(" "),e("tr",[e("td",[t._v("Accept-Charset")]),t._v(" "),e("td",[t._v("优先的字符集")])]),t._v(" "),e("tr",[e("td",[t._v("Accept-Encoding")]),t._v(" "),e("td",[t._v("优先的内容编码")])]),t._v(" "),e("tr",[e("td",[t._v("Accept-Language")]),t._v(" "),e("td",[t._v("优先的语言(自然语言)")])]),t._v(" "),e("tr",[e("td",[t._v("Authorization")]),t._v(" "),e("td",[t._v("Web 认证信息")])]),t._v(" "),e("tr",[e("td",[t._v("Expect")]),t._v(" "),e("td",[t._v("期待服务器的特定行为")])]),t._v(" "),e("tr",[e("td",[t._v("From")]),t._v(" "),e("td",[t._v("用户的电子邮箱地址")])]),t._v(" "),e("tr",[e("td",[t._v("Host")]),t._v(" "),e("td",[t._v("请求资源所在服务器")])]),t._v(" "),e("tr",[e("td",[t._v("If-Match")]),t._v(" "),e("td",[t._v("比较实体标记(ETag)")])]),t._v(" "),e("tr",[e("td",[t._v("If-Modified-Since")]),t._v(" "),e("td",[t._v("比较资源的更新时间")])]),t._v(" "),e("tr",[e("td",[t._v("If-None-Match")]),t._v(" "),e("td",[t._v("比较实体标记(与 If-Match 相反)")])]),t._v(" "),e("tr",[e("td",[t._v("If-Range")]),t._v(" "),e("td",[t._v("资源未更新时发送实体 Byte 的范围请求")])]),t._v(" "),e("tr",[e("td",[t._v("If-Unmodified-Since")]),t._v(" "),e("td",[t._v("比较资源的更新时间(与 If-Modified-Since 相反)")])]),t._v(" "),e("tr",[e("td",[t._v("Max-Forwards")]),t._v(" "),e("td",[t._v("最大传输逐跳数")])]),t._v(" "),e("tr",[e("td",[t._v("Proxy-Authorization")]),t._v(" "),e("td",[t._v("代理服务器要求客户端的认证信息")])]),t._v(" "),e("tr",[e("td",[t._v("Range")]),t._v(" "),e("td",[t._v("实体的字节范围请求")])]),t._v(" "),e("tr",[e("td",[t._v("Referer")]),t._v(" "),e("td",[t._v("对请求中 URI 的原始获取方")])]),t._v(" "),e("tr",[e("td",[t._v("TE")]),t._v(" "),e("td",[t._v("传输编码的优先级")])]),t._v(" "),e("tr",[e("td",[t._v("User-Agent")]),t._v(" "),e("td",[t._v("HTTP 客户端程序的信息")])])])]),t._v(" "),e("h3",{attrs:{id:"响应首部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应首部字段"}},[t._v("#")]),t._v(" 响应首部字段")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("首部字段名")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Accept-Ranges")]),t._v(" "),e("td",[t._v("是否接受字节范围请求")])]),t._v(" "),e("tr",[e("td",[t._v("Age")]),t._v(" "),e("td",[t._v("推算资源创建经过时间")])]),t._v(" "),e("tr",[e("td",[t._v("ETag")]),t._v(" "),e("td",[t._v("资源的匹配信息")])]),t._v(" "),e("tr",[e("td",[t._v("Location")]),t._v(" "),e("td",[t._v("令客户端重定向至指定 URI")])]),t._v(" "),e("tr",[e("td",[t._v("Proxy-Authenticate")]),t._v(" "),e("td",[t._v("代理服务器对客户端的认证信息")])]),t._v(" "),e("tr",[e("td",[t._v("Retry-After")]),t._v(" "),e("td",[t._v("对再次发起请求的时机要求")])]),t._v(" "),e("tr",[e("td",[t._v("Server")]),t._v(" "),e("td",[t._v("HTTP 服务器的安装信息")])]),t._v(" "),e("tr",[e("td",[t._v("Vary")]),t._v(" "),e("td",[t._v("代理服务器缓存的管理信息")])]),t._v(" "),e("tr",[e("td",[t._v("WWW-Authenticate")]),t._v(" "),e("td",[t._v("服务器对客户端的认证信息")])])])]),t._v(" "),e("h3",{attrs:{id:"实体首部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实体首部字段"}},[t._v("#")]),t._v(" 实体首部字段")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("首部字段名")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Allow")]),t._v(" "),e("td",[t._v("资源可支持的 HTTP 方法")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Encoding")]),t._v(" "),e("td",[t._v("实体主体适用的编码方式")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Language")]),t._v(" "),e("td",[t._v("实体主体的自然语言")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Length")]),t._v(" "),e("td",[t._v("实体主体的大小")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Location")]),t._v(" "),e("td",[t._v("替代对应资源的 URI")])]),t._v(" "),e("tr",[e("td",[t._v("Content-MD5")]),t._v(" "),e("td",[t._v("实体主体的报文摘要")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Range")]),t._v(" "),e("td",[t._v("实体主体的位置范围")])]),t._v(" "),e("tr",[e("td",[t._v("Content-Type")]),t._v(" "),e("td",[t._v("实体主体的媒体类型")])]),t._v(" "),e("tr",[e("td",[t._v("Expires")]),t._v(" "),e("td",[t._v("实体主体过期的日期时间")])]),t._v(" "),e("tr",[e("td",[t._v("Last-Modified")]),t._v(" "),e("td",[t._v("资源的最后修改日期时间")])])])]),t._v(" "),e("h2",{attrs:{id:"五、具体应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、具体应用"}},[t._v("#")]),t._v(" 五、具体应用")]),t._v(" "),e("h3",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),e("p",[t._v("HTTP 协议是无状态的，主要是为了让 HTTP 协议尽可能简单，使得它能够处理大量事务。HTTP/1.1 引入 Cookie 来保存状态信息。")]),t._v(" "),e("p",[t._v("Cookie\n是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器之后向同一服务器再次发起请求时被携带上，用于告知服务端两个请求是否来自同一浏览器。由于之后每次请求都会需要携带\nCookie 数据，因此会带来额外的性能开销(尤其是在移动环境下)。")]),t._v(" "),e("p",[t._v("Cookie 曾一度用于客户端数据的存储，因为当时并没有其它合适的存储办法而作为唯一的存储手段，但现在随着现代浏览器开始支持各种各样的存储方式，Cookie\n渐渐被淘汰。新的浏览器 API 已经允许开发者直接将数据存储到本地，如使用 Web storage API (本地存储和会话存储)或 IndexedDB。")]),t._v(" "),e("h4",{attrs:{id:"_1-用途"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-用途"}},[t._v("#")]),t._v(" 1. 用途")]),t._v(" "),e("ul",[e("li",[t._v("会话状态管理(如用户登录状态、购物车、游戏分数或其它需要记录的信息)")]),t._v(" "),e("li",[t._v("个性化设置(如用户自定义设置、主题等)")]),t._v(" "),e("li",[t._v("浏览器行为跟踪(如跟踪分析用户行为等)")])]),t._v(" "),e("h4",{attrs:{id:"_2-创建过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建过程"}},[t._v("#")]),t._v(" 2. 创建过程")]),t._v(" "),e("p",[t._v("服务器发送的响应报文包含 Set-Cookie 首部字段，客户端得到响应报文后把 Cookie 内容保存到浏览器中。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("HTTP/1.0 200 OK\nContent-type: text/html\nSet-Cookie: yummy_cookie=choco\nSet-Cookie: tasty_cookie=strawberry\n\n[page content]\n")])])]),e("p",[t._v("客户端之后对同一个服务器发送请求时，会从浏览器中取出 Cookie 信息并通过 Cookie 请求首部字段发送给服务器。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("GET /sample_page.html HTTP/1.1\nHost: www.example.org\nCookie: yummy_cookie=choco; tasty_cookie=strawberry\n")])])]),e("h4",{attrs:{id:"_3-分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-分类"}},[t._v("#")]),t._v(" 3. 分类")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("会话期 Cookie: 浏览器关闭之后它会被自动删除，也就是说它仅在会话期内有效。")])]),t._v(" "),e("li",[e("p",[t._v("持久性 Cookie: 指定一个特定的过期时间(Expires)或有效期(max-age)之后就成为了持久性的 Cookie。")]),t._v(" "),e("p",[t._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;")])])]),t._v(" "),e("h4",{attrs:{id:"_4-javascript-获取-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-javascript-获取-cookie"}},[t._v("#")]),t._v(" 4. JavaScript 获取 Cookie")]),t._v(" "),e("p",[t._v("通过 "),e("code",[t._v("Document.cookie")]),t._v(" 属性可创建新的 Cookie，也可通过该属性访问非 HttpOnly 标记的 Cookie。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('document.cookie = "yummy_cookie=choco";\ndocument.cookie = "tasty_cookie=strawberry";\nconsole.log(document.cookie);\n')])])]),e("h4",{attrs:{id:"_5-secure-和-httponly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-secure-和-httponly"}},[t._v("#")]),t._v(" 5. Secure 和 HttpOnly")]),t._v(" "),e("p",[t._v("标记为 Secure 的 Cookie 只能通过被 HTTPS 协议加密过的请求发送给服务端。但即便设置了 Secure 标记，敏感信息也不应该通过\nCookie 传输，因为 Cookie 有其固有的不安全性，Secure 标记也无法提供确实的安全保障。")]),t._v(" "),e("p",[t._v("标记为 HttpOnly 的 Cookie 不能被 JavaScript 脚本调用。跨站脚本攻击 (XSS) 常常使用 JavaScript 的\n"),e("code",[t._v("Document.cookie")]),t._v(" API 窃取用户的 Cookie 信息，因此使用 HttpOnly 标记可以在一定程度上避免 XSS 攻击。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly\n")])])]),e("h4",{attrs:{id:"_6-作用域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-作用域"}},[t._v("#")]),t._v(" 6. 作用域")]),t._v(" "),e("p",[t._v("Domain 标识指定了哪些主机可以接受 Cookie。如果不指定，默认为当前文档的主机(不包含子域名)。如果指定了\nDomain，则一般包含子域名。例如，如果设置 Domain=mozilla.org，则 Cookie 也包含在子域名中(如\ndeveloper.mozilla.org)。")]),t._v(" "),e("p",[t._v('Path 标识指定了主机下的哪些路径可以接受 Cookie(该 URL 路径必须存在于请求 URL 中)。以字符 %x2F ("/")\n作为路径分隔符，子路径也会被匹配。例如，设置 Path=/docs，则以下地址都会匹配:')]),t._v(" "),e("ul",[e("li",[t._v("/docs")]),t._v(" "),e("li",[t._v("/docs/Web/")]),t._v(" "),e("li",[t._v("/docs/Web/HTTP")])]),t._v(" "),e("h4",{attrs:{id:"_7-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-session"}},[t._v("#")]),t._v(" 7. Session")]),t._v(" "),e("p",[t._v("除了可以将用户信息通过 Cookie 存储在用户浏览器中，也可以利用 Session 存储在服务器端，存储在服务器端的信息更加安全。")]),t._v(" "),e("p",[t._v("Session 可以存储在服务器上的文件、数据库或者内存中。也可以将 Session 存储在 Redis 这种内存型数据库中，效率会更高。")]),t._v(" "),e("p",[t._v("使用 Session 维护用户登录状态的过程如下:")]),t._v(" "),e("ul",[e("li",[t._v("用户进行登录时，用户提交包含用户名和密码的表单，放入 HTTP 请求报文中；")]),t._v(" "),e("li",[t._v("服务器验证该用户名和密码；")]),t._v(" "),e("li",[t._v("如果正确则把用户信息存储到 Redis 中，它在 Redis 中的 Key 称为 Session ID；")]),t._v(" "),e("li",[t._v("服务器返回的响应报文的 Set-Cookie 首部字段包含了这个 Session ID，客户端收到响应报文之后将该 Cookie 值存入浏览器中；")]),t._v(" "),e("li",[t._v("客户端之后对同一个服务器进行请求时会包含该 Cookie 值，服务器收到之后提取出 Session ID，从 Redis 中取出用户信息，继续之前的业务操作。")])]),t._v(" "),e("p",[t._v("应该注意 Session ID 的安全性问题，不能让它被恶意攻击者轻易获取，那么就不能产生一个容易被猜到的 Session ID\n值。此外，还需要经常重新生成 Session ID。在对安全性要求极高的场景下，例如转账等操作，除了使用 Session\n管理用户状态之外，还需要对用户进行重新验证，比如重新输入密码，或者使用短信验证码等方式。")]),t._v(" "),e("h4",{attrs:{id:"_8-浏览器禁用-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-浏览器禁用-cookie"}},[t._v("#")]),t._v(" 8. 浏览器禁用 Cookie")]),t._v(" "),e("p",[t._v("此时无法使用 Cookie 来保存用户信息，只能使用 Session。除此之外，不能再将 Session ID 存放到 Cookie 中，而是使用 URL\n重写技术，将 Session ID 作为 URL 的参数进行传递。")]),t._v(" "),e("h4",{attrs:{id:"_9-cookie-与-session-选择"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-cookie-与-session-选择"}},[t._v("#")]),t._v(" 9. Cookie 与 Session 选择")]),t._v(" "),e("ul",[e("li",[t._v("Cookie 只能存储 ASCII 码字符串，而 Session 则可以存取任何类型的数据，因此在考虑数据复杂性时首选 Session；")]),t._v(" "),e("li",[t._v("Cookie 存储在浏览器中，容易被恶意查看。如果非要将一些隐私数据存在 Cookie 中，可以将 Cookie 值进行加密，然后在服务器进行解密；")]),t._v(" "),e("li",[t._v("对于大型网站，如果用户所有的信息都存储在 Session 中，那么开销是非常大的，因此不建议将所有的用户信息都存储到 Session 中。")])]),t._v(" "),e("h3",{attrs:{id:"缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),e("h4",{attrs:{id:"_1-优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-优点"}},[t._v("#")]),t._v(" 1. 优点")]),t._v(" "),e("ul",[e("li",[t._v("缓解服务器压力；")]),t._v(" "),e("li",[t._v("降低客户端获取资源的延迟: 缓存通常位于内存中，读取缓存的速度更快。并且缓存在地理位置上也有可能比源服务器来得近，例如浏览器缓存。")])]),t._v(" "),e("h4",{attrs:{id:"_2-实现方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现方法"}},[t._v("#")]),t._v(" 2. 实现方法")]),t._v(" "),e("ul",[e("li",[t._v("让代理服务器进行缓存；")]),t._v(" "),e("li",[t._v("让客户端浏览器进行缓存。")])]),t._v(" "),e("h4",{attrs:{id:"_3-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-cache-control"}},[t._v("#")]),t._v(" 3. Cache-Control")]),t._v(" "),e("p",[t._v("HTTP/1.1 通过 Cache-Control 首部字段来控制缓存。")]),t._v(" "),e("p",[e("strong",[t._v("(一)禁止进行缓存")])]),t._v(" "),e("p",[t._v("no-store 指令规定不能对请求或响应的任何一部分进行缓存。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Cache-Control: no-store\n")])])]),e("p",[e("strong",[t._v("(二)强制确认缓存")])]),t._v(" "),e("p",[t._v("no-cache 指令规定缓存服务器需要先向源服务器验证缓存资源的有效性，只有当缓存资源有效才将能使用该缓存对客户端的请求进行响应。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Cache-Control: no-cache\n")])])]),e("p",[e("strong",[t._v("(三)私有缓存和公共缓存")])]),t._v(" "),e("p",[t._v("private 指令规定了将资源作为私有缓存，只能被单独用户所使用，一般存储在用户浏览器中。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Cache-Control: private\n")])])]),e("p",[t._v("public 指令规定了将资源作为公共缓存，可以被多个用户所使用，一般存储在代理服务器中。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Cache-Control: public\n")])])]),e("p",[e("strong",[t._v("(四)缓存过期机制")])]),t._v(" "),e("p",[t._v("max-age 指令出现在请求报文中，并且缓存资源的缓存时间小于该指令指定的时间，那么就能接受该缓存。")]),t._v(" "),e("p",[t._v("max-age 指令出现在响应报文中，表示缓存资源在缓存服务器中保存的时间。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Cache-Control: max-age=31536000\n")])])]),e("p",[t._v("Expires 首部字段也可以用于告知缓存服务器该资源什么时候会过期。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在 HTTP/1.1 中，会优先处理 max-age 指令；")])]),t._v(" "),e("li",[e("p",[t._v("在 HTTP/1.0 中，max-age 指令会被忽略掉。")]),t._v(" "),e("p",[t._v("Expires: Wed, 04 Jul 2012 08:26:05 GMT")])])]),t._v(" "),e("h4",{attrs:{id:"_4-缓存验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-缓存验证"}},[t._v("#")]),t._v(" 4. 缓存验证")]),t._v(" "),e("p",[t._v("需要先了解 ETag 首部字段的含义，它是资源的唯一标识。URL 不能唯一表示资源，例如 "),e("code",[t._v("http://www.google.com/")]),t._v("\n有中文和英文两个资源，只有 ETag 才能对这两个资源进行唯一标识。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('ETag: "82e22293907ce725faf67773957acd12"\n')])])]),e("p",[t._v("可以将缓存资源的 ETag 值放入 If-None-Match 首部，服务器收到该请求后，判断缓存资源的 ETag 值和资源的最新 ETag\n值是否一致，如果一致则表示缓存资源有效，返回 304 Not Modified。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('If-None-Match: "82e22293907ce725faf67773957acd12"\n')])])]),e("p",[t._v("Last-Modified\n首部字段也可以用于缓存验证，它包含在源服务器发送的响应报文中，指示源服务器对资源的最后修改时间。但是它是一种弱校验器，因为只能精确到一秒，所以它通常作为\nETag 的备用方案。如果响应首部字段里含有这个信息，客户端可以在后续的请求中带上 If-Modified-Since\n来验证缓存。服务器只在所请求的资源在给定的日期时间之后对内容进行过修改的情况下才会将资源返回，状态码为 200\nOK。如果请求的资源从那时起未经修改，那么返回一个不带有消息主体的 304 Not Modified 响应。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Last-Modified: Wed, 21 Oct 2015 07:28:00 GMT\n\n\n\nIf-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT\n")])])]),e("h3",{attrs:{id:"连接管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接管理"}},[t._v("#")]),t._v(" 连接管理")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/HTTP1_x_Connections.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_1-短连接与长连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-短连接与长连接"}},[t._v("#")]),t._v(" 1. 短连接与长连接")]),t._v(" "),e("p",[t._v("当浏览器访问一个包含多张图片的 HTML 页面时，除了请求访问 HTML 页面资源，还会请求图片资源。如果每进行一次 HTTP 通信就要新建一个 TCP\n连接，那么开销会很大。")]),t._v(" "),e("p",[t._v("长连接只需要建立一次 TCP 连接就能进行多次 HTTP 通信。")]),t._v(" "),e("ul",[e("li",[t._v("从 HTTP/1.1 开始默认是长连接的，如果要断开连接，需要由客户端或者服务器端提出断开，使用 "),e("code",[t._v("Connection : close")]),t._v("；")]),t._v(" "),e("li",[t._v("在 HTTP/1.1 之前默认是短连接的，如果需要使用长连接，则使用 "),e("code",[t._v("Connection : Keep-Alive")]),t._v("。")])]),t._v(" "),e("h4",{attrs:{id:"_2-流水线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-流水线"}},[t._v("#")]),t._v(" 2. 流水线")]),t._v(" "),e("p",[t._v("默认情况下，HTTP\n请求是按顺序发出的，下一个请求只有在当前请求收到响应之后才会被发出。由于会受到网络延迟和带宽的限制，在下一个请求被发送到服务器之前，可能需要等待很长时间。")]),t._v(" "),e("p",[t._v("流水线是在同一条长连接上发出连续的请求，而不用等待响应返回，这样可以避免连接延迟。")]),t._v(" "),e("h3",{attrs:{id:"内容协商"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容协商"}},[t._v("#")]),t._v(" 内容协商")]),t._v(" "),e("p",[t._v("通过内容协商返回最合适的内容，例如根据浏览器的默认语言选择返回中文界面还是英文界面。")]),t._v(" "),e("h4",{attrs:{id:"_1-类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-类型"}},[t._v("#")]),t._v(" 1. 类型")]),t._v(" "),e("p",[e("strong",[t._v("(一)服务端驱动型")])]),t._v(" "),e("p",[t._v("客户端设置特定的 HTTP 首部字段，例如 Accept、Accept-Charset、Accept-Encoding、Accept-\nLanguage、Content-Languag，服务器根据这些字段返回特定的资源。")]),t._v(" "),e("p",[t._v("它存在以下问题:")]),t._v(" "),e("ul",[e("li",[t._v("服务器很难知道客户端浏览器的全部信息；")]),t._v(" "),e("li",[t._v("客户端提供的信息相当冗长(HTTP/2 协议的首部压缩机制缓解了这个问题)，并且存在隐私风险(HTTP 指纹识别技术)；")]),t._v(" "),e("li",[t._v("给定的资源需要返回不同的展现形式，共享缓存的效率会降低，而服务器端的实现会越来越复杂。")])]),t._v(" "),e("p",[e("strong",[t._v("(二)代理驱动型")])]),t._v(" "),e("p",[t._v("服务器返回 300 Multiple Choices 或者 406 Not Acceptable，客户端从中选出最合适的那个资源。")]),t._v(" "),e("h4",{attrs:{id:"_2-vary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-vary"}},[t._v("#")]),t._v(" 2. Vary")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Vary: Accept-Language\n")])])]),e("p",[t._v("在使用内容协商的情况下，只有当缓存服务器中的缓存满足内容协商条件时，才能使用该缓存，否则应该向源服务器请求该资源。")]),t._v(" "),e("p",[t._v("例如，一个客户端发送了一个包含 Accept-Language 首部字段的请求之后，源服务器返回的响应包含 "),e("code",[t._v("Vary: Accept-Language")]),t._v("\n内容，缓存服务器对这个响应进行缓存之后，在客户端下一次访问同一个 URL 资源，并且 Accept-Language\n与缓存中的对应的值相同时才会返回该缓存。")]),t._v(" "),e("h3",{attrs:{id:"内容编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容编码"}},[t._v("#")]),t._v(" 内容编码")]),t._v(" "),e("p",[t._v("内容编码将实体主体进行压缩，从而减少传输的数据量。")]),t._v(" "),e("p",[t._v("常用的内容编码有: gzip、compress、deflate、identity。")]),t._v(" "),e("p",[t._v("浏览器发送 Accept-Encoding\n首部，其中包含有它所支持的压缩算法，以及各自的优先级。服务器则从中选择一种，使用该算法对响应的消息主体进行压缩，并且发送 Content-Encoding\n首部来告知浏览器它选择了哪一种算法。由于该内容协商过程是基于编码类型来选择资源的展现形式的，在响应的 Vary 首部至少要包含 Content-\nEncoding。")]),t._v(" "),e("h3",{attrs:{id:"范围请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#范围请求"}},[t._v("#")]),t._v(" 范围请求")]),t._v(" "),e("p",[t._v("如果网络出现中断，服务器只发送了一部分数据，范围请求可以使得客户端只请求服务器未发送的那部分数据，从而避免服务器重新发送所有数据。")]),t._v(" "),e("h4",{attrs:{id:"_1-range"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-range"}},[t._v("#")]),t._v(" 1. Range")]),t._v(" "),e("p",[t._v("在请求报文中添加 Range 首部字段指定请求的范围。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("GET /z4d4kWk.jpg HTTP/1.1\nHost: i.imgur.com\nRange: bytes=0-1023\n")])])]),e("p",[t._v("请求成功的话服务器返回的响应包含 206 Partial Content 状态码。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("HTTP/1.1 206 Partial Content\nContent-Range: bytes 0-1023/146515\nContent-Length: 1024\n...\n(binary content)\n")])])]),e("h4",{attrs:{id:"_2-accept-ranges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-accept-ranges"}},[t._v("#")]),t._v(" 2. Accept-Ranges")]),t._v(" "),e("p",[t._v("响应首部字段 Accept-Ranges 用于告知客户端是否能处理范围请求，可以处理使用 bytes，否则使用 none。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("Accept-Ranges: bytes\n")])])]),e("h4",{attrs:{id:"_3-响应状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-响应状态码"}},[t._v("#")]),t._v(" 3. 响应状态码")]),t._v(" "),e("ul",[e("li",[t._v("在请求成功的情况下，服务器会返回 206 Partial Content 状态码。")]),t._v(" "),e("li",[t._v("在请求的范围越界的情况下，服务器会返回 416 Requested Range Not Satisfiable 状态码。")]),t._v(" "),e("li",[t._v("在不支持范围请求的情况下，服务器会返回 200 OK 状态码。")])]),t._v(" "),e("h3",{attrs:{id:"分块传输编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分块传输编码"}},[t._v("#")]),t._v(" 分块传输编码")]),t._v(" "),e("p",[t._v("Chunked Transfer Coding，可以把数据分割成多块，让浏览器逐步显示页面。")]),t._v(" "),e("h3",{attrs:{id:"多部分对象集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多部分对象集合"}},[t._v("#")]),t._v(" 多部分对象集合")]),t._v(" "),e("p",[t._v("一份报文主体内可含有多种类型的实体同时发送，每个部分之间用 boundary 字段定义的分隔符进行分隔，每个部分都可以有首部字段。")]),t._v(" "),e("p",[t._v("例如，上传多个表单时可以使用如下方式:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('Content-Type: multipart/form-data; boundary=AaB03x\n\n--AaB03x\nContent-Disposition: form-data; name="submit-name"\n\nLarry\n--AaB03x\nContent-Disposition: form-data; name="files"; filename="file1.txt"\nContent-Type: text/plain\n\n... contents of file1.txt ...\n--AaB03x--\n')])])]),e("h3",{attrs:{id:"虚拟主机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟主机"}},[t._v("#")]),t._v(" 虚拟主机")]),t._v(" "),e("p",[t._v("HTTP/1.1 使用虚拟主机技术，使得一台服务器拥有多个域名，并且在逻辑上可以看成多个服务器。")]),t._v(" "),e("h3",{attrs:{id:"通信数据转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通信数据转发"}},[t._v("#")]),t._v(" 通信数据转发")]),t._v(" "),e("h4",{attrs:{id:"_1-代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-代理"}},[t._v("#")]),t._v(" 1. 代理")]),t._v(" "),e("p",[t._v("代理服务器接受客户端的请求，并且转发给其它服务器。")]),t._v(" "),e("p",[t._v("使用代理的主要目的是:")]),t._v(" "),e("ul",[e("li",[t._v("缓存")]),t._v(" "),e("li",[t._v("负载均衡")]),t._v(" "),e("li",[t._v("网络访问控制")]),t._v(" "),e("li",[t._v("访问日志记录")])]),t._v(" "),e("p",[t._v("代理服务器分为正向代理和反向代理两种:")]),t._v(" "),e("ul",[e("li",[t._v("用户察觉得到正向代理的存在。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/a314bb79-5b18-4e63-a976-3448bffa6f1b.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[t._v("而反向代理一般位于内部网络中，用户察觉不到。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/2d09a847-b854-439c-9198-b29c65810944.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_2-网关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-网关"}},[t._v("#")]),t._v(" 2. 网关")]),t._v(" "),e("p",[t._v("与代理服务器不同的是，网关服务器会将 HTTP 转化为其它协议进行通信，从而请求其它非 HTTP 服务器的服务。")]),t._v(" "),e("h4",{attrs:{id:"_3-隧道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-隧道"}},[t._v("#")]),t._v(" 3. 隧道")]),t._v(" "),e("p",[t._v("使用 SSL 等加密手段，在客户端和服务器之间建立一条安全的通信线路。")]),t._v(" "),e("h2",{attrs:{id:"六、https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、https"}},[t._v("#")]),t._v(" 六、HTTPs")]),t._v(" "),e("p",[t._v("HTTP 有以下安全性问题:")]),t._v(" "),e("ul",[e("li",[t._v("使用明文进行通信，内容可能会被窃听；")]),t._v(" "),e("li",[t._v("不验证通信方的身份，通信方的身份有可能遭遇伪装；")]),t._v(" "),e("li",[t._v("无法证明报文的完整性，报文有可能遭篡改。")])]),t._v(" "),e("p",[t._v("HTTPs 并不是新协议，而是让 HTTP 先和 SSL(Secure Sockets Layer)通信，再由 SSL 和 TCP 通信，也就是说\nHTTPs 使用了隧道进行通信。")]),t._v(" "),e("p",[t._v("通过使用 SSL，HTTPs 具有了加密(防窃听)、认证(防伪装)和完整性保护(防篡改)。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/ssl-offloading.jpg",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加密"}},[t._v("#")]),t._v(" 加密")]),t._v(" "),e("h4",{attrs:{id:"_1-对称密钥加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-对称密钥加密"}},[t._v("#")]),t._v(" 1. 对称密钥加密")]),t._v(" "),e("p",[t._v("对称密钥加密(Symmetric-Key Encryption)，加密和解密使用同一密钥。")]),t._v(" "),e("ul",[e("li",[t._v("优点: 运算速度快；")]),t._v(" "),e("li",[t._v("缺点: 无法安全地将密钥传输给通信方。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/7fffa4b8-b36d-471f-ad0c-a88ee763bb76.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_2-非对称密钥加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-非对称密钥加密"}},[t._v("#")]),t._v(" 2.非对称密钥加密")]),t._v(" "),e("p",[t._v("非对称密钥加密，又称公开密钥加密(Public-Key Encryption)，加密和解密使用不同的密钥。")]),t._v(" "),e("p",[t._v("公开密钥所有人都可以获得，通信发送方获得接收方的公开密钥之后，就可以使用公开密钥进行加密，接收方收到通信内容后使用私有密钥解密。")]),t._v(" "),e("p",[t._v("非对称密钥除了用来加密，还可以用来进行签名。因为私有密钥无法被其他人获取，因此通信发送方使用其私有密钥进行签名，通信接收方使用发送方的公开密钥对签名进行解密，就能判断这个签名是否正确。")]),t._v(" "),e("ul",[e("li",[t._v("优点: 可以更安全地将公开密钥传输给通信发送方；")]),t._v(" "),e("li",[t._v("缺点: 运算速度慢。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/39ccb299-ee99-4dd1-b8b4-2f9ec9495cb4.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_3-https-采用的加密方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-https-采用的加密方式"}},[t._v("#")]),t._v(" 3. HTTPs 采用的加密方式")]),t._v(" "),e("p",[t._v("HTTPs 采用混合的加密机制，使用非对称密钥加密用于传输对称密钥来保证传输过程的安全性，之后使用对称密钥加密进行通信来保证通信过程的效率。(下图中的\nSession Key 就是对称密钥)")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/How-HTTPS-Works.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),e("p",[t._v("通过使用 "),e("strong",[t._v("证书")]),t._v(" 来对通信方进行认证。")]),t._v(" "),e("p",[t._v("数字证书认证机构(CA，Certificate Authority)是客户端与服务器双方都可信赖的第三方机构。")]),t._v(" "),e("p",[t._v("服务器的运营人员向 CA 提出公开密钥的申请，CA\n在判明提出申请者的身份之后，会对已申请的公开密钥做数字签名，然后分配这个已签名的公开密钥，并将该公开密钥放入公开密钥证书后绑定在一起。")]),t._v(" "),e("p",[t._v("进行 HTTPs 通信时，服务器会把证书发送给客户端。客户端取得其中的公开密钥之后，先使用数字签名进行验证，如果验证通过，就可以开始通信了。")]),t._v(" "),e("p",[t._v("通信开始时，客户端需要使用服务器的公开密钥将自己的私有密钥传输给服务器，之后再进行对称密钥加密。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/2017-06-11-ca.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"完整性保护"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整性保护"}},[t._v("#")]),t._v(" 完整性保护")]),t._v(" "),e("p",[t._v("SSL 提供报文摘要功能来进行完整性保护。")]),t._v(" "),e("p",[t._v("HTTP 也提供了 MD5 报文摘要功能，但不是安全的。例如报文内容被篡改之后，同时重新计算 MD5 的值，通信接收方是无法意识到发生了篡改。")]),t._v(" "),e("p",[t._v("HTTPs\n的报文摘要功能之所以安全，是因为它结合了加密和认证这两个操作。试想一下，加密之后的报文，遭到篡改之后，也很难重新计算报文摘要，因为无法轻易获取明文。")]),t._v(" "),e("h3",{attrs:{id:"https-的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https-的缺点"}},[t._v("#")]),t._v(" HTTPs 的缺点")]),t._v(" "),e("ul",[e("li",[t._v("因为需要进行加密解密等过程，因此速度会更慢；")]),t._v(" "),e("li",[t._v("需要支付证书授权的高额费用。")])]),t._v(" "),e("h3",{attrs:{id:"配置-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-https"}},[t._v("#")]),t._v(" 配置 HTTPs")]),t._v(" "),e("p",[t._v("[Nginx 配置 HTTPS 服务器在新窗口打开](https://aotu.io/notes/2016/08/16/nginx-\nhttps/index.html)")]),t._v(" "),e("h2",{attrs:{id:"七、http-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七、http-2-0"}},[t._v("#")]),t._v(" 七、HTTP/2.0")]),t._v(" "),e("h3",{attrs:{id:"http-1-x-缺陷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-1-x-缺陷"}},[t._v("#")]),t._v(" HTTP/1.x 缺陷")]),t._v(" "),e("p",[t._v("HTTP/1.x 实现简单是以牺牲性能为代价的:")]),t._v(" "),e("ul",[e("li",[t._v("客户端需要使用多个连接才能实现并发和缩短延迟；")]),t._v(" "),e("li",[t._v("不会压缩请求和响应首部，从而导致不必要的网络流量；")]),t._v(" "),e("li",[t._v("不支持有效的资源优先级，致使底层 TCP 连接的利用率低下。")])]),t._v(" "),e("h3",{attrs:{id:"二进制分帧层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二进制分帧层"}},[t._v("#")]),t._v(" 二进制分帧层")]),t._v(" "),e("p",[t._v("HTTP/2.0 将报文分成 HEADERS 帧和 DATA 帧，它们都是二进制格式的。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/86e6a91d-a285-447a-9345-c5484b8d0c47.png",alt:"img"}})]),t._v(" "),e("p",[t._v("在通信过程中，只会有一个 TCP 连接存在，它承载了任意数量的双向数据流(Stream)。")]),t._v(" "),e("ul",[e("li",[t._v("一个数据流都有一个唯一标识符和可选的优先级信息，用于承载双向信息。")]),t._v(" "),e("li",[t._v("消息(Message)是与逻辑请求或响应消息对应的完整的一系列帧。")]),t._v(" "),e("li",[t._v("帧(Fram)是最小的通信单位，来自不同数据流的帧可以交错发送，然后再根据每个帧头的数据流标识符重新组装。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/af198da1-2480-4043-b07f-a3b91a88b815.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"服务端推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务端推送"}},[t._v("#")]),t._v(" 服务端推送")]),t._v(" "),e("p",[t._v("HTTP/2.0 在客户端请求一个资源时，会把相关的资源一起发送给客户端，客户端就不需要再次发起请求了。例如客户端请求 page.html 页面，服务端就把\nscript.js 和 style.css 等与之相关的资源一起发给客户端。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/e3f1657c-80fc-4dfa-9643-bf51abd201c6.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"首部压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首部压缩"}},[t._v("#")]),t._v(" 首部压缩")]),t._v(" "),e("p",[t._v("HTTP/1.1 的首部带有大量信息，而且每次都要重复发送。")]),t._v(" "),e("p",[t._v("HTTP/2.0 要求客户端和服务器同时维护和更新一个包含之前见过的首部字段表，从而避免了重复传输。")]),t._v(" "),e("p",[t._v("不仅如此，HTTP/2.0 也使用 Huffman 编码对首部字段进行压缩。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/_u4E0B_u8F7D.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"八、get-和-post-比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八、get-和-post-比较"}},[t._v("#")]),t._v(" 八、GET 和 POST 比较")]),t._v(" "),e("h3",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),e("p",[t._v("GET 用于获取资源，而 POST 用于传输实体主体。")]),t._v(" "),e("h3",{attrs:{id:"参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),e("p",[t._v("GET 和 POST 的请求都能使用额外的参数，但是 GET 的参数是以查询字符串出现在 URL 中，而 POST 的参数存储在实体主体中。不能因为\nPOST 参数存储在实体主体中就认为它的安全性更高，因为照样可以通过一些抓包工具(Fiddler)查看。")]),t._v(" "),e("p",[t._v("因为 URL 只支持 ASCII 码，因此 GET 的参数中如果存在中文等字符就需要先进行编码。例如 "),e("code",[t._v("中文")]),t._v(" 会转换为\n"),e("code",[t._v("%E4%B8%AD%E6%96%87")]),t._v("，而空格会转换为 "),e("code",[t._v("%20")]),t._v("。POST 参考支持标准字符集。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("GET /test/demo_form.asp?name1=value1&name2=value2 HTTP/1.1\n\n\n\nPOST /test/demo_form.asp HTTP/1.1\nHost: w3schools.com\nname1=value1&name2=value2\n")])])]),e("h3",{attrs:{id:"安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),e("p",[t._v("安全的 HTTP 方法不会改变服务器状态，也就是说它只是可读的。")]),t._v(" "),e("p",[t._v("GET 方法是安全的，而 POST 却不是，因为 POST\n的目的是传送实体主体内容，这个内容可能是用户上传的表单数据，上传成功之后，服务器可能把这个数据存储到数据库中，因此状态也就发生了改变。")]),t._v(" "),e("p",[t._v("安全的方法除了 GET 之外还有: HEAD、OPTIONS。")]),t._v(" "),e("p",[t._v("不安全的方法除了 POST 之外还有 PUT、DELETE。")]),t._v(" "),e("h3",{attrs:{id:"幂等性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#幂等性"}},[t._v("#")]),t._v(" 幂等性")]),t._v(" "),e("p",[t._v("幂等的 HTTP 方法，同样的请求被执行一次与连续执行多次的效果是一样的，服务器的状态也是一样的。换句话说就是，幂等方法不应该具有副作用(统计用途除外)。")]),t._v(" "),e("p",[t._v("所有的安全方法也都是幂等的。")]),t._v(" "),e("p",[t._v("在正确实现的条件下，GET，HEAD，PUT 和 DELETE 等方法都是幂等的，而 POST 方法不是。")]),t._v(" "),e("p",[t._v("GET /pageX HTTP/1.1 是幂等的，连续调用多次，客户端接收到的结果都是一样的:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("GET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\nGET /pageX HTTP/1.1\n")])])]),e("p",[t._v("POST /add_row HTTP/1.1 不是幂等的，如果调用多次，就会增加多行记录:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("POST /add_row HTTP/1.1   -> Adds a 1nd row\nPOST /add_row HTTP/1.1   -> Adds a 2nd row\nPOST /add_row HTTP/1.1   -> Adds a 3rd row\n")])])]),e("p",[t._v("DELETE /idX/delete HTTP/1.1 是幂等的，即便不同的请求接收到的状态码不一样:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("DELETE /idX/delete HTTP/1.1   -> Returns 200 if idX exists\nDELETE /idX/delete HTTP/1.1   -> Returns 404 as it just got deleted\nDELETE /idX/delete HTTP/1.1   -> Returns 404\n")])])]),e("h3",{attrs:{id:"可缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可缓存"}},[t._v("#")]),t._v(" 可缓存")]),t._v(" "),e("p",[t._v("如果要对响应进行缓存，需要满足以下条件:")]),t._v(" "),e("ul",[e("li",[t._v("请求报文的 HTTP 方法本身是可缓存的，包括 GET 和 HEAD，但是 PUT 和 DELETE 不可缓存，POST 在多数情况下不可缓存的。")]),t._v(" "),e("li",[t._v("响应报文的状态码是可缓存的，包括: 200, 203, 204, 206, 300, 301, 404, 405, 410, 414, and 501。")]),t._v(" "),e("li",[t._v("响应报文的 Cache-Control 首部字段没有指定不进行缓存。")])]),t._v(" "),e("h3",{attrs:{id:"xmlhttprequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[t._v("#")]),t._v(" XMLHttpRequest")]),t._v(" "),e("p",[t._v("为了阐述 POST 和 GET 的另一个区别，需要先了解 XMLHttpRequest:")]),t._v(" "),e("blockquote",[e("p",[t._v("XMLHttpRequest 是一个 API，它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL\n来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 AJAX 中被大量使用。")])]),t._v(" "),e("ul",[e("li",[t._v("在使用 XMLHttpRequest 的 POST 方法时，浏览器会先发送 Header 再发送 Data。但并不是所有浏览器会这么做，例如火狐就不会。")]),t._v(" "),e("li",[t._v("而 GET 方法 Header 和 Data 会一起发送。")])]),t._v(" "),e("h2",{attrs:{id:"九、http-1-0-与-http-1-1-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#九、http-1-0-与-http-1-1-的区别"}},[t._v("#")]),t._v(" 九、HTTP/1.0 与 HTTP/1.1 的区别")]),t._v(" "),e("blockquote",[e("p",[t._v("详细内容请见上文")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("HTTP/1.1 默认是长连接")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 支持管线化处理")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 支持同时打开多个 TCP 连接")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 支持虚拟主机")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 新增状态码 100")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 支持分块传输编码")])]),t._v(" "),e("li",[e("p",[t._v("HTTP/1.1 新增缓存处理指令 max-age")])])]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[t._v("上野宣. 图解 HTTP[M]. 人民邮电出版社, 2014.")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN : HTTP在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/http2/?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/2 简介在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://php.net/manual/zh/function.htmlspecialchars.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("htmlspecialchars在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://java2db.com/java-io/how-to-get-and-the-difference-between-file-uri-and-url-in-java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Difference between file URI and URL in java在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to Fix SQL Injection Using Java PreparedStatement & CallableStatement在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/hyddd/archive/2009/03/31/1426026.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅谈 HTTP 中 Get 与 Post 的区别在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.webdancers.com/are-http-and-www-necesary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Are http:// and www really necessary?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP (HyperText Transfer Protocol)在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.igvita.com/2011/12/01/web-vpn-secure-proxies-with-spdy-chrome/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web-VPN: Secure Proxies with SPDY & Chrome在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://en.wikipedia.org/wiki/File:HTTP_persistent_connection.svg",target:"_blank",rel:"noopener noreferrer"}},[t._v("File:HTTP persistent connection.svg在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Proxy_server",target:"_blank",rel:"noopener noreferrer"}},[t._v("Proxy server在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.x-cart.com/blog/what-is-https-and-ssl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("What Is This HTTPS/SSL Thing And Why Should You Care?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://securebox.comodo.com/ssl-sniffing/ssl-offloading/",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is SSL Offloading?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://docs.oracle.com/cd/E19424-01/820-4811/6ng8i26bn/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sun Directory Server Enterprise Edition 7.0 Reference - Key Encryption在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.codeproject.com/Articles/326574/An-Introduction-to-Mutual-SSL-Authentication",target:"_blank",rel:"noopener noreferrer"}},[t._v("An Introduction to Mutual SSL Authentication在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://danielmiessler.com/study/url-uri/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Difference Between URLs and URIs在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/entry/5766c29d6be3ff006a31b84e#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie 与 Session 的区别在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.zhihu.com/question/19786827",target:"_blank",rel:"noopener noreferrer"}},[t._v("COOKIE 和 SESSION 有什么区别在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://harttle.land/2015/08/10/cookie-session.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie/Session 的机制与安全在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://shijianan.com/2017/06/11/https/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTPS 证书原理在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/176264/what-is-the-difference-between-a-uri-a-url-and-a-urn",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is the difference between a URI, a URL and a URN?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[t._v("XMLHttpRequest在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.josephscott.org/2009/08/27/xmlhttprequest-xhr-uses-multiple-packets-for-http-post/",target:"_blank",rel:"noopener noreferrer"}},[t._v("XMLHttpRequest (XHR) Uses Multiple Packets for HTTP POST?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.ssl2buy.com/wiki/symmetric-vs-asymmetric-encryption-what-are-differences",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symmetric vs. Asymmetric Encryption – What are differences?在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.kancloud.cn/digest/web-performance-http2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 性能优化与 HTTP/2在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/http2/?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/2 简介在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/upyun/p/8508126.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("科普 TLS 1.3—新特性与开启方式在新窗口打开"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);