(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{533:function(a,t,e){"use strict";e.r(t);var r=e(4),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"数据挖掘-10大算法汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘-10大算法汇总"}},[a._v("#")]),a._v(" 数据挖掘 - 10大算法汇总")]),a._v(" "),t("blockquote",[t("p",[a._v("国际权威的学术组织the IEEE International Conference on Data Mining (ICDM)\n2006年12月评选出了数据挖掘领域的十大经典算法: C4.5, k-Means, SVM, Apriori, EM, PageRank,\nAdaBoost, kNN, Naive Bayes, and CART。")])]),a._v(" "),t("h2",{attrs:{id:"推荐学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐学习"}},[a._v("#")]),a._v(" 推荐学习")]),a._v(" "),t("ul",[t("li",[a._v("博客园@刘建平Pinard 的"),t("a",{attrs:{href:"https://www.cnblogs.com/pinard/",target:"_blank",rel:"noopener noreferrer"}},[a._v("机器学习，数据挖掘系列在新窗口打开"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"数据挖掘十大经典算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据挖掘十大经典算法"}},[a._v("#")]),a._v(" 数据挖掘十大经典算法")]),a._v(" "),t("h3",{attrs:{id:"c4-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c4-5"}},[a._v("#")]),a._v(" C4.5")]),a._v(" "),t("p",[a._v("C4.5算法是机器学习算法中的一种分类决策树算法,其核心算法是ID3算法.  C4.5算法继承了ID3算法的优点，并在以下几方面对ID3算法进行了改进:")]),a._v(" "),t("ul",[t("li",[a._v("用信息增益率来选择属性，克服了用信息增益选择属性时偏向选择取值多的属性的不足；")]),a._v(" "),t("li",[a._v("在树构造过程中进行剪枝；")]),a._v(" "),t("li",[a._v("能够完成对连续属性的离散化处理；")]),a._v(" "),t("li",[a._v("能够对不完整数据进行处理。")])]),a._v(" "),t("p",[a._v("C4.5算法有如下优点: 产生的分类规则易于理解，准确率较高。其缺点是:\n在构造树的过程中，需要对数据集进行多次的顺序扫描和排序，因而导致算法的低效(相对的CART算法只需要扫描两次数据集，以下仅为决策树优缺点)。")]),a._v(" "),t("h3",{attrs:{id:"the-k-means-algorithm-即k-means算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-k-means-algorithm-即k-means算法"}},[a._v("#")]),a._v(" The k-means algorithm 即K-Means算法")]),a._v(" "),t("p",[a._v("k-means algorithm算法是一个聚类算法，把n的对象根据他们的属性分为k个分割，k <\nn。它与处理混合正态分布的最大期望算法很相似，因为他们都试图找到数据中自然聚类的中心。它假设对象属性来自于空间向量，并且目标是使各个群组内部的均\n方误差总和最小。")]),a._v(" "),t("h3",{attrs:{id:"support-vector-machines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#support-vector-machines"}},[a._v("#")]),a._v(" Support vector machines")]),a._v(" "),t("p",[a._v("支持向量机，英文为Support Vector\nMachine，简称SV机(论文中一般简称SVM)。它是一种監督式學習的方法，它广泛的应用于统计分类以及回归分析中。支持向量机将向量映射到一个更\n高维的空间里，在这个空间里建立有一个最大间隔超平面。在分开数据的超平面的两边建有两个互相平行的超平面。分隔超平面使两个平行超平面的距离最大化。假\n定平行超平面间的距离或差距越大，分类器的总误差越小。一个极好的指南是C.J.C Burges的《模式识别支持向量机指南》。van der Walt 和\nBarnard 将支持向量机和其他分类器进行了比较。")]),a._v(" "),t("h3",{attrs:{id:"the-apriori-algorithm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-apriori-algorithm"}},[a._v("#")]),a._v(" The Apriori algorithm")]),a._v(" "),t("p",[a._v("Apriori算法是一种最有影响的挖掘布尔关联规则频繁项集的算法。其核心是基于两阶段频集思想的递推算法。该关联规则在分类上属于单维、单层、布尔关联规则。在这里，所有支持度大于最小支持度的项集称为频繁项集，简称频集。")]),a._v(" "),t("h3",{attrs:{id:"最大期望-em-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最大期望-em-算法"}},[a._v("#")]),a._v(" 最大期望(EM)算法")]),a._v(" "),t("p",[a._v("在统计计算中，最大期望(EM，Expectation–Maximization)算法是在概率(probabilistic)模型中寻找参数最大似然\n估计的算法，其中概率模型依赖于无法观测的隐藏变量(Latent Variabl)。最大期望经常用在机器学习和计算机视觉的数据集聚(Data\nClustering)领域。")]),a._v(" "),t("h3",{attrs:{id:"pagerank"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pagerank"}},[a._v("#")]),a._v(" PageRank")]),a._v(" "),t("p",[a._v("PageRank是Google算法的重要内容。2001年9月被授予美国专利，专利人是Google创始人之一拉里·佩奇(Larry\nPage)。因此，PageRank里的page不是指网页，而是指佩奇，即这个等级方法是以佩奇来命名的。")]),a._v(" "),t("p",[a._v("PageRank根据网站的外部链接和内部链接的数量和质量俩衡量网站的价值。PageRank背后的概念是，每个到页面的链接都是对该页面的一次投票，\n被链接的越多，就意味着被其他网站投票越多。这个就是所谓的“链接流行度”——衡量多少人愿意将他们的网站和你的网站挂钩。PageRank这个概念引自\n学术中一篇论文的被引述的频度——即被别人引述的次数越多，一般判断这篇论文的权威性就越高。")]),a._v(" "),t("h3",{attrs:{id:"adaboost"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adaboost"}},[a._v("#")]),a._v(" AdaBoost")]),a._v(" "),t("p",[a._v("Adaboost是一种迭代算法，其核心思想是针对同一个训练集训练不同的分类器(弱分类器)，然后把这些弱分类器集合起来，构成一个更强的最终分类器\n(强分类器)。其算法本身是通过改变数据分布来实现的，它根据每次训练集之中每个样本的分类是否正确，以及上次的总体分类的准确率，来确定每个样本的权\n值。将修改过权值的新数据集送给下层分类器进行训练，最后将每次训练得到的分类器最后融合起来，作为最后的决策分类器。")]),a._v(" "),t("h3",{attrs:{id:"knn-k-nearest-neighbor-classification"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#knn-k-nearest-neighbor-classification"}},[a._v("#")]),a._v(" kNN: k-nearest neighbor classification")]),a._v(" "),t("p",[a._v("K最近邻(k-Nearest Neighbor，KNN)分类算法，是一个理论上比较成熟的方法，也是最简单的机器学习算法之一。该方法的思路是:\n如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别。")]),a._v(" "),t("h3",{attrs:{id:"naive-bayes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#naive-bayes"}},[a._v("#")]),a._v(" Naive Bayes")]),a._v(" "),t("p",[a._v("在众多的分类模型中，应用最为广泛的两种分类模型是决策树模型(Decision Tree Model)和朴素贝叶斯模型(Naive Bayesian\nModel，NBC)。 朴素贝叶斯模型发源于古典数学理论，有着坚实的数学基础，以\n及稳定的分类效率。同时，NBC模型所需估计的参数很少，对缺失数据不太敏感，算法也比较简单。理论上，NBC模型与其他分类方法相比具有最小的误差率。\n但是实际上并非总是如此，这是因为NBC模型假设属性之间相互独立，这个假设在实际应用中往往是不成立的，这给NBC模型的正确分类带来了一定影响。在属\n性个数比较多或者属性之间相关性较大时，NBC模型的分类效率比不上决策树模型。而在属性相关性较小时，NBC模型的性能最为良好。")]),a._v(" "),t("h3",{attrs:{id:"cart-分类与回归树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cart-分类与回归树"}},[a._v("#")]),a._v(" CART: 分类与回归树")]),a._v(" "),t("p",[a._v("CART, Classification and Regression Trees。\n在分类树下面有两个关键的思想。第一个是关于递归地划分自变量空间的想法(二元切分法)；第二个想法是用验证数据进行剪枝(预剪枝、后剪枝)。在回归树的基础上的模型树构建难度可能增加了，但同时其分类效果也有提升。")]),a._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),t("p",[a._v("提示")]),a._v(" "),t("p",[a._v("本文主要来源于这里https://blog.csdn.net/qq_36523839/article/details/82383597。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("https://blog.csdn.net/qq_36523839/article/details/82383597")])]),a._v(" "),t("li",[t("p",[a._v("https://blog.csdn.net/u010983763/article/details/70854469")])]),a._v(" "),t("li",[t("p",[a._v("https://www.cnblogs.com/jchubby/p/5449404.html")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);