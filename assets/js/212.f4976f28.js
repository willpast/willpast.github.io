(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{543:function(a,s,e){"use strict";e.r(s);var n=e(4),t=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"sql语言-sql题目进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql语言-sql题目进阶"}},[a._v("#")]),a._v(" SQL语言 - SQL题目进阶")]),a._v(" "),s("h2",{attrs:{id:"相关题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关题目"}},[a._v("#")]),a._v(" 相关题目")]),a._v(" "),s("h3",{attrs:{id:"_595-big-countries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_595-big-countries"}},[a._v("#")]),a._v(" 595. Big Countries")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/big-countries/description/")]),a._v(" "),s("h4",{attrs:{id:"description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-----------------+------------+------------+--------------+---------------+\n| name            | continent  | area       | population   | gdp           |\n+-----------------+------------+------------+--------------+---------------+\n| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |\n| Albania         | Europe     | 28748      | 2831741      | 12960000      |\n| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |\n| Andorra         | Europe     | 468        | 78115        | 3712000       |\n| Angola          | Africa     | 1246700    | 20609294     | 100990000     |\n+-----------------+------------+------------+--------------+---------------+\n")])])]),s("p",[a._v("查找面积超过 3,000,000 或者人口数超过 25,000,000 的国家。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+--------------+-------------+--------------+\n| name         | population  | area         |\n+--------------+-------------+--------------+\n| Afghanistan  | 25500100    | 652230       |\n| Algeria      | 37100000    | 2381741      |\n+--------------+-------------+--------------+\n")])])]),s("h4",{attrs:{id:"sql-schema"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS World;\nCREATE TABLE World ( NAME VARCHAR ( 255 ), continent VARCHAR ( 255 ), area INT, population INT, gdp INT );\nINSERT INTO World ( NAME, continent, area, population, gdp )\nVALUES\n    ( 'Afghanistan', 'Asia', '652230', '25500100', '203430000' ),\n    ( 'Albania', 'Europe', '28748', '2831741', '129600000' ),\n    ( 'Algeria', 'Africa', '2381741', '37100000', '1886810000' ),\n    ( 'Andorra', 'Europe', '468', '78115', '37120000' ),\n    ( 'Angola', 'Africa', '1246700', '20609294', '1009900000' );\n")])])]),s("h4",{attrs:{id:"solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT name,\n    population,\n    area\nFROM\n    World\nWHERE\n    area > 3000000\n    OR population > 25000000;\n")])])]),s("h3",{attrs:{id:"_627-swap-salary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_627-swap-salary"}},[a._v("#")]),a._v(" 627. Swap Salary")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/swap-salary/description/")]),a._v(" "),s("h4",{attrs:{id:"description-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-2"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | m   | 2500   |\n| 2  | B    | f   | 1500   |\n| 3  | C    | m   | 5500   |\n| 4  | D    | f   | 500    |\n")])])]),s("p",[a._v("只用一个 SQL 查询，将 sex 字段反转。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | f   | 2500   |\n| 2  | B    | m   | 1500   |\n| 3  | C    | f   | 5500   |\n| 4  | D    | m   | 500    |\n")])])]),s("h4",{attrs:{id:"sql-schema-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-2"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS salary;\nCREATE TABLE salary ( id INT, NAME VARCHAR ( 100 ), sex CHAR ( 1 ), salary INT );\nINSERT INTO salary ( id, NAME, sex, salary )\nVALUES\n    ( '1', 'A', 'm', '2500' ),\n    ( '2', 'B', 'f', '1500' ),\n    ( '3', 'C', 'm', '5500' ),\n    ( '4', 'D', 'f', '500' );\n")])])]),s("h4",{attrs:{id:"solution-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-2"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("UPDATE salary\nSET sex = CHAR ( ASCII(sex) ^ ASCII( 'm' ) ^ ASCII( 'f' ) );\n")])])]),s("h3",{attrs:{id:"_620-not-boring-movies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_620-not-boring-movies"}},[a._v("#")]),a._v(" 620. Not Boring Movies")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/not-boring-movies/description/")]),a._v(" "),s("h4",{attrs:{id:"description-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-3"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   1     | War       |   great 3D   |   8.9     |\n|   2     | Science   |   fiction    |   8.5     |\n|   3     | irish     |   boring     |   6.2     |\n|   4     | Ice song  |   Fantacy    |   8.6     |\n|   5     | House card|   Interesting|   9.1     |\n+---------+-----------+--------------+-----------+\n")])])]),s("p",[a._v("查找 id 为奇数，并且 description 不是 boring 的电影，按 rating 降序。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   5     | House card|   Interesting|   9.1     |\n|   1     | War       |   great 3D   |   8.9     |\n+---------+-----------+--------------+-----------+\n")])])]),s("h4",{attrs:{id:"sql-schema-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-3"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS cinema;\nCREATE TABLE cinema ( id INT, movie VARCHAR ( 255 ), description VARCHAR ( 255 ), rating FLOAT ( 2, 1 ) );\nINSERT INTO cinema ( id, movie, description, rating )\nVALUES\n    ( 1, 'War', 'great 3D', 8.9 ),\n    ( 2, 'Science', 'fiction', 8.5 ),\n    ( 3, 'irish', 'boring', 6.2 ),\n    ( 4, 'Ice song', 'Fantacy', 8.6 ),\n    ( 5, 'House card', 'Interesting', 9.1 );\n")])])]),s("h4",{attrs:{id:"solution-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-3"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    *\nFROM\n    cinema\nWHERE\n    id % 2 = 1\n    AND description != 'boring'\nORDER BY\n    rating DESC;\n")])])]),s("h3",{attrs:{id:"_596-classes-more-than-5-students"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_596-classes-more-than-5-students"}},[a._v("#")]),a._v(" 596. Classes More Than 5 Students")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/classes-more-than-5-students/description/")]),a._v(" "),s("h4",{attrs:{id:"description-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-4"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+------------+\n| student | class      |\n+---------+------------+\n| A       | Math       |\n| B       | English    |\n| C       | Math       |\n| D       | Biology    |\n| E       | Math       |\n| F       | Computer   |\n| G       | Math       |\n| H       | Math       |\n| I       | Math       |\n+---------+------------+\n")])])]),s("p",[a._v("查找有五名及以上 student 的 class。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+\n| class   |\n+---------+\n| Math    |\n+---------+\n")])])]),s("h4",{attrs:{id:"sql-schema-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-4"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS courses;\nCREATE TABLE courses ( student VARCHAR ( 255 ), class VARCHAR ( 255 ) );\nINSERT INTO courses ( student, class )\nVALUES\n    ( 'A', 'Math' ),\n    ( 'B', 'English' ),\n    ( 'C', 'Math' ),\n    ( 'D', 'Biology' ),\n    ( 'E', 'Math' ),\n    ( 'F', 'Computer' ),\n    ( 'G', 'Math' ),\n    ( 'H', 'Math' ),\n    ( 'I', 'Math' );\n")])])]),s("h4",{attrs:{id:"solution-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-4"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    class\nFROM\n    courses\nGROUP BY\n    class\nHAVING\n    count( DISTINCT student ) >= 5;\n")])])]),s("h3",{attrs:{id:"_182-duplicate-emails"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_182-duplicate-emails"}},[a._v("#")]),a._v(" 182. Duplicate Emails")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/duplicate-emails/description/")]),a._v(" "),s("h4",{attrs:{id:"description-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-5"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("邮件地址表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+---------+\n| Id | Email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n")])])]),s("p",[a._v("查找重复的邮件地址:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\n")])])]),s("h4",{attrs:{id:"sql-schema-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-5"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Person;\nCREATE TABLE Person ( Id INT, Email VARCHAR ( 255 ) );\nINSERT INTO Person ( Id, Email )\nVALUES\n    ( 1, 'a@b.com' ),\n    ( 2, 'c@d.com' ),\n    ( 3, 'a@b.com' );\n")])])]),s("h4",{attrs:{id:"solution-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-5"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    Email\nFROM\n    Person\nGROUP BY\n    Email\nHAVING\n    COUNT( * ) >= 2;\n")])])]),s("h3",{attrs:{id:"_196-delete-duplicate-emails"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_196-delete-duplicate-emails"}},[a._v("#")]),a._v(" 196. Delete Duplicate Emails")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/delete-duplicate-emails/description/")]),a._v(" "),s("h4",{attrs:{id:"description-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-6"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("邮件地址表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+---------+\n| Id | Email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n")])])]),s("p",[a._v("删除重复的邮件地址:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+------------------+\n| Id | Email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+\n")])])]),s("h4",{attrs:{id:"sql-schema-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-6"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("p",[a._v("与 182 相同。")]),a._v(" "),s("h4",{attrs:{id:"solution-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-6"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("连接:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DELETE p1\nFROM\n    Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email\n    AND p1.Id > p2.Id\n")])])]),s("p",[a._v("子查询:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DELETE\nFROM\n    Person\nWHERE\n    id NOT IN ( SELECT id FROM ( SELECT min( id ) AS id FROM Person GROUP BY email ) AS m );\n")])])]),s("p",[a._v("应该注意的是上述解法额外嵌套了一个 SELECT 语句，如果不这么做，会出现错误: You can't specify target table\n'Person' for update in FROM clause。以下演示了这种错误解法。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DELETE\nFROM\n    Person\nWHERE\n    id NOT IN ( SELECT min( id ) AS id FROM Person GROUP BY email );\n")])])]),s("p",[a._v("参考: [pMySQL Error 1093 - Can't specify target table for update in FROM\nclause在新窗口打开](https://stackoverflow.com/questions/45494/mysql-error-1093-cant-\nspecify-target-table-for-update-in-from-clause)")]),a._v(" "),s("h3",{attrs:{id:"_175-combine-two-tables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_175-combine-two-tables"}},[a._v("#")]),a._v(" 175. Combine Two Tables")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/combine-two-tables/description/")]),a._v(" "),s("h4",{attrs:{id:"description-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-7"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("Person 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| PersonId    | int     |\n| FirstName   | varchar |\n| LastName    | varchar |\n+-------------+---------+\nPersonId is the primary key column for this table.\n")])])]),s("p",[a._v("Address 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| AddressId   | int     |\n| PersonId    | int     |\n| City        | varchar |\n| State       | varchar |\n+-------------+---------+\nAddressId is the primary key column for this table.\n")])])]),s("p",[a._v("查找 FirstName, LastName, City, State 数据，而不管一个用户有没有填地址信息。")]),a._v(" "),s("h4",{attrs:{id:"sql-schema-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-7"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Person;\nCREATE TABLE Person ( PersonId INT, FirstName VARCHAR ( 255 ), LastName VARCHAR ( 255 ) );\nDROP TABLE\nIF\n    EXISTS Address;\nCREATE TABLE Address ( AddressId INT, PersonId INT, City VARCHAR ( 255 ), State VARCHAR ( 255 ) );\nINSERT INTO Person ( PersonId, LastName, FirstName )\nVALUES\n    ( 1, 'Wang', 'Allen' );\nINSERT INTO Address ( AddressId, PersonId, City, State )\nVALUES\n    ( 1, 2, 'New York City', 'New York' );\n")])])]),s("h4",{attrs:{id:"solution-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-7"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("使用左外连接。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    FirstName,\n    LastName,\n    City,\n    State\nFROM\n    Person P\n    LEFT JOIN Address A\n    ON P.PersonId = A.PersonId;\n")])])]),s("h3",{attrs:{id:"_181-employees-earning-more-than-their-managers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_181-employees-earning-more-than-their-managers"}},[a._v("#")]),a._v(" 181. Employees Earning More Than Their Managers")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/employees-earning-more-than-their-\nmanagers/description/")]),a._v(" "),s("h4",{attrs:{id:"description-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-8"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("Employee 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+-------+--------+-----------+\n| Id | Name  | Salary | ManagerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | NULL      |\n| 4  | Max   | 90000  | NULL      |\n+----+-------+--------+-----------+\n")])])]),s("p",[a._v("查找薪资大于其经理薪资的员工信息。")]),a._v(" "),s("h4",{attrs:{id:"sql-schema-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-8"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Employee;\nCREATE TABLE Employee ( Id INT, NAME VARCHAR ( 255 ), Salary INT, ManagerId INT );\nINSERT INTO Employee ( Id, NAME, Salary, ManagerId )\nVALUES\n    ( 1, 'Joe', 70000, 3 ),\n    ( 2, 'Henry', 80000, 4 ),\n    ( 3, 'Sam', 60000, NULL ),\n    ( 4, 'Max', 90000, NULL );\n")])])]),s("h4",{attrs:{id:"solution-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-8"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    E1.NAME AS Employee\nFROM\n    Employee E1\n    INNER JOIN Employee E2\n    ON E1.ManagerId = E2.Id\n    AND E1.Salary > E2.Salary;\n")])])]),s("h3",{attrs:{id:"_183-customers-who-never-order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_183-customers-who-never-order"}},[a._v("#")]),a._v(" 183. Customers Who Never Order")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/customers-who-never-order/description/")]),a._v(" "),s("h4",{attrs:{id:"description-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-9"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("Curstomers 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+-------+\n| Id | Name  |\n+----+-------+\n| 1  | Joe   |\n| 2  | Henry |\n| 3  | Sam   |\n| 4  | Max   |\n+----+-------+\n")])])]),s("p",[a._v("Orders 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+------------+\n| Id | CustomerId |\n+----+------------+\n| 1  | 3          |\n| 2  | 1          |\n+----+------------+\n")])])]),s("p",[a._v("查找没有订单的顾客信息:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-----------+\n| Customers |\n+-----------+\n| Henry     |\n| Max       |\n+-----------+\n")])])]),s("h4",{attrs:{id:"sql-schema-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-9"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Customers;\nCREATE TABLE Customers ( Id INT, NAME VARCHAR ( 255 ) );\nDROP TABLE\nIF\n    EXISTS Orders;\nCREATE TABLE Orders ( Id INT, CustomerId INT );\nINSERT INTO Customers ( Id, NAME )\nVALUES\n    ( 1, 'Joe' ),\n    ( 2, 'Henry' ),\n    ( 3, 'Sam' ),\n    ( 4, 'Max' );\nINSERT INTO Orders ( Id, CustomerId )\nVALUES\n    ( 1, 3 ),\n    ( 2, 1 );\n")])])]),s("h4",{attrs:{id:"solution-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-9"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("左外链接")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    C.Name AS Customers\nFROM\n    Customers C\n    LEFT JOIN Orders O\n    ON C.Id = O.CustomerId\nWHERE\n    O.CustomerId IS NULL;\n")])])]),s("p",[a._v("子查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    Name AS Customers\nFROM\n    Customers\nWHERE\n    Id NOT IN ( SELECT CustomerId FROM Orders );\n")])])]),s("h3",{attrs:{id:"_184-department-highest-salary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_184-department-highest-salary"}},[a._v("#")]),a._v(" 184. Department Highest Salary")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/department-highest-salary/description/")]),a._v(" "),s("h4",{attrs:{id:"description-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-10"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("Employee 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 70000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n+----+-------+--------+--------------+\n")])])]),s("p",[a._v("Department 表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n")])])]),s("p",[a._v("查找一个 Department 中收入最高者的信息:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| Sales      | Henry    | 80000  |\n+------------+----------+--------+\n")])])]),s("h4",{attrs:{id:"sql-schema-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-10"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE IF EXISTS Employee;\nCREATE TABLE Employee ( Id INT, NAME VARCHAR ( 255 ), Salary INT, DepartmentId INT );\nDROP TABLE IF EXISTS Department;\nCREATE TABLE Department ( Id INT, NAME VARCHAR ( 255 ) );\nINSERT INTO Employee ( Id, NAME, Salary, DepartmentId )\nVALUES\n    ( 1, 'Joe', 70000, 1 ),\n    ( 2, 'Henry', 80000, 2 ),\n    ( 3, 'Sam', 60000, 2 ),\n    ( 4, 'Max', 90000, 1 );\nINSERT INTO Department ( Id, NAME )\nVALUES\n    ( 1, 'IT' ),\n    ( 2, 'Sales' );\n")])])]),s("h4",{attrs:{id:"solution-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-10"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("创建一个临时表，包含了部门员工的最大薪资。可以对部门进行分组，然后使用 MAX() 汇总函数取得最大薪资。")]),a._v(" "),s("p",[a._v("之后使用连接找到一个部门中薪资等于临时表中最大薪资的员工。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    D.NAME Department,\n    E.NAME Employee,\n    E.Salary\nFROM\n    Employee E,\n    Department D,\n    ( SELECT DepartmentId, MAX( Salary ) Salary FROM Employee GROUP BY DepartmentId ) M\nWHERE\n    E.DepartmentId = D.Id\n    AND E.DepartmentId = M.DepartmentId\n    AND E.Salary = M.Salary;\n")])])]),s("h3",{attrs:{id:"_176-second-highest-salary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_176-second-highest-salary"}},[a._v("#")]),a._v(" 176. Second Highest Salary")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/second-highest-salary/description/")]),a._v(" "),s("h4",{attrs:{id:"description-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-11"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+--------+\n| Id | Salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\n")])])]),s("p",[a._v("查找工资第二高的员工。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------------------+\n| SecondHighestSalary |\n+---------------------+\n| 200                 |\n+---------------------+\n")])])]),s("p",[a._v("没有找到返回 null 而不是不返回数据。")]),a._v(" "),s("h4",{attrs:{id:"sql-schema-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-11"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Employee;\nCREATE TABLE Employee ( Id INT, Salary INT );\nINSERT INTO Employee ( Id, Salary )\nVALUES\n    ( 1, 100 ),\n    ( 2, 200 ),\n    ( 3, 300 );\n")])])]),s("h4",{attrs:{id:"solution-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-11"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("为了在没有查找到数据时返回 null，需要在查询结果外面再套一层 SELECT。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1, 1 ) SecondHighestSalary;\n")])])]),s("h3",{attrs:{id:"_177-nth-highest-salary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_177-nth-highest-salary"}},[a._v("#")]),a._v(" 177. Nth Highest Salary")]),a._v(" "),s("h4",{attrs:{id:"description-12"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-12"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("查找工资第 N 高的员工。")]),a._v(" "),s("h4",{attrs:{id:"sql-schema-12"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-12"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("p",[a._v("同 176。")]),a._v(" "),s("h4",{attrs:{id:"solution-12"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-12"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("CREATE FUNCTION getNthHighestSalary ( N INT ) RETURNS INT BEGIN\n\nSET N = N - 1;\nRETURN ( SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ) );\n\nEND\n")])])]),s("h3",{attrs:{id:"_178-rank-scores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_178-rank-scores"}},[a._v("#")]),a._v(" 178. Rank Scores")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/rank-scores/description/")]),a._v(" "),s("h4",{attrs:{id:"description-13"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-13"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("得分表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+-------+\n| Id | Score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\n")])])]),s("p",[a._v("将得分排序，并统计排名。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-------+------+\n| Score | Rank |\n+-------+------+\n| 4.00  | 1    |\n| 4.00  | 1    |\n| 3.85  | 2    |\n| 3.65  | 3    |\n| 3.65  | 3    |\n| 3.50  | 4    |\n+-------+------+\n")])])]),s("h4",{attrs:{id:"sql-schema-13"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-13"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS Scores;\nCREATE TABLE Scores ( Id INT, Score DECIMAL ( 3, 2 ) );\nINSERT INTO Scores ( Id, Score )\nVALUES\n    ( 1, 3.5 ),\n    ( 2, 3.65 ),\n    ( 3, 4.0 ),\n    ( 4, 3.85 ),\n    ( 5, 4.0 ),\n    ( 6, 3.65 );\n")])])]),s("h4",{attrs:{id:"solution-13"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-13"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    S1.score,\n    COUNT( DISTINCT S2.score ) Rank\nFROM\n    Scores S1\n    INNER JOIN Scores S2\n    ON S1.score <= S2.score\nGROUP BY\n    S1.id\nORDER BY\n    S1.score DESC;\n")])])]),s("h3",{attrs:{id:"_180-consecutive-numbers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_180-consecutive-numbers"}},[a._v("#")]),a._v(" 180. Consecutive Numbers")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/consecutive-numbers/description/")]),a._v(" "),s("h4",{attrs:{id:"description-14"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-14"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("数字表:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+----+-----+\n| Id | Num |\n+----+-----+\n| 1  |  1  |\n| 2  |  1  |\n| 3  |  1  |\n| 4  |  2  |\n| 5  |  1  |\n| 6  |  2  |\n| 7  |  2  |\n+----+-----+\n")])])]),s("p",[a._v("查找连续出现三次的数字。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+\n")])])]),s("h4",{attrs:{id:"sql-schema-14"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-14"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS LOGS;\nCREATE TABLE LOGS ( Id INT, Num INT );\nINSERT INTO LOGS ( Id, Num )\nVALUES\n    ( 1, 1 ),\n    ( 2, 1 ),\n    ( 3, 1 ),\n    ( 4, 2 ),\n    ( 5, 1 ),\n    ( 6, 2 ),\n    ( 7, 2 );\n")])])]),s("h4",{attrs:{id:"solution-14"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-14"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    DISTINCT L1.num ConsecutiveNums\nFROM\n    Logs L1,\n    Logs L2,\n    Logs L3\nWHERE L1.id = l2.id - 1\n    AND L2.id = L3.id - 1\n    AND L1.num = L2.num\n    AND l2.num = l3.num;\n")])])]),s("h3",{attrs:{id:"_626-exchange-seats"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_626-exchange-seats"}},[a._v("#")]),a._v(" 626. Exchange Seats")]),a._v(" "),s("p",[a._v("https://leetcode.com/problems/exchange-seats/description/")]),a._v(" "),s("h4",{attrs:{id:"description-15"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-15"}},[a._v("#")]),a._v(" Description")]),a._v(" "),s("p",[a._v("seat 表存储着座位对应的学生。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Abbot   |\n|    2    | Doris   |\n|    3    | Emerson |\n|    4    | Green   |\n|    5    | Jeames  |\n+---------+---------+\n")])])]),s("p",[a._v("要求交换相邻座位的两个学生，如果最后一个座位是奇数，那么不交换这个座位上的学生。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Doris   |\n|    2    | Abbot   |\n|    3    | Green   |\n|    4    | Emerson |\n|    5    | Jeames  |\n+---------+---------+\n")])])]),s("h4",{attrs:{id:"sql-schema-15"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-schema-15"}},[a._v("#")]),a._v(" SQL Schema")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("DROP TABLE\nIF\n    EXISTS seat;\nCREATE TABLE seat ( id INT, student VARCHAR ( 255 ) );\nINSERT INTO seat ( id, student )\nVALUES\n    ( '1', 'Abbot' ),\n    ( '2', 'Doris' ),\n    ( '3', 'Emerson' ),\n    ( '4', 'Green' ),\n    ( '5', 'Jeames' );\n")])])]),s("h4",{attrs:{id:"solution-15"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-15"}},[a._v("#")]),a._v(" Solution")]),a._v(" "),s("p",[a._v("使用多个 union。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("SELECT\n    s1.id - 1 AS id,\n    s1.student\nFROM\n    seat s1\nWHERE\n    s1.id MOD 2 = 0 UNION\nSELECT\n    s2.id + 1 AS id,\n    s2.student\nFROM\n    seat s2\nWHERE\n    s2.id MOD 2 = 1\n    AND s2.id != ( SELECT max( s3.id ) FROM seat s3 ) UNION\nSELECT\n    s4.id AS id,\n    s4.student\nFROM\n    seat s4\nWHERE\n    s4.id MOD 2 = 1\n    AND s4.id = ( SELECT max( s5.id ) FROM seat s5 )\nORDER BY\n    id;\n")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);