(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{503:function(a,e,t){"use strict";t.r(e);var r=t(4),l=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"♥算法思想知识体系导读♥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#♥算法思想知识体系导读♥"}},[a._v("#")]),a._v(" ♥算法思想知识体系导读♥")]),a._v(" "),e("blockquote",[e("p",[a._v("我们通过理解算法背后常用的算法思想，进行归纳总结，并通过leetcode练习来辅助理解和提升.")])]),a._v(" "),e("h2",{attrs:{id:"算法思想详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算法思想详解"}},[a._v("#")]),a._v(" 算法思想详解")]),a._v(" "),e("p",[e("em",[a._v("相关文章")])]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"/pages/alg-core-divide-and-conquer"}},[a._v("算法思想 - 分治算法")]),a._v(" "),e("ul",[e("li",[a._v("分治算法的基本思想是将一个规模为N的问题分解为K个规模较小的子问题，这些子问题相互独立且与原问题性质相同。求出子问题的解，就可得到原问题的解")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"/pages/alg-core-dynamic"}},[a._v("算法思想 - 动态规划算法")]),a._v(" "),e("ul",[e("li",[a._v("动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解。每一个解都对应于一个值，我们希望找到具有最优值的解。动态规划算法与分治法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"/pages/alg-core-greedy"}},[a._v("算法思想 - 贪心算法")]),a._v(" "),e("ul",[e("li",[a._v("本文主要介绍算法中贪心算法的思想: 保证每次操作都是局部最优的，并且最后得到的结果是全局最优的")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"/pages/alg-core-devide-two"}},[a._v("算法思想 - 二分法")]),a._v(" "),e("ul",[e("li",[a._v("本文主要介绍算法思想中分治算法重要的二分法，比如二分查找；二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法。但是，折半查找要求线性表必须采用顺序存储结构，而且表中元素按关键字有序排列。")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"/pages/alg-core-search"}},[a._v("算法思想 - 搜索算法")]),a._v(" "),e("ul",[e("li",[a._v("本文主要介绍算法中搜索算法的思想，主要包含BFS，DFS")])])]),a._v(" "),e("li",[e("a",{attrs:{href:"/pages/alg-core-backtracking"}},[a._v("算法思想 - 回溯算法")]),a._v(" "),e("ul",[e("li",[a._v("Backtracking(回溯)属于 DFS, 本文主要介绍算法中Backtracking算法的思想。回溯算法实际上一个类似枚举的搜索尝试过程，主要是在搜索尝试过程中寻找问题的解，当发现已不满足求解条件时，就“回溯”返回，尝试别的路径。回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);