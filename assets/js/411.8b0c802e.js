(window.webpackJsonp=window.webpackJsonp||[]).push([[411],{742:function(e,t,n){"use strict";n.r(t);var i=n(4),a=Object(i.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"结构型-代理-proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构型-代理-proxy"}},[e._v("#")]),e._v(" 结构型 - 代理(Proxy)")]),e._v(" "),t("blockquote",[t("p",[e._v("代理模式(Proxy pattern): 为另一个对象提供一个替身或占位符以控制对这个对象的访问。")])]),e._v(" "),t("h2",{attrs:{id:"意图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#意图"}},[e._v("#")]),e._v(" 意图")]),e._v(" "),t("p",[e._v("控制对其它对象的访问。")]),e._v(" "),t("h2",{attrs:{id:"类图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[e._v("#")]),e._v(" 类图")]),e._v(" "),t("p",[e._v("代理有以下四类:")]),e._v(" "),t("ul",[t("li",[e._v("远程代理(Remote Proxy): 控制对远程对象(不同地址空间)的访问，它负责将请求及其参数进行编码，并向不同地址空间中的对象发送已经编码的请求。")]),e._v(" "),t("li",[e._v("虚拟代理(Virtual Proxy): 根据需要创建开销很大的对象，它可以缓存实体的附加信息，以便延迟对它的访问，例如在网站加载一个很大图片时，不能马上完成，可以用虚拟代理缓存图片的大小信息，然后生成一张临时图片代替原始图片。")]),e._v(" "),t("li",[e._v("保护代理(Protection Proxy): 按权限控制对象的访问，它负责检查调用者是否具有实现一个请求所必须的访问权限。")]),e._v(" "),t("li",[e._v("智能代理(Smart Reference): 取代了简单的指针，它在访问对象时执行一些附加操作: 记录对象的引用次数；当第一次引用一个持久化对象时，将它装入内存；在访问一个实际对象前，检查是否已经锁定了它，以确保其它对象不能改变它。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/a6c20f60-5eba-427d-9413-352ada4b40fe.png",alt:"img"}})]),e._v(" "),t("h2",{attrs:{id:"实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[e._v("#")]),e._v(" 实现")]),e._v(" "),t("p",[e._v("以下是一个虚拟代理的实现，模拟了图片延迟加载的情况下使用与图片大小相等的临时内容去替换原始图片，直到图片加载完成才将图片显示出来。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('public interface Image {\n    void showImage();\n}\n\n\n\npublic class HighResolutionImage implements Image {\n\n    private URL imageURL;\n    private long startTime;\n    private int height;\n    private int width;\n\n    public int getHeight() {\n        return height;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public HighResolutionImage(URL imageURL) {\n        this.imageURL = imageURL;\n        this.startTime = System.currentTimeMillis();\n        this.width = 600;\n        this.height = 600;\n    }\n\n    public boolean isLoad() {\n        // 模拟图片加载，延迟 3s 加载完成\n        long endTime = System.currentTimeMillis();\n        return endTime - startTime > 3000;\n    }\n\n    @Override\n    public void showImage() {\n        System.out.println("Real Image: " + imageURL);\n    }\n}\n\n\n\npublic class ImageProxy implements Image {\n    private HighResolutionImage highResolutionImage;\n\n    public ImageProxy(HighResolutionImage highResolutionImage) {\n        this.highResolutionImage = highResolutionImage;\n    }\n\n    @Override\n    public void showImage() {\n        while (!highResolutionImage.isLoad()) {\n            try {\n                System.out.println("Temp Image: " + highResolutionImage.getWidth() + " " + highResolutionImage.getHeight());\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n        highResolutionImage.showImage();\n    }\n}\n\n\n\npublic class ImageViewer {\n    public static void main(String[] args) throws Exception {\n        String image = "http://image.jpg";\n        URL url = new URL(image);\n        HighResolutionImage highResolutionImage = new HighResolutionImage(url);\n        ImageProxy imageProxy = new ImageProxy(highResolutionImage);\n        imageProxy.showImage();\n    }\n}\n')])])]),t("h2",{attrs:{id:"jdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk"}},[e._v("#")]),e._v(" JDK")]),e._v(" "),t("ul",[t("li",[e._v("java.lang.reflect.Proxy")]),e._v(" "),t("li",[e._v("RMI")])]),e._v(" "),t("h1",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("ul",[t("li",[e._v("弗里曼. Head First 设计模式 [M]. 中国电力出版社, 2007.")]),e._v(" "),t("li",[e._v("Gamma E. 设计模式: 可复用面向对象软件的基础 [M]. 机械工业出版社, 2007.")]),e._v(" "),t("li",[e._v("Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.oodesign.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Design Patterns在新窗口打开"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://java-design-patterns.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Design patterns implemented in Java在新窗口打开"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.programering.com/a/MTNxAzMwATY.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("The breakdown of design patterns in JDK在新窗口打开"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);