(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{453:function(a,e,t){"use strict";t.r(e);var v=t(4),s=Object(v.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"java-8-javafx-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-8-javafx-2-0"}},[a._v("#")]),a._v(" Java 8 - JavaFx 2.0")]),a._v(" "),e("blockquote",[e("p",[a._v("JavaFX主要致力于富客户端开发，以弥补swing的缺陷，主要提供图形库与media库，支持audio,video,graphics,animation,3D等，同时采用现代化的css方式支持界面设计。同时又采用XUI方式以XML方式设计UI界面，达到显示与逻辑的分离。与android这方面确实有点相似性。")])]),a._v(" "),e("h2",{attrs:{id:"javafx历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javafx历史"}},[a._v("#")]),a._v(" JavaFX历史")]),a._v(" "),e("p",[a._v("跟java在服务器端和web端成绩相比，桌面一直是java的软肋，于是Sun公司在2008年推出JavaFX，弥补桌面软件的缺陷，请看下图JavaFX一路走过来的改进")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/java8-javafx-1.png",alt:"img"}})]),a._v(" "),e("p",[a._v("从上图看出，一开始推出时候，开发者需使用一种名为JavaFX Script的静态的、声明式的编程语言来开发JavaFX应用程序。因为JavaFX\nScript将会被编译为Java bytecode，程序员可以使用Java代码代替。")]),a._v(" "),e("p",[a._v("JavaFX 2.0之后的版本摒弃了JavaFX Script语言，而作为一个Java\nAPI来使用。因此使用JavaFX平台实现的应用程序将直接通过标准Java代码来实现。")]),a._v(" "),e("p",[a._v("JavaFX 2.0 包含非常丰富的 UI 控件、图形和多媒体特性用于简化可视化应用的开发，WebView可直接在应用中嵌入网页；另外 2.0 版本允许使用\nFXML 进行 UI 定义，这是一个脚本化基于 XML 的标识语言。")]),a._v(" "),e("p",[a._v("从JDK\n7u6开始，JavaFx就与JDK捆绑在一起了，JavaFX团队称，下一个版本将是8.0，目前所有的工作都已经围绕8.0库进行。这是因为JavaFX将捆绑在Java\n8中，因此该团队决定跳过几个版本号，迎头赶上Java 8。")]),a._v(" "),e("h2",{attrs:{id:"javafx8的新特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javafx8的新特性"}},[a._v("#")]),a._v(" JavaFx8的新特性")]),a._v(" "),e("h4",{attrs:{id:"全新现代主题-modena"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全新现代主题-modena"}},[a._v("#")]),a._v(" 全新现代主题: Modena")]),a._v(" "),e("p",[a._v("新的Modena主题来替换原来的Caspian主题。不过在Application的start()方法中，可以通过setUserAgentStylesheet(STYLESHEET_CASPIAN)来继续使用Caspian主题。")]),a._v(" "),e("p",[a._v("参考http://fxexperience.com/2013/03/modena-theme-update/")]),a._v(" "),e("h4",{attrs:{id:"javafx-3d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javafx-3d"}},[a._v("#")]),a._v(" JavaFX 3D")]),a._v(" "),e("p",[a._v("在JavaFX8中提供了3D图像处理API，包括Shape3D (Box, Cylinder, MeshView, Sphere子类),SubScene,\nMaterial, PickResult, LightBase (AmbientLight\n和PointLight子类),SceneAntialiasing等。Camera类也得到了更新。从JavaDoc中可以找到更多信息。")]),a._v(" "),e("h4",{attrs:{id:"富文本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#富文本"}},[a._v("#")]),a._v(" 富文本")]),a._v(" "),e("p",[a._v("强化了富文本的支持")]),a._v(" "),e("h4",{attrs:{id:"treetableview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treetableview"}},[a._v("#")]),a._v(" TreeTableView")]),a._v(" "),e("h4",{attrs:{id:"日期控件datepicker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期控件datepicker"}},[a._v("#")]),a._v(" 日期控件DatePicker")]),a._v(" "),e("p",[a._v("增加日期控件")]),a._v(" "),e("h4",{attrs:{id:"用于-css-结构的公共-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用于-css-结构的公共-api"}},[a._v("#")]),a._v(" 用于 CSS 结构的公共 API")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("CSS 样式设置是 JavaFX 的一项主要特性\nCSS 已专门在私有 API 中实现(com.sun.javafx.css 软件包)\n多种工具(例如 Scene Builder)需要 CSS 公共 API\n开发人员将能够定义自定义 CSS 样式\n")])])]),e("h4",{attrs:{id:"webview-增强功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webview-增强功能"}},[a._v("#")]),a._v(" WebView 增强功能")]),a._v(" "),e("ul",[e("li",[a._v("Nashorn JavaScript 引擎 https://blogs.oracle.com/nashorn/entry/open_for_business")]),a._v(" "),e("li",[a._v("WebSocket http://javafx-jira.kenai.com/browse/RT-14947")]),a._v(" "),e("li",[a._v("Web Workers http://javafx-jira.kenai.com/browse/RT-9782")])]),a._v(" "),e("h4",{attrs:{id:"javafx-scene-builder-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javafx-scene-builder-2-0"}},[a._v("#")]),a._v(" JavaFX Scene Builder 2.0")]),a._v(" "),e("p",[a._v("可视化工具，加速JavaFX图形界面的开发，下载地址")]),a._v(" "),e("p",[a._v("JavaFX Scene\nBuilder如同NetBeans一般，通过拖拽的方式配置界面，待完成界面之後，保存为FXML格式文件，此文件以XML描述物件配置，再交由JavaFX程式处理，因此可減少直接以JavaFX编写界面的困難度。")]),a._v(" "),e("p",[a._v("JavaFX Scene Builder 2.0新增JavaFX Theme预览功能，菜单「Preview」→「JavaFX\nTheme」选择不同的主題，包括:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("Modena (FX8).\nModena Touch (FX8).\nModena High Contrast – Black on White (FX8).\nModena High Contrast – White on Black (FX8).\nModena High Contrast – Yellow on Black (FX8).\nCaspian (FX2).\nCaspian Embedded (FX2).\nCaspian Embedded QVGA (FX2).\n")])])]),e("h2",{attrs:{id:"javafx-8开发2048游戏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javafx-8开发2048游戏"}},[a._v("#")]),a._v(" JavaFX 8开发2048游戏")]),a._v(" "),e("p",[a._v("2048虽然不像前段时间那么火了，但个人还是非常喜欢玩2048，空闲时间都忍不住来一发，感谢 Gabriele Cirulli 发明了这了不起\n(并且会上瘾)的2048游戏，因为是用MIT协议开源出来，各种语言版本的2048游戏横空出世，下图是用JavaFX 8来开发的一款2048。")]),a._v(" "),e("p",[a._v("所用到的技术")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("Lambda expressions\nStream API\nJavaFX 8\nJavaFX CSS basics\nJavaFX animationsfx2048相关类的说明\nGame2048,游戏主类\nGameManager,包含游戏界面布局(Board)以及Grid的操作(GridOperator)\nBoard,包含labels ，分数，grid ，Tile\nTile,游戏中的数字块\nGridOperator,Grid操作类\nLocation,Direction 位置帮助类\nRecordManager，SessionManager，纪录游戏分数，会话类\n")])])]),e("p",[a._v("这里是源码地址，大家感兴趣的可以去学习下git.oschina.net/benhail/javase8-sample/tree/master/src/main/java/javase8sample/chapter13/javafx8/fx2048")]),a._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("p",[a._v("比起AWT和SWING，JavaFX的优势很明显，各大主流IDE已经支持JavaFX的开发了，最佳的工具莫过于NetBeans，且随着lambda带来的好处，JavaFX的事件处理简洁了不少，以前需要写匿名函数类。另外JavaFX开源以来，JavaFX的生态环境也越来越活跃了，包括各种教程，嵌入式尝试，还有一些开源项目，比如:\nControlsFX，JRebirth，DataFX Flow，mvvmFX，TestFX\n等等。还有JavaFX是可以运行在Android和ios上面，这个很赞！")]),a._v(" "),e("p",[a._v("好了，总结到这里也差不多了，在RIA平台上面，有HTML5、Flex和微软的Sliverlight，JavaFX能否表现优秀，在于大家的各位，只要我们多用JavaFX，那么JavaFX也会越来越优秀，任何语言都是这样,\nTHE END .")]),a._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("ul",[e("li",[a._v("https://github.com/oimchat/oim-fx")]),a._v(" "),e("li",[a._v("https://github.com/goxr3plus/FX-BorderlessScene")]),a._v(" "),e("li",[a._v("https://github.com/topics/material-ui")]),a._v(" "),e("li",[a._v("https://github.com/in-sideFX/Undecorator")]),a._v(" "),e("li",[a._v("https://github.com/brunoborges/webfx")]),a._v(" "),e("li",[a._v("https://blog.csdn.net/loongshawn/article/details/52805751")]),a._v(" "),e("li",[a._v("https://docs.oracle.com/javafx/2/ui_controls/overview.htm#BABJACHC")]),a._v(" "),e("li",[a._v("https://www.oracle.com/technetwork/cn/articles/java/layoutfx-1536156-zhs.html")])])])}),[],!1,null,null,null);e.default=s.exports}}]);