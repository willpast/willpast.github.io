(window.webpackJsonp=window.webpackJsonp||[]).push([[414],{746:function(e,n,t){"use strict";t.r(n);var a=t(4),r=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"行为型-模板方法-template-method"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行为型-模板方法-template-method"}},[e._v("#")]),e._v(" 行为型 - 模板方法(Template Method)")]),e._v(" "),n("blockquote",[n("p",[e._v("模板方法模式(Template pattern): 在一个方法中定义一个算法的骨架, 而将一些步骤延迟到子类中.\n模板方法使得子类可以在不改变算法结构的情况下, 重新定义算法中的某些步骤。")])]),e._v(" "),n("h2",{attrs:{id:"意图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#意图"}},[e._v("#")]),e._v(" 意图")]),e._v(" "),n("p",[e._v("定义算法框架，并将一些步骤的实现延迟到子类。")]),e._v(" "),n("p",[e._v("通过模板方法，子类可以重新定义算法的某些步骤，而不用改变算法的结构。")]),e._v(" "),n("h2",{attrs:{id:"类图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[e._v("#")]),e._v(" 类图")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/c3c1c0e8-3a78-4426-961f-b46dd0879dd8.png",alt:"img"}})]),e._v(" "),n("h2",{attrs:{id:"实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[e._v("#")]),e._v(" 实现")]),e._v(" "),n("p",[e._v("冲咖啡和冲茶都有类似的流程，但是某些步骤会有点不一样，要求复用那些相同步骤的代码。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/11236498-1417-46ce-a1b0-e10054256955.png",alt:"img"}})]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('public abstract class CaffeineBeverage {\n\n    final void prepareRecipe() {\n        boilWater();\n        brew();\n        pourInCup();\n        addCondiments();\n    }\n\n    abstract void brew();\n\n    abstract void addCondiments();\n\n    void boilWater() {\n        System.out.println("boilWater");\n    }\n\n    void pourInCup() {\n        System.out.println("pourInCup");\n    }\n}\n\n\n\npublic class Coffee extends CaffeineBeverage {\n    @Override\n    void brew() {\n        System.out.println("Coffee.brew");\n    }\n\n    @Override\n    void addCondiments() {\n        System.out.println("Coffee.addCondiments");\n    }\n}\n\n\n\npublic class Tea extends CaffeineBeverage {\n    @Override\n    void brew() {\n        System.out.println("Tea.brew");\n    }\n\n    @Override\n    void addCondiments() {\n        System.out.println("Tea.addCondiments");\n    }\n}\n\n\n\npublic class Client {\n    public static void main(String[] args) {\n        CaffeineBeverage caffeineBeverage = new Coffee();\n        caffeineBeverage.prepareRecipe();\n        System.out.println("-----------");\n        caffeineBeverage = new Tea();\n        caffeineBeverage.prepareRecipe();\n    }\n}\n\n\n\nboilWater\nCoffee.brew\npourInCup\nCoffee.addCondiments\n-----------\nboilWater\nTea.brew\npourInCup\nTea.addCondiments\n')])])]),n("h2",{attrs:{id:"jdk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jdk"}},[e._v("#")]),e._v(" JDK")]),e._v(" "),n("ul",[n("li",[e._v("java.util.Collections#sort()")]),e._v(" "),n("li",[e._v("java.io.InputStream#skip()")]),e._v(" "),n("li",[e._v("java.io.InputStream#read()")]),e._v(" "),n("li",[e._v("java.util.AbstractList#indexOf()")])])])}),[],!1,null,null,null);n.default=r.exports}}]);