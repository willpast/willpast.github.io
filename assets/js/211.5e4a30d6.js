(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{542:function(n,E,e){"use strict";e.r(E);var S=e(4),_=Object(S.a)({},(function(){var n=this,E=n._self._c;return E("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[E("h1",{attrs:{id:"sql语言-sql语句练习"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#sql语言-sql语句练习"}},[n._v("#")]),n._v(" SQL语言 - SQL语句练习")]),n._v(" "),E("blockquote",[E("p",[n._v("在上文学习了SQL的基本语法以后，本文将通过最经典的“教师-学生-成绩”表来帮助你练习SQL。")])]),n._v(" "),E("h2",{attrs:{id:"构建如下表结构"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#构建如下表结构"}},[n._v("#")]),n._v(" 构建如下表结构")]),n._v(" "),E("blockquote",[E("p",[n._v("还有一个Grade表，在如下的练习中体现")])]),n._v(" "),E("p",[E("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/db-sql-learn-1.png",alt:"img"}})]),n._v(" "),E("h2",{attrs:{id:"插入数据"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[n._v("#")]),n._v(" 插入数据")]),n._v(" "),E("blockquote",[E("p",[n._v("下面表SQL和相关测试数据是我Dump出来的")])]),n._v(" "),E("div",{staticClass:"language- extra-class"},[E("pre",[E("code",[n._v("-- MySQL dump 10.13  Distrib 5.7.17, for macos10.12 (x86_64)\n--\n-- Host: localhost    Database: learn_sql_pdai_tech\n-- ------------------------------------------------------\n-- Server version   5.7.28\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8 */;\n/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;\n/*!40103 SET TIME_ZONE='+00:00' */;\n/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n\n--\n-- Table structure for table `COURSE`\n--\n\nDROP TABLE IF EXISTS `COURSE`;\n/*!40101 SET @saved_cs_client     = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `COURSE` (\n  `CNO` varchar(5) NOT NULL,\n  `CNAME` varchar(10) NOT NULL,\n  `TNO` varchar(10) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `COURSE`\n--\n\nLOCK TABLES `COURSE` WRITE;\n/*!40000 ALTER TABLE `COURSE` DISABLE KEYS */;\nINSERT INTO `COURSE` VALUES ('3-105','计算机导论','825'),('3-245','操作系统','804'),('6-166','数据电路','856'),('9-888','高等数学','100');\n/*!40000 ALTER TABLE `COURSE` ENABLE KEYS */;\nUNLOCK TABLES;\n\n--\n-- Table structure for table `SCORE`\n--\n\nDROP TABLE IF EXISTS `SCORE`;\n/*!40101 SET @saved_cs_client     = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `SCORE` (\n  `SNO` varchar(3) NOT NULL,\n  `CNO` varchar(5) NOT NULL,\n  `DEGREE` decimal(10,1) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `SCORE`\n--\n\nLOCK TABLES `SCORE` WRITE;\n/*!40000 ALTER TABLE `SCORE` DISABLE KEYS */;\nINSERT INTO `SCORE` VALUES ('103','3-245',86.0),('105','3-245',75.0),('109','3-245',68.0),('103','3-105',92.0),('105','3-105',88.0),('109','3-105',76.0),('101','3-105',64.0),('107','3-105',91.0),('101','6-166',85.0),('107','6-106',79.0),('108','3-105',78.0),('108','6-166',81.0);\n/*!40000 ALTER TABLE `SCORE` ENABLE KEYS */;\nUNLOCK TABLES;\n\n--\n-- Table structure for table `STUDENT`\n--\n\nDROP TABLE IF EXISTS `STUDENT`;\n/*!40101 SET @saved_cs_client     = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `STUDENT` (\n  `SNO` varchar(3) NOT NULL,\n  `SNAME` varchar(4) NOT NULL,\n  `SSEX` varchar(2) NOT NULL,\n  `SBIRTHDAY` datetime DEFAULT NULL,\n  `CLASS` varchar(5) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `STUDENT`\n--\n\nLOCK TABLES `STUDENT` WRITE;\n/*!40000 ALTER TABLE `STUDENT` DISABLE KEYS */;\nINSERT INTO `STUDENT` VALUES ('108','曾华','男','1977-09-01 00:00:00','95033'),('105','匡明','男','1975-10-02 00:00:00','95031'),('107','王丽','女','1976-01-23 00:00:00','95033'),('101','李军','男','1976-02-20 00:00:00','95033'),('109','王芳','女','1975-02-10 00:00:00','95031'),('103','陆君','男','1974-06-03 00:00:00','95031');\n/*!40000 ALTER TABLE `STUDENT` ENABLE KEYS */;\nUNLOCK TABLES;\n\n--\n-- Table structure for table `TEACHER`\n--\n\nDROP TABLE IF EXISTS `TEACHER`;\n/*!40101 SET @saved_cs_client     = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `TEACHER` (\n  `TNO` varchar(3) NOT NULL,\n  `TNAME` varchar(4) NOT NULL,\n  `TSEX` varchar(2) NOT NULL,\n  `TBIRTHDAY` datetime NOT NULL,\n  `PROF` varchar(6) DEFAULT NULL,\n  `DEPART` varchar(10) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `TEACHER`\n--\n\nLOCK TABLES `TEACHER` WRITE;\n/*!40000 ALTER TABLE `TEACHER` DISABLE KEYS */;\nINSERT INTO `TEACHER` VALUES ('804','李诚','男','1958-12-02 00:00:00','副教授','计算机系'),('856','张旭','男','1969-03-12 00:00:00','讲师','电子工程系'),('825','王萍','女','1972-05-05 00:00:00','助教','计算机系'),('831','刘冰','女','1977-08-14 00:00:00','助教','电子工程系');\n/*!40000 ALTER TABLE `TEACHER` ENABLE KEYS */;\nUNLOCK TABLES;\n/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;\n\n/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;\n\n-- Dump completed on 2020-02-06 18:18:25\n")])])]),E("h2",{attrs:{id:"相关练习"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#相关练习"}},[n._v("#")]),n._v(" 相关练习")]),n._v(" "),E("ul",[E("li",[E("p",[n._v("1、 查询Student表中的所有记录的Sname、Ssex和Class列。")]),n._v(" "),E("p",[n._v("select SNAME, SSEX, CLASS from STUDENT;")])]),n._v(" "),E("li",[E("p",[n._v("2、 查询教师所有的单位即不重复的Depart列。")]),n._v(" "),E("p",[n._v("select distinct DEPART from TEACHER;")])]),n._v(" "),E("li",[E("p",[n._v("3、 查询Student表的所有记录。")]),n._v(" "),E("p",[n._v("select * from STUDENT;")])]),n._v(" "),E("li",[E("p",[n._v("4、 查询Score表中成绩在60到80之间的所有记录。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere DEGREE > 60 and DEGREE < 80;")])]),n._v(" "),E("li",[E("p",[n._v("5、 查询Score表中成绩为85，86或88的记录。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere DEGREE = 85 or DEGREE = 86 or DEGREE = 88;")])]),n._v(" "),E("li",[E("p",[n._v("6、 查询Student表中“95031”班或性别为“女”的同学记录。")]),n._v(" "),E("p",[n._v("select *\nfrom STUDENT\nwhere CLASS = '95031' or SSEX = '女';")])]),n._v(" "),E("li",[E("p",[n._v("7、 以Class降序查询Student表的所有记录。")]),n._v(" "),E("p",[n._v("select *\nfrom STUDENT\norder by CLASS desc;")])]),n._v(" "),E("li",[E("p",[n._v("8、 以Cno升序、Degree降序查询Score表的所有记录。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\norder by CNO asc, DEGREE desc;")])]),n._v(" "),E("li",[E("p",[n._v("9、 查询“95031”班的学生人数。")]),n._v(" "),E("p",[n._v("select count(*)\nfrom STUDENT\nwhere CLASS = '95031';")])]),n._v(" "),E("li",[E("p",[n._v("10、查询Score表中的最高分的学生学号和课程号。")]),n._v(" "),E("p",[n._v("select\nsno,\nCNO\nfrom SCORE\nwhere DEGREE = (\nselect max(DEGREE)\nfrom SCORE\n);")])]),n._v(" "),E("li",[E("p",[n._v("11、查询‘3-105’号课程的平均分。")]),n._v(" "),E("p",[n._v("select avg(DEGREE)\nfrom SCORE\nwhere CNO = '3-105';")])]),n._v(" "),E("li",[E("p",[n._v("12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。")]),n._v(" "),E("p",[n._v("select\navg(DEGREE),\nCNO\nfrom SCORE\nwhere cno like '3%'\ngroup by CNO\nhaving count(*) > 5;")])]),n._v(" "),E("li",[E("p",[n._v("13、查询最低分大于70，最高分小于90的Sno列。")]),n._v(" "),E("p",[n._v("select SNO\nfrom SCORE\ngroup by SNO\nhaving min(DEGREE) > 70 and max(DEGREE) < 90;")])]),n._v(" "),E("li",[E("p",[n._v("14、查询所有学生的Sname、Cno和Degree列。")]),n._v(" "),E("p",[n._v("select\nSNAME,\nCNO,\nDEGREE\nfrom STUDENT, SCORE\nwhere STUDENT.SNO = SCORE.SNO;")])]),n._v(" "),E("li",[E("p",[n._v("15、查询所有学生的Sno、Cno和Degree列。")]),n._v(" "),E("p",[n._v("select\nSCORE.SNO,\nCNO,\nDEGREE\nfrom STUDENT, SCORE\nwhere STUDENT.SNO = SCORE.SNO;")])]),n._v(" "),E("li",[E("p",[n._v("16、查询所有学生的Sname、Cname和Degree列。")]),n._v(" "),E("p",[n._v("SELECT\nA.SNAME,\nB.CNAME,\nC.DEGREE\nFROM STUDENT A\nJOIN (COURSE B, SCORE C)\nON A.SNO = C.SNO AND B.CNO = C.CNO;")])]),n._v(" "),E("li",[E("p",[n._v("17、查询“95033”班所选课程的平均分。")]),n._v(" "),E("p",[n._v("select avg(DEGREE)\nfrom SCORE\nwhere sno in (select SNO\nfrom STUDENT\nwhere CLASS = '95033');")])]),n._v(" "),E("li",[E("p",[n._v("18、假设使用如下命令建立了一个grade表:")]),n._v(" "),E("p",[n._v("create table grade (\nlow  numeric(3, 0),\nupp  numeric(3),\nrank char(1)\n);\ninsert into grade values (90, 100, 'A');\ninsert into grade values (80, 89, 'B');\ninsert into grade values (70, 79, 'C');\ninsert into grade values (60, 69, 'D');\ninsert into grade values (0, 59, 'E');")])]),n._v(" "),E("li",[E("p",[n._v("现查询所有同学的Sno、Cno和rank列。")]),n._v(" "),E("p",[n._v("SELECT\nA.SNO,\nA.CNO,\nB.RANK\nFROM SCORE A, grade B\nWHERE A.DEGREE BETWEEN B.LOW AND B.UPP\nORDER BY RANK;")])]),n._v(" "),E("li",[E("p",[n._v("19、查询选修“3-105”课程的成绩高于“109”号同学成绩的所有同学的记录。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere CNO = '3-105' and DEGREE > ALL (\nselect DEGREE\nfrom SCORE\nwhere SNO = '109'\n);")])]),n._v(" "),E("li",[E("p",[n._v("20、查询score中选学一门以上课程的同学中分数为非最高分成绩的学生记录")]),n._v(" "),E("p",[n._v("select * from STUDENT where SNO\nin (select SNO\nfrom SCORE\nwhere DEGREE < (select MAX(DEGREE) from SCORE)\ngroup by SNO\nhaving count(*) > 1);")])]),n._v(" "),E("li",[E("p",[n._v("21、查询成绩高于学号为“109”、课程号为“3-105”的成绩的所有记录。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere CNO = '3-105' and DEGREE > ALL (\nselect DEGREE\nfrom SCORE\nwhere SNO = '109'\n);")])]),n._v(" "),E("li",[E("p",[n._v("22、查询和学号为108的同学同年出生的所有学生的Sno、Sname和Sbirthday列。")]),n._v(" "),E("p",[n._v("select\nSNO,\nSNAME,\nSBIRTHDAY\nfrom STUDENT\nwhere year(SBIRTHDAY) = (\nselect year(SBIRTHDAY)\nfrom STUDENT\nwhere SNO = '108'\n);")])]),n._v(" "),E("li",[E("p",[n._v("23、查询“张旭“教师任课的学生成绩。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere cno = (\nselect CNO\nfrom COURSE\ninner join TEACHER on COURSE.TNO = TEACHER.TNO and TNAME = '张旭'\n);")])]),n._v(" "),E("li",[E("p",[n._v("24、查询选修某课程的同学人数多于5人的教师姓名。")]),n._v(" "),E("p",[n._v("select TNAME\nfrom TEACHER\nwhere TNO = (\nselect TNO\nfrom COURSE\nwhere CNO = (select CNO\nfrom SCORE\ngroup by CNO\nhaving count(SNO) > 5)\n);")])]),n._v(" "),E("li",[E("p",[n._v("25、查询95033班和95031班全体学生的记录。")]),n._v(" "),E("p",[n._v("select *\nfrom STUDENT\nwhere CLASS in ('95033', '95031');")])]),n._v(" "),E("li",[E("p",[n._v("26、查询存在有85分以上成绩的课程Cno.")]),n._v(" "),E("p",[n._v("select cno\nfrom SCORE\ngroup by CNO\nhaving MAX(DEGREE) > 85;")])]),n._v(" "),E("li",[E("p",[n._v("27、查询出“计算机系“教师所教课程的成绩表。")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE\nwhere CNO in (select CNO\nfrom TEACHER, COURSE\nwhere DEPART = '计算机系' and COURSE.TNO = TEACHER.TNO);")])]),n._v(" "),E("li",[E("p",[n._v("28、查询“计算机系”与“电子工程系“不同职称的教师的Tname和Prof")]),n._v(" "),E("p",[n._v("select\ntname,\nprof\nfrom TEACHER\nwhere depart = '计算机系' and prof not in (\nselect prof\nfrom TEACHER\nwhere depart = '电子工程系'\n);")])]),n._v(" "),E("li",[E("p",[n._v("29、查询选修编号为“3-105“课程且成绩至少高于选修编号为“3-245”的同学的Cno、Sno和Degree,并按Degree从高到低次序排序。")]),n._v(" "),E("p",[n._v("select\nCNO,\nSNO,\nDEGREE\nfrom SCORE\nwhere CNO = '3-105' and DEGREE > any (\nselect DEGREE\nfrom SCORE\nwhere CNO = '3-245'\n)\norder by DEGREE desc;")])]),n._v(" "),E("li",[E("p",[n._v("30、查询选修编号为“3-105”且成绩高于选修编号为“3-245”课程的同学的Cno、Sno和Degree.")]),n._v(" "),E("p",[n._v("SELECT *\nFROM SCORE\nWHERE CNO = '3-105' AND DEGREE > ALL (\nSELECT DEGREE\nFROM SCORE\nWHERE CNO = '3-245'\n)\nORDER by DEGREE desc;")])]),n._v(" "),E("li",[E("p",[n._v("31、查询所有教师和同学的name、sex和birthday.")]),n._v(" "),E("p",[n._v("select\nTNAME     name,\nTSEX      sex,\nTBIRTHDAY birthday\nfrom TEACHER\nunion\nselect\nsname     name,\nSSEX      sex,\nSBIRTHDAY birthday\nfrom STUDENT;")])]),n._v(" "),E("li",[E("p",[n._v("32、查询所有“女”教师和“女”同学的name、sex和birthday.")]),n._v(" "),E("p",[n._v("select\nTNAME     name,\nTSEX      sex,\nTBIRTHDAY birthday\nfrom TEACHER\nwhere TSEX = '女'\nunion\nselect\nsname     name,\nSSEX      sex,\nSBIRTHDAY birthday\nfrom STUDENT\nwhere SSEX = '女';")])]),n._v(" "),E("li",[E("p",[n._v("33、查询成绩比该课程平均成绩低的同学的成绩表。")]),n._v(" "),E("p",[n._v("SELECT A.*\nFROM SCORE A\nWHERE DEGREE < (SELECT AVG(DEGREE)\nFROM SCORE B\nWHERE A.CNO = B.CNO);")])]),n._v(" "),E("li",[E("p",[n._v("34、查询所有任课教师的Tname和Depart.")]),n._v(" "),E("p",[n._v("select\nTNAME,\nDEPART\nfrom TEACHER a\nwhere exists(select *\nfrom COURSE b\nwhere a.TNO = b.TNO);")])]),n._v(" "),E("li",[E("p",[n._v("35、查询所有未讲课的教师的Tname和Depart.")]),n._v(" "),E("p",[n._v("select\nTNAME,\nDEPART\nfrom TEACHER a\nwhere tno not in (select tno\nfrom COURSE);")])]),n._v(" "),E("li",[E("p",[n._v("36、查询至少有2名男生的班号。")]),n._v(" "),E("p",[n._v("select CLASS\nfrom STUDENT\nwhere SSEX = '男'\ngroup by CLASS\nhaving count(SSEX) > 1;")])]),n._v(" "),E("li",[E("p",[n._v("37、查询Student表中不姓“王”的同学记录。")]),n._v(" "),E("p",[n._v('select *\nfrom STUDENT\nwhere SNAME not like "王%";')])]),n._v(" "),E("li",[E("p",[n._v("38、查询Student表中每个学生的姓名和年龄。")]),n._v(" "),E("p",[n._v("select\nSNAME,\nyear(now()) - year(SBIRTHDAY)\nfrom STUDENT;")])]),n._v(" "),E("li",[E("p",[n._v("39、查询Student表中最大和最小的Sbirthday日期值。")]),n._v(" "),E("p",[n._v("select min(SBIRTHDAY) birthday\nfrom STUDENT\nunion\nselect max(SBIRTHDAY) birthday\nfrom STUDENT;")])]),n._v(" "),E("li",[E("p",[n._v("40、以班号和年龄从大到小的顺序查询Student表中的全部记录。")]),n._v(" "),E("p",[n._v("select *\nfrom STUDENT\norder by CLASS desc, year(now()) - year(SBIRTHDAY) desc;")])]),n._v(" "),E("li",[E("p",[n._v("41、查询“男”教师及其所上的课程。")]),n._v(" "),E("p",[n._v("select *\nfrom TEACHER, COURSE\nwhere TSEX = '男' and COURSE.TNO = TEACHER.TNO;")])]),n._v(" "),E("li",[E("p",[n._v("42、查询最高分同学的Sno、Cno和Degree列。")]),n._v(" "),E("p",[n._v("select\nsno,\nCNO,\nDEGREE\nfrom SCORE\nwhere DEGREE = (select max(DEGREE)\nfrom SCORE);")])]),n._v(" "),E("li",[E("p",[n._v("43、查询和“李军”同性别的所有同学的Sname.")]),n._v(" "),E("p",[n._v("select sname\nfrom STUDENT\nwhere SSEX = (select SSEX\nfrom STUDENT\nwhere SNAME = '李军');")])]),n._v(" "),E("li",[E("p",[n._v("44、查询和“李军”同性别并同班的同学Sname.")]),n._v(" "),E("p",[n._v("select sname\nfrom STUDENT\nwhere (SSEX, CLASS) = (select\nSSEX,\nCLASS\nfrom STUDENT\nwhere SNAME = '李军');")])]),n._v(" "),E("li",[E("p",[n._v("45、查询所有选修“计算机导论”课程的“男”同学的成绩表")]),n._v(" "),E("p",[n._v("select *\nfrom SCORE, STUDENT\nwhere SCORE.SNO = STUDENT.SNO and SSEX = '男' and CNO = (\nselect CNO\nfrom COURSE\nwhere CNAME = '计算机导论');")])]),n._v(" "),E("li",[E("p",[n._v("46、使用游标方式来同时查询每位同学的名字，他所选课程及成绩。")]),n._v(" "),E("p",[n._v("declare\ncursor student_cursor is\nselect S.SNO,S.SNAME,C.CNAME,SC.DEGREE as DEGREE\nfrom STUDENT S, COURSE C, SCORE SC\nwhere S.SNO=SC.SNO\nand SC.CNO=C.CNO;")]),n._v(" "),E("p",[n._v("student_row student_cursor%ROWTYPE;")]),n._v(" "),E("p",[n._v("begin\nopen student_cursor;\nloop\nfetch student_cursor INTO student_row;\nexit when student_cursor%NOTFOUND;\ndbms_output.put_line( student_row.SNO || '' ||")]),n._v(" "),E("p",[n._v("student_row.SNAME|| '' || student_row.CNAME || '' ||")]),n._v(" "),E("p",[n._v("student_row.DEGREE);\nend loop;\nclose student_cursor;\nEND;\n/")])]),n._v(" "),E("li",[E("p",[n._v("47、 声明触发器指令，每当有同学转换班级时执行触发器显示当前和之前所在班级。")]),n._v(" "),E("p",[n._v("CREATE OR REPLACE TRIGGER display_class_changes\nAFTER DELETE OR INSERT OR UPDATE ON student\nFOR EACH ROW\nWHEN (NEW.sno > 0)")]),n._v(" "),E("p",[n._v("BEGIN")]),n._v(" "),E("p",[n._v("dbms_output.put_line('Old class: ' || :OLD.class);\ndbms_output.put_line('New class: ' || :NEW.class);\nEND;\n/")]),n._v(" "),E("p",[n._v("Update student\nset class=95031\nwhere sno=109;")])]),n._v(" "),E("li",[E("p",[n._v("48、 删除已设置的触发器指令")]),n._v(" "),E("p",[n._v("DROP TRIGGER display_class_changes;")])])])])}),[],!1,null,null,null);E.default=_.exports}}]);