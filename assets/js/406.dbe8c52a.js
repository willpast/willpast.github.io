(window.webpackJsonp=window.webpackJsonp||[]).push([[406],{738:function(a,t,e){"use strict";e.r(t);var r=e(4),n=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"结构型-适配器-adapter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构型-适配器-adapter"}},[a._v("#")]),a._v(" 结构型 - 适配器(Adapter)")]),a._v(" "),t("blockquote",[t("p",[a._v("适配器模式(Adapter pattern): 将一个类的接口, 转换成客户期望的另一个接口。 适配器让原本接口不兼容的类可以合作无间。\n对象适配器使用组合, 类适配器使用多重继承。")])]),a._v(" "),t("h2",{attrs:{id:"意图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#意图"}},[a._v("#")]),a._v(" 意图")]),a._v(" "),t("p",[a._v("把一个类接口转换成另一个用户需要的接口。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/3d5b828e-5c4d-48d8-a440-281e4a8e1c92.png",alt:"img"}})]),a._v(" "),t("h2",{attrs:{id:"类图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[a._v("#")]),a._v(" 类图")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/0f754c1d-b5cb-48cd-90e0-4a86034290a1.png",alt:"img"}})]),a._v(" "),t("h2",{attrs:{id:"实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[a._v("#")]),a._v(" 实现")]),a._v(" "),t("p",[a._v("鸭子(Duck)和火鸡(Turkey)拥有不同的叫声，Duck 的叫声调用 quack() 方法，而 Turkey 调用 gobble() 方法。")]),a._v(" "),t("p",[a._v("要求将 Turkey 的 gobble() 方法适配成 Duck 的 quack() 方法，从而让火鸡冒充鸭子！")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('public interface Duck {\n    void quack();\n}\n\n\n\npublic interface Turkey {\n    void gobble();\n}\n\n\n\npublic class WildTurkey implements Turkey {\n    @Override\n    public void gobble() {\n        System.out.println("gobble!");\n    }\n}\n\n\n\npublic class TurkeyAdapter implements Duck {\n    Turkey turkey;\n\n    public TurkeyAdapter(Turkey turkey) {\n        this.turkey = turkey;\n    }\n\n    @Override\n    public void quack() {\n        turkey.gobble();\n    }\n}\n\n\n\npublic class Client {\n    public static void main(String[] args) {\n        Turkey turkey = new WildTurkey();\n        Duck duck = new TurkeyAdapter(turkey);\n        duck.quack();\n    }\n}\n')])])]),t("h2",{attrs:{id:"jdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk"}},[a._v("#")]),a._v(" JDK")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#asList%28T...%29",target:"_blank",rel:"noopener noreferrer"}},[a._v("java.util.Arrays#asList()在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#list-java.util.Enumeration-",target:"_blank",rel:"noopener noreferrer"}},[a._v("java.util.Collections#list()在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#enumeration-java.util.Collection-",target:"_blank",rel:"noopener noreferrer"}},[a._v("java.util.Collections#enumeration()在新窗口打开"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://docs.oracle.com/javase/8/docs/api/javax/xml/bind/annotation/adapters/XmlAdapter.html#marshal-BoundType-",target:"_blank",rel:"noopener noreferrer"}},[a._v("javax.xml.bind.annotation.adapters.XMLAdapter在新窗口打开"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);