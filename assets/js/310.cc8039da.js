(window.webpackJsonp=window.webpackJsonp||[]).push([[310],{640:function(t,e,a){"use strict";a.r(e);var s=a(4),v=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"代码质量-统一风格-统一代码格式化详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码质量-统一风格-统一代码格式化详解"}},[t._v("#")]),t._v(" 代码质量 - 统一风格：统一代码格式化详解")]),t._v(" "),e("blockquote",[e("p",[t._v("项目的代码通常是一个团队共同完成的，要保障代码质量的首要前提就是统一代码的风格，本文将介绍常用的统一风格的措施之"),e("strong",[t._v("统一代码格式化")]),t._v(" 。")])]),t._v(" "),e("h2",{attrs:{id:"统一代码格式化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统一代码格式化"}},[t._v("#")]),t._v(" 统一代码格式化")]),t._v(" "),e("blockquote",[e("p",[t._v("统一风格的第一条，就是要统一代码的格式化，因为不同人提交的代码格式化不一样将导致merge代码造成大几率的冲突；而统一的代码风格无论是对于项目可维护性，还是降低merge冲突都是极为重要的。")])]),t._v(" "),e("p",[t._v("通常是两种方式：一种方式是，强制使用同样的IDE工具；另外一个更为常见的是，使用同一种代码格式规范。")]),t._v(" "),e("h3",{attrs:{id:"eclipse-code-formatter插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eclipse-code-formatter插件"}},[t._v("#")]),t._v(" Eclipse code formatter插件")]),t._v(" "),e("p",[t._v("最为常用的工具是 "),e("strong",[t._v("Eclipse code formatter插件")]),t._v(" , 用来统一eclipse和IDEA等IDE的代码规范")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("安装Eclipse Code Formatter插件")]),t._v(" ：")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-1.png",alt:"img"}})]),t._v(" "),e("p",[t._v("(安装完之后需要重启idea)")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("启用Eclipse Code Formatter")])])]),t._v(" "),e("p",[t._v("File->Settings->Other Tools->Eclipse Code Formatter->Use the Eclipse Code\nFormatter")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-2.png",alt:"img"}})]),t._v(" "),e("p",[t._v("（相关的formtter.xml配置文件可以到网上下载下或者用eclipse导出下）")]),t._v(" "),e("h3",{attrs:{id:"其它idea统一样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它idea统一样式"}},[t._v("#")]),t._v(" 其它IDEA统一样式")]),t._v(" "),e("blockquote",[e("p",[t._v("在Eclipse Code\nFormatter配置后，还是会有其它一些差异的，这时候还需要通过IDEA约定一些设置和一些公共样式的scheme（这里也会同时考虑checkstyle等样式检查工具对代码的要求）")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("配置自动导入包")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-3.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("配置code style")])])]),t._v(" "),e("p",[t._v("通常而言，注意下这里几步（当然你可以设置更多，特意截图这几步，主要考虑checkstyle的要求及imports化在不同IDE下的差异），然后保存我一个scheme放到项目根目录下，供所有队员统一使用")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-4.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"统一的注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统一的注释"}},[t._v("#")]),t._v(" 统一的注释")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("类文件头的注释")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-5.png",alt:"img"}})]),t._v(" "),e("p",[t._v("测试下, 创建一个类TestClass，将自动生成文件头注释")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("/**\n * This class is for xxxx.\n *\n * @author pdai\n * @version 2021/1/20\n */\npublic class TestClass {\n}\n")])])]),e("p",[t._v("当然，如果你发现对已经存在的类进行类注释'/**'时无法自动加入上述注释时，还可以使用Live Template")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-6.png",alt:"img"}})]),t._v(" "),e("p",[t._v("配置好以后，方法头 输入"),e("code",[t._v("A")]),t._v("，然后按TAB键")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-7.png",alt:"img"}})]),t._v(" "),e("p",[t._v("再按Enter")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-8.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("方法的注释")])])]),t._v(" "),e("p",[t._v("如果有必要的话，还可以设置下方法的注释（其实我觉得默认就够了）")]),t._v(" "),e("p",[t._v("（参考上述Live Template方式）")])])}),[],!1,null,null,null);e.default=v.exports}}]);