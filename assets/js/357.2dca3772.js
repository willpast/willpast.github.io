(window.webpackJsonp=window.webpackJsonp||[]).push([[357],{690:function(s,t,a){"use strict";a.r(t);var e=a(4),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"♥分布式系统-知识体系详解♥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#♥分布式系统-知识体系详解♥"}},[s._v("#")]),s._v(" ♥分布式系统 - 知识体系详解♥")]),s._v(" "),t("blockquote",[t("p",[s._v("TBD")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"/pages/arch-d-theory"}},[s._v("分布式系统 - 理论基础,理论及一致性算法")]),s._v(" "),t("ul",[t("li",[s._v("一个分布式系统是一些独立的计算机集合，但是对这个系统的用户来说，系统就像一台计算机一样。本文主要介绍分布式的基础知识，以及分布式的理论基础和一致性算法。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-lock"}},[s._v("分布式系统 - 全局唯一ID实现方案")]),s._v(" "),t("ul",[t("li",[s._v("本文主要介绍常见的分布式ID生成方式，大致分类的话可以分为两类：一种是类DB型的，根据设置不同起始值和步长来实现趋势递增，需要考虑服务的容错性和可用性; 另一种是类snowflake型，这种就是将64位划分为不同的段，每段代表不同的涵义，基本就是时间戳、机器ID和序列数。这种方案就是需要考虑时钟回拨的问题以及做一些 buffer的缓冲设计提高性能。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-lock"}},[s._v("分布式系统 - 分布式锁及实现方案")]),s._v(" "),t("ul",[t("li",[s._v("本文主要介绍分布式锁的概念和分布式锁的设计原则，以及常见的分布式锁的实现方式。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-transection"}},[s._v("分布式系统 - 分布式事务及实现方案")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("事务")]),s._v(" 是一个程序执行单元，里面的所有操作要么全部执行成功，要么全部执行失败。而"),t("strong",[s._v("分布式事务")]),s._v(" 是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-job"}},[s._v("分布式系统 - 分布式任务及实现方案")]),s._v(" "),t("ul",[t("li",[s._v("本文主要介绍定时任务的基础和单体方式下定时任务方案的演化，以及常见的分布式任务方案(包括Quartz Cluster，ElasticJob，xxl-job等）和技术实现要点。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-session"}},[s._v("分布式系统 - 分布式会话及实现方案")]),s._v(" "),t("ul",[t("li",[s._v("无状态的token或者有状态的Session集中管理是目前最为常用的方案，本节主要讨论的有状态的分布式Session会话, 包括Session Stick, Session Replication, Session 数据集中存储, Cookie Based 以及Token方式等。")])])]),s._v(" "),t("li",[t("a",{attrs:{href:"/pages/arch-d-wrong"}},[s._v("分布式系统 - 分布式系统的8个谬误")]),s._v(" "),t("ul",[t("li",[s._v("20多年前，Peter Deutsch和James Gosling定义了分布式计算的8个谬误。这些是许多开发人员对分布式系统做出的错误假设。从长远来看，这些通常被证明是错误的，导致难以修复错误。这篇文章从反面警示我们分布式系统需要注意的事项。")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);