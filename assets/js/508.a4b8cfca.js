(window.webpackJsonp=window.webpackJsonp||[]).push([[508],{840:function(s,a,t){"use strict";t.r(a);var e=t(4),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"工具详解-git-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具详解-git-详解"}},[s._v("#")]),s._v(" 工具详解 - Git 详解")]),s._v(" "),a("blockquote",[a("p",[s._v("Git是分布式代码托管的标杆，这里将提供如何学习Git，以及Git工作流的总结，和常用的操作命令。")])]),s._v(" "),a("h2",{attrs:{id:"必读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#必读"}},[s._v("#")]),s._v(" 必读")]),s._v(" "),a("blockquote",[a("p",[s._v("如果要问一本就可以学习Git的书或者文章，毫无疑问我会推荐Git Pro2，绝对是良心之作啊")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("Git Pro 2")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/progit/progit2",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git Pro2英文Github仓库在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://bingohuang.gitbooks.io/progit2/content/01-introduction/sections/about-version-control.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git Pro2中文Gitbook在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bingohuang/progit2-gitbook",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git Pro2对应的中文Markdown版本的仓库地址在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://git.oschina.net/progit/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git Pro中文阅读在新窗口打开"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("其它资料")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://imtuzi.com/post/most-used-git-cmd.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("99%的时间在使用的Git命令在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/cbd8cf5e232d",target:"_blank",rel:"noopener noreferrer"}},[s._v("GIT分支开发模型规范在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git - 简明指南在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://marklodato.github.io/visual-git-guide/index-zh-cn.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("图解 Git在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"}},[s._v("廖雪峰 : Git 教程在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Learn Git Branching在新窗口打开"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("在线学习")])]),s._v(" "),a("ul",[a("li",[s._v("有个很好的在线学习网站，推荐给大家： "),a("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://learngitbranching.js.org/"),a("OutboundLink")],1),a("a",{attrs:{href:"https://learngitbranching.js.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("在新窗口打开"),a("OutboundLink")],1),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/tool-git-learn-1.png",alt:"img"}})])])])]),s._v(" "),a("h2",{attrs:{id:"常用小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用小结"}},[s._v("#")]),s._v(" 常用小结")]),s._v(" "),a("blockquote",[a("p",[s._v("读完Git Pro2, 大部分功能适合在使用的时候作为工具来参考，最需要理解的是常用的命令对应的workflow，以及分支管理和合并操作。")])]),s._v(" "),a("h3",{attrs:{id:"git操作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git操作流程"}},[s._v("#")]),s._v(" Git操作流程")]),s._v(" "),a("h4",{attrs:{id:"代码提交和同步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码提交和同步代码"}},[s._v("#")]),s._v(" 代码提交和同步代码")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/git-four-areas.png",alt:"img"}})]),s._v(" "),a("h4",{attrs:{id:"代码撤销和撤销同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码撤销和撤销同步"}},[s._v("#")]),s._v(" 代码撤销和撤销同步")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/git-five-states.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"git常用操作命令-代码提交和同步代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-代码提交和同步代码"}},[s._v("#")]),s._v(" Git常用操作命令 - 代码提交和同步代码")]),s._v(" "),a("ul",[a("li",[s._v("第零步: 工作区与仓库保持一致")]),s._v(" "),a("li",[s._v("第一步: 文件增删改，变为已修改状态")]),s._v(" "),a("li",[s._v("第二步: git add ，变为已暂存状态")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git status\n$ git add --all # 当前项目下的所有更改\n$ git add .  # 当前目录下的所有更改\n$ git add xx/xx.py xx/xx2.py  # 添加某几个文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("第三步: git commit，变为已提交状态")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git commit -m"<这里写commit的描述>"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("第四步: git push，变为已推送状态")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push -u origin master # 第一次需要关联上\n$ git push # 之后再推送就不用指明应该推送的远程分支了\n$ git branch # 可以查看本地仓库的分支\n$ git branch -a # 可以查看本地仓库和本地远程仓库(远程仓库的本地镜像)的所有分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("在某个分支下，我最常用的操作如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git status\n$ git add -a\n$ git status\n$ git commit -m 'xxx'\n$ git pull --rebase\n$ git push origin xxbranch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"git常用操作命令-代码撤销和撤销同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-代码撤销和撤销同步"}},[s._v("#")]),s._v(" Git常用操作命令 - 代码撤销和撤销同步")]),s._v(" "),a("h4",{attrs:{id:"已修改-但未暂存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已修改-但未暂存"}},[s._v("#")]),s._v(" 已修改，但未暂存")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git diff # 列出所有的修改\n$ git diff xx/xx.py xx/xx2.py # 列出某(几)个文件的修改\n\n$ git checkout # 撤销项目下所有的修改\n$ git checkout . # 撤销当前文件夹下所有的修改\n$ git checkout xx/xx.py xx/xx2.py # 撤销某几个文件的修改\n$ git clean -f # untracked状态，撤销新增的文件\n$ git clean -df # untracked状态，撤销新增的文件和文件夹\n\n# Untracked files:\n#  (use "git add <file>..." to include in what will be committed)\n#\n#   xxx.py\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"已暂存-未提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已暂存-未提交"}},[s._v("#")]),s._v(" 已暂存，未提交")]),s._v(" "),a("blockquote",[a("p",[s._v("这个时候已经执行过git add，但未执行git commit，但是用git diff已经看不到任何修改。 因为git\ndiff检查的是工作区与暂存区之间的差异。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git diff --cached # 这个命令显示暂存区和本地仓库的差异\n\n$ git reset # 暂存区的修改恢复到工作区\n$ git reset --soft # 与git reset等价，回到已修改状态，修改的内容仍然在工作区中\n$ git reset --hard # 回到未修改状态，清空暂存区和工作区\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("git reset --hard 操作等价于 git reset 和 git checkout 2步操作")])]),s._v(" "),a("h4",{attrs:{id:"已提交-未推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已提交-未推送"}},[s._v("#")]),s._v(" 已提交，未推送")]),s._v(" "),a("blockquote",[a("p",[s._v("执行完commit之后，会在仓库中生成一个版本号(hash值)，标志这次提交。之后任何时候，都可以借助这个hash值回退到这次提交。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git diff <branch-name1> <branch-name2> # 比较2个分支之间的差异\n$ git diff master origin/master # 查看本地仓库与本地远程仓库的差异\n\n$ git reset --hard origin/master # 回退与本地远程仓库一致\n$ git reset --hard HEAD^ # 回退到本地仓库上一个版本\n$ git reset --hard <hash code> # 回退到任意版本\n$ git reset --soft/git reset # 回退且回到已修改状态，修改仍保留在工作区中。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"已推送到远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已推送到远程"}},[s._v("#")]),s._v(" 已推送到远程")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push -f orgin master # 强制覆盖远程分支\n$ git push -f # 如果之前已经用 -u 关联过，则可省略分支名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("慎用，一般情况下，本地分支比远程要新，所以可以直接推送到远程，但有时推送到远程后发现有问题，进行了版本回退，旧版本或者分叉版本推送到远程，需要添加\n-f参数，表示强制覆盖。")])]),s._v(" "),a("h3",{attrs:{id:"git常用操作命令-其它常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令-其它常用命令"}},[s._v("#")]),s._v(" Git常用操作命令 - 其它常用命令")]),s._v(" "),a("h4",{attrs:{id:"关联远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联远程仓库"}},[s._v("#")]),s._v(" 关联远程仓库")]),s._v(" "),a("ul",[a("li",[s._v("如果还没有Git仓库，你需要")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("如果你想关联远程仓库")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote add <name> <git-repo-url>\n# 例如 git remote add origin https://github.com/xxxxxx # 是远程仓库的名称，通常为 origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("如果你想关联多个远程仓库")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote add <name> <another-git-repo-url>\n# 例如 git remote add coding https://coding.net/xxxxxx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("忘了关联了哪些仓库或者地址")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote -v\n# origin https://github.com/gzdaijie/koa-react-server-render-blog.git (fetch)\n# origin https://github.com/gzdaijie/koa-react-server-render-blog.git (push)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("如果远程有仓库，你需要clone到本地")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git clone <git-repo-url>\n# 关联的远程仓库将被命名为origin，这是默认的。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("如果你想把别人仓库的地址改为自己的")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote set-url origin <your-git-url>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[s._v("#")]),s._v(" 切换分支")]),s._v(" "),a("blockquote",[a("p",[s._v("新建仓库后，默认生成了master分支")])]),s._v(" "),a("ul",[a("li",[s._v("如果你想新建分支并切换")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout -b <new-branch-name>\n# 例如 git checkout -b dev\n# 如果仅新建，不切换，则去掉参数 -b\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("看看当前有哪些分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch\n# * dev\n#   master # 标*号的代表当前所在的分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("看看当前本地&远程有哪些分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch -a\n# * dev\n#   master\n#   remotes/origin/master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("切换到现有的分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("你想把dev分支合并到master分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git merge <branch-name>\n# 例如 git merge dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("你想把本地master分支推送到远程去")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push origin master\n# 你可以使用git push -u origin master将本地分支与远程分支关联，之后仅需要使用git push即可。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("远程分支被别人更新了，你需要更新代码")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git pull origin <branch-name>\n# 之前如果push时使用过-u，那么就可以省略为git pull\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("本地有修改，能不能先git pull")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git stash # 工作区修改暂存\n$ git pull  # 更新分支\n$ git stash pop # 暂存修改恢复到工作区\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"撤销操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[s._v("#")]),s._v(" 撤销操作")]),s._v(" "),a("ul",[a("li",[s._v("恢复暂存区文件到工作区")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout <file-name>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("恢复暂存区的所有文件到工作区")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("重置暂存区的某文件，与上一次commit保持一致，但工作区不变")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reset <file-name>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("重置暂存区与工作区，与上一次commit保持一致")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reset --hard <file-name>\n# 如果是回退版本(commit)，那么file，变成commit的hash码就好了。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("去掉某个commit")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git revert <commit-hash>\n# 实质是新建了一个与原来完全相反的commit，抵消了原来commit的效果\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("reset回退错误恢复")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reflog #查看最近操作记录\n$ git reset --hard HEAD{5} #恢复到前五笔操作\n$ git pull origin backend-log #再次拉取代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"版本回退与前进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退与前进"}},[s._v("#")]),s._v(" 版本回退与前进")]),s._v(" "),a("ul",[a("li",[s._v("查看历史版本")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("你可能觉得这样的log不好看，试试这个")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git log --graph --decorate --abbrev-commit --all\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("检出到任意版本")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout a5d88ea\n# hash码很长，通常6-7位就够了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("远程仓库的版本很新，但是你还是想用老版本覆盖")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push origin master --force\n# 或者 git push -f origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("觉得commit太多了? 多个commit合并为1个")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git rebase -i HEAD~4\n# 这个命令，将最近4个commit合并为1个，HEAD代表当前版本。将进入VIM界面，你可以修改提交信息。推送到远程分支的commit，不建议这样做，多人合作时，通常不建议修改历史。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("想回退到某一个版本")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reset --hard <hash>\n# 例如 git reset --hard a3hd73r\n# --hard代表丢弃工作区的修改，让工作区与版本代码一模一样，与之对应，--soft参数代表保留工作区的修改。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("想回退到上一个版本，有没有简便方法?")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reset --hard HEAD^\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("回退到上上个版本呢?")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reset --hard HEAD^^\n# HEAD^^可以换作具体版本hash值。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("回退错了，能不能前进呀")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git reflog\n# 这个命令保留了最近执行的操作及所处的版本，每条命令前的hash值，则是对应版本的hash值。使用上述的git checkout 或者 git reset命令 则可以检出或回退到对应版本。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("刚才commit信息写错了，可以修改吗")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git commit --amend\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("看看当前状态吧")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"配置属于你的git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置属于你的git"}},[s._v("#")]),s._v(" 配置属于你的Git")]),s._v(" "),a("ul",[a("li",[s._v("看看当前的配置")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git config --list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("估计你需要配置你的名字")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git config --global user.name "<name>"\n#  --global为可选参数，该参数表示配置全局信息\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("希望别人看到你的commit可以联系到你")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git config --global user.email "<email address>"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("有些命令很长，能不能简化一下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git config --global alias.logg "log --graph --decorate --abbrev-commit --all"\n# 之后就可以开心地使用 git log了\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"gitignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[s._v("#")]),s._v(" gitignore")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/74bd0ceb6182",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 忽略提交 .gitignore在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"使用gource生成版本记录视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用gource生成版本记录视频"}},[s._v("#")]),s._v(" 使用Gource生成版本记录视频")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("工具下载https://www.cr173.com/soft/761328.html")])]),s._v(" "),a("li",[a("p",[s._v("官网 https://github.com/acaudwell/Gource")])]),s._v(" "),a("li",[a("p",[s._v("官网 - 转成视频 https://github.com/acaudwell/Gource/wiki/Videos")])]),s._v(" "),a("li",[a("p",[s._v("视频预览 http://www.365yg.com/i6595151386688619022/#mid=1592562064545805")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);