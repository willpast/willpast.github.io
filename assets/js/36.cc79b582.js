(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{368:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-stack-queue概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-stack-queue概述"}},[t._v("#")]),t._v(" 1. Stack & Queue概述")]),t._v(" "),s("p",[t._v("Java里有一个叫做"),s("em",[t._v("Stack")]),t._v("的类，却没有叫做"),s("em",[t._v("Queue")]),t._v("的类(它是个接口名字)。当需要使用栈时，Java已不推荐使用"),s("em",[t._v("Stack")]),t._v("，而是推荐使用更高效的"),s("em",[t._v("ArrayDeque")]),t._v("；既然"),s("em",[t._v("Queue")]),t._v("只是一个接口，当需要使用队列时也就首选"),s("em",[t._v("ArrayDeque")]),t._v("了(次选是"),s("em",[t._v("LinkedList")]),t._v(")。")]),t._v(" "),s("h2",{attrs:{id:"_2-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-queue"}},[t._v("#")]),t._v(" 2. Queue")]),t._v(" "),s("p",[s("em",[t._v("Queue")]),t._v("接口继承自Collection接口，除了最基本的Collection的方法之外，它还支持额外的"),s("em",[t._v("insertion")]),t._v(", "),s("em",[t._v("extraction")]),t._v("和"),s("em",[t._v("inspection")]),t._v("操作。这里有两组格式，共6个方法，一组是抛出异常的实现；另外一组是返回值的实现(没有则返回null)。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("Throws exception")]),t._v(" "),s("th",[t._v("Returns special value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Insert")]),t._v(" "),s("td",[t._v("add(e)")]),t._v(" "),s("td",[t._v("offer(e)")])]),t._v(" "),s("tr",[s("td",[t._v("Remove")]),t._v(" "),s("td",[t._v("remove()")]),t._v(" "),s("td",[t._v("poll()")])]),t._v(" "),s("tr",[s("td",[t._v("Examine")]),t._v(" "),s("td",[t._v("element()")]),t._v(" "),s("td",[t._v("peek()")])])])]),t._v(" "),s("h2",{attrs:{id:"_3-deque"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-deque"}},[t._v("#")]),t._v(" 3. Deque")]),t._v(" "),s("p",[s("code",[t._v("Deque")]),t._v('是"double ended queue", 表示双向的队列，英文读作"deck". Deque 继承自 Queue接口，除了支持Queue的方法之外，还支持'),s("code",[t._v("insert")]),t._v(", "),s("code",[t._v("remove")]),t._v("和"),s("code",[t._v("examine")]),t._v("操作，由于Deque是双向的，所以可以对队列的头和尾都进行操作，它同时也支持两组格式，一组是抛出异常的实现；另外一组是返回值的实现(没有则返回null)。共12个方法如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("First Element - Head")]),t._v(" "),s("th"),t._v(" "),s("th",[t._v("Last Element - Tail")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td",[t._v("Throws exception")]),t._v(" "),s("td",[t._v("Special value")]),t._v(" "),s("td",[t._v("Throws exception")]),t._v(" "),s("td",[t._v("Special value")])]),t._v(" "),s("tr",[s("td",[t._v("Insert")]),t._v(" "),s("td",[t._v("addFirst(e)")]),t._v(" "),s("td",[t._v("offerFirst(e)")]),t._v(" "),s("td",[t._v("addLast(e)")]),t._v(" "),s("td",[t._v("offerLast(e)")])]),t._v(" "),s("tr",[s("td",[t._v("Remove")]),t._v(" "),s("td",[t._v("removeFirst()")]),t._v(" "),s("td",[t._v("pollFirst()")]),t._v(" "),s("td",[t._v("removeLast()")]),t._v(" "),s("td",[t._v("pollLast()")])]),t._v(" "),s("tr",[s("td",[t._v("Examine")]),t._v(" "),s("td",[t._v("getFirst()")]),t._v(" "),s("td",[t._v("peekFirst()")]),t._v(" "),s("td",[t._v("getLast()")]),t._v(" "),s("td",[t._v("peekLast()")])])])]),t._v(" "),s("p",[t._v("当把"),s("code",[t._v("Deque")]),t._v("当做FIFO的"),s("code",[t._v("queue")]),t._v("来使用时，元素是从"),s("code",[t._v("deque")]),t._v("的尾部添加，从头部进行删除的； 所以"),s("code",[t._v("deque")]),t._v("的部分方法是和"),s("code",[t._v("queue")]),t._v("是等同的。具体如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Queue Method")]),t._v(" "),s("th",[t._v("Equivalent Deque Method")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("add(e)")]),t._v(" "),s("td",[t._v("addLast(e)")])]),t._v(" "),s("tr",[s("td",[t._v("offer(e)")]),t._v(" "),s("td",[t._v("offerLast(e)")])]),t._v(" "),s("tr",[s("td",[t._v("remove()")]),t._v(" "),s("td",[t._v("removeFirst()")])]),t._v(" "),s("tr",[s("td",[t._v("poll()")]),t._v(" "),s("td",[t._v("pollFirst()")])]),t._v(" "),s("tr",[s("td",[t._v("element()")]),t._v(" "),s("td",[t._v("getFirst()")])]),t._v(" "),s("tr",[s("td",[t._v("peek()")]),t._v(" "),s("td",[t._v("peekFirst()")])])])]),t._v(" "),s("p",[s("em",[t._v("Deque")]),t._v("的含义是“double ended queue”，即双端队列，它既可以当作栈使用，也可以当作队列使用。下表列出了"),s("em",[t._v("Deque")]),t._v("与"),s("em",[t._v("Queue")]),t._v("相对应的接口:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Queue Method")]),t._v(" "),s("th",[t._v("Equivalent Deque Method")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("add(e)")])]),t._v(" "),s("td",[s("code",[t._v("addLast(e)")])]),t._v(" "),s("td",[t._v("向队尾插入元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("offer(e)")])]),t._v(" "),s("td",[s("code",[t._v("offerLast(e)")])]),t._v(" "),s("td",[t._v("向队尾插入元素，失败则返回"),s("code",[t._v("false")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("remove()")])]),t._v(" "),s("td",[s("code",[t._v("removeFirst()")])]),t._v(" "),s("td",[t._v("获取并删除队首元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("poll()")])]),t._v(" "),s("td",[s("code",[t._v("pollFirst()")])]),t._v(" "),s("td",[t._v("获取并删除队首元素，失败则返回"),s("code",[t._v("null")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("element()")])]),t._v(" "),s("td",[s("code",[t._v("getFirst()")])]),t._v(" "),s("td",[t._v("获取但不删除队首元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("peek()")])]),t._v(" "),s("td",[s("code",[t._v("peekFirst()")])]),t._v(" "),s("td",[t._v("获取但不删除队首元素，失败则返回"),s("code",[t._v("null")])])])])]),t._v(" "),s("p",[t._v("下表列出了"),s("em",[t._v("Deque")]),t._v("与"),s("em",[t._v("Stack")]),t._v("对应的接口:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Stack Method")]),t._v(" "),s("th",[t._v("Equivalent Deque Method")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("push(e)")])]),t._v(" "),s("td",[s("code",[t._v("addFirst(e)")])]),t._v(" "),s("td",[t._v("向栈顶插入元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("offerFirst(e)")])]),t._v(" "),s("td",[t._v("向栈顶插入元素，失败则返回"),s("code",[t._v("false")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pop()")])]),t._v(" "),s("td",[s("code",[t._v("removeFirst()")])]),t._v(" "),s("td",[t._v("获取并删除栈顶元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("pollFirst()")])]),t._v(" "),s("td",[t._v("获取并删除栈顶元素，失败则返回"),s("code",[t._v("null")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("peek()")])]),t._v(" "),s("td",[s("code",[t._v("getFirst()")])]),t._v(" "),s("td",[t._v("获取但不删除栈顶元素，失败则抛出异常")])]),t._v(" "),s("tr",[s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("peekFirst()")])]),t._v(" "),s("td",[t._v("获取但不删除栈顶元素，失败则返回"),s("code",[t._v("null")])])])])]),t._v(" "),s("p",[t._v("上面两个表共定义了"),s("em",[t._v("Deque")]),t._v("的12个接口。添加，删除，取值都有两套接口，它们功能相同，区别是对失败情况的处理不同。"),s("strong",[t._v("一套接口遇到失败就会抛出异常，另一套遇到失败会返回特殊值("),s("code",[t._v("false")]),t._v("或"),s("code",[t._v("null")]),t._v(")")]),t._v("。除非某种实现对容量有限制，大多数情况下，添加操作是不会失败的。"),s("strong",[t._v("虽然*Deque*的接口有12个之多，但无非就是对容器的两端进行操作，或添加，或删除，或查看")]),t._v("。明白了这一点讲解起来就会非常简单。")]),t._v(" "),s("p",[s("em",[t._v("ArrayDeque")]),t._v("和"),s("em",[t._v("LinkedList")]),t._v("是"),s("em",[t._v("Deque")]),t._v("的两个通用实现，由于官方更推荐使用"),s("em",[t._v("AarryDeque")]),t._v("用作栈和队列，加之上一篇已经讲解过"),s("em",[t._v("LinkedList")]),t._v("，本文将着重讲解"),s("em",[t._v("ArrayDeque")]),t._v("的具体实现。")]),t._v(" "),s("p",[t._v("从名字可以看出"),s("em",[t._v("ArrayDeque")]),t._v("底层通过数组实现，为了满足可以同时在数组两端插入或删除元素的需求，该数组还必须是循环的，即"),s("strong",[t._v("循环数组(circular array)")]),t._v("，也就是说数组的任何一点都可能被看作起点或者终点。"),s("em",[t._v("ArrayDeque")]),t._v("是非线程安全的(not thread-safe)，当多个线程同时使用的时候，需要程序员手动同步；另外，该容器不允许放入"),s("code",[t._v("null")]),t._v("元素。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220816211332105.png",alt:"image-20220816211332105"}})]),t._v(" "),s("p",[t._v("上图中我们看到，"),s("strong",[s("code",[t._v("head")]),t._v("指向首端第一个有效元素，"),s("code",[t._v("tail")]),t._v("指向尾端第一个可以插入元素的空位")]),t._v("。因为是循环数组，所以"),s("code",[t._v("head")]),t._v("不一定总等于0，"),s("code",[t._v("tail")]),t._v("也不一定总是比"),s("code",[t._v("head")]),t._v("大。")]),t._v(" "),s("h2",{attrs:{id:"_4-方法剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-方法剖析"}},[t._v("#")]),t._v(" 4. 方法剖析")]),t._v(" "),s("h3",{attrs:{id:"_4-1-addfirst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-addfirst"}},[t._v("#")]),t._v(" 4.1 addFirst()")]),t._v(" "),s("p",[s("code",[t._v("addFirst(E e)")]),t._v("的作用是在"),s("em",[t._v("Deque")]),t._v("的首端插入元素，也就是在"),s("code",[t._v("head")]),t._v("的前面插入元素，在空间足够且下标没有越界的情况下，只需要将"),s("code",[t._v("elements[--head] = e")]),t._v("即可。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220816211527313.png",alt:"image-20220816211527313"}})]),t._v(" "),s("p",[t._v("实际需要考虑: 1.空间是否够用，以及2.下标是否越界的问题。上图中，如果"),s("code",[t._v("head")]),t._v("为"),s("code",[t._v("0")]),t._v("之后接着调用"),s("code",[t._v("addFirst()")]),t._v("，虽然空余空间还够用，但"),s("code",[t._v("head")]),t._v("为"),s("code",[t._v("-1")]),t._v("，下标越界了。下列代码很好的解决了这两个问题。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//addFirst(E e)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不允许放入null")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPointerException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.下标是否越界")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.空间是否够用")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//扩容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("上述代码我们看到，"),s("strong",[t._v("空间问题是在插入之后解决的")]),t._v("，因为"),s("code",[t._v("tail")]),t._v("总是指向下一个可插入的空位，也就意味着"),s("code",[t._v("elements")]),t._v("数组至少有一个空位，所以插入元素的时候不用考虑空间问题。")]),t._v(" "),s("p",[t._v("下标越界的处理解决起来非常简单，"),s("code",[t._v("head = (head - 1) & (elements.length - 1)")]),t._v("就可以了，"),s("strong",[t._v("这段代码相当于取余，同时解决了"),s("code",[t._v("head")]),t._v("为负值的情况")]),t._v("。因为"),s("code",[t._v("elements.length")]),t._v("必需是"),s("code",[t._v("2")]),t._v("的指数倍，"),s("code",[t._v("elements - 1")]),t._v("就是二进制低位全"),s("code",[t._v("1")]),t._v("，跟"),s("code",[t._v("head - 1")]),t._v("相与之后就起到了取模的作用，如果"),s("code",[t._v("head - 1")]),t._v("为负数(其实只可能是-1)，则相当于对其取相对于"),s("code",[t._v("elements.length")]),t._v("的补码。")]),t._v(" "),s("p",[t._v("下面再说说扩容函数"),s("code",[t._v("doubleCapacity()")]),t._v("，其逻辑是申请一个更大的数组(原数组的两倍)，然后将原数组复制过去。过程如下图所示:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220816212042861.png",alt:"image-20220816212042861"}})]),t._v(" "),s("p",[t._v("图中我们看到，复制分两次进行，第一次复制"),s("code",[t._v("head")]),t._v("右边的元素，第二次复制"),s("code",[t._v("head")]),t._v("左边的元素。")]),t._v(" "),s("blockquote",[s("p",[t._v("扩容成原来的2倍")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//doubleCapacity()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// head右边元素的个数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//原空间的2倍")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalStateException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry, deque too big"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复制右半部分，对应上图中绿色部分")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复制左半部分，对应上图中灰色部分")]),t._v("\n    elements "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h3",{attrs:{id:"_4-2-addlast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-addlast"}},[t._v("#")]),t._v(" 4.2 addLast()")]),t._v(" "),s("p",[s("code",[t._v("addLast(E e)")]),t._v("的作用是在"),s("em",[t._v("Deque")]),t._v("的尾端插入元素，也就是在"),s("code",[t._v("tail")]),t._v("的位置插入元素，由于"),s("code",[t._v("tail")]),t._v("总是指向下一个可以插入的空位，因此只需要"),s("code",[t._v("elements[tail] = e;")]),t._v("即可。插入完成后再检查空间，如果空间已经用光，则调用"),s("code",[t._v("doubleCapacity()")]),t._v("进行扩容。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220816213145335.png",alt:"image-20220816213145335"}})]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不允许放入null")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPointerException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//赋值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下标越界处理")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//扩容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("下标越界处理方式"),s("code",[t._v("addFirt()")]),t._v("中已经讲过，不再赘述。")]),t._v(" "),s("h3",{attrs:{id:"_4-3-pollfirst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-pollfirst"}},[t._v("#")]),t._v(" 4.3 pollFirst()")]),t._v(" "),s("p",[s("code",[t._v("pollFirst()")]),t._v("的作用是删除并返回"),s("em",[t._v("Deque")]),t._v("首端元素，也即是"),s("code",[t._v("head")]),t._v("位置处的元素。如果容器不空，只需要直接返回"),s("code",[t._v("elements[head]")]),t._v("即可，当然还需要处理下标的问题。由于"),s("code",[t._v("ArrayDeque")]),t._v("中不允许放入"),s("code",[t._v("null")]),t._v("，当"),s("code",[t._v("elements[head] == null")]),t._v("时，意味着容器为空。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pollFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//null值意味着deque为空")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let GC work")]),t._v("\n    head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下标越界处理")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h3",{attrs:{id:"_4-4-polllast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-polllast"}},[t._v("#")]),t._v(" 4.4 pollLast()")]),t._v(" "),s("p",[s("code",[t._v("pollLast()")]),t._v("的作用是删除并返回"),s("em",[t._v("Deque")]),t._v("尾端元素，也即是"),s("code",[t._v("tail")]),t._v("位置前面的那个元素。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pollLast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//tail的上一个位置是最后一个元素")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//null值意味着deque为空")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let GC work")]),t._v("\n    tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"_4-5-peekfirst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-peekfirst"}},[t._v("#")]),t._v(" 4.5 peekFirst()")]),t._v(" "),s("p",[s("code",[t._v("peekFirst()")]),t._v("的作用是返回但不删除"),s("em",[t._v("Deque")]),t._v("首端元素，也即是"),s("code",[t._v("head")]),t._v("位置处的元素，直接返回"),s("code",[t._v("elements[head]")]),t._v("即可。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("peekFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// elements[head] is null if deque empty")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_4-6-peeklast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-peeklast"}},[t._v("#")]),t._v(" 4.6 peekLast()")]),t._v(" "),s("p",[s("code",[t._v("peekLast()")]),t._v("的作用是返回但不删除"),s("em",[t._v("Deque")]),t._v("尾端元素，也即是"),s("code",[t._v("tail")]),t._v("位置前面的那个元素。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("peekLast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://pdai.tech/md/java/collection/java-collection-Queue&Stack.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("Collection - Stack & Queue 源码解析")]),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);