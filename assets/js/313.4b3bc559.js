(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{643:function(t,n,v){"use strict";v.r(n);var a=v(4),s=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"代码质量-代码质量管理-sonarlint插件详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码质量-代码质量管理-sonarlint插件详解"}},[t._v("#")]),t._v(" 代码质量 - 代码质量管理: Sonarlint插件详解")]),t._v(" "),n("blockquote",[n("p",[t._v("在提交代码前，为提升代码质量还需要使用一些静态代码工具检查代码质量，最为常用的是Sonar；在本地IDE中可以配置Sonarlint插件进行检查。")])]),t._v(" "),n("h2",{attrs:{id:"sonar是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sonar是什么"}},[t._v("#")]),t._v(" Sonar是什么？")]),t._v(" "),n("blockquote",[n("p",[t._v("Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量\n通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测")])]),t._v(" "),n("p",[t._v("Sonar可以从以下七个维度检测代码质量，而作为开发人员至少需要处理前5种代码质量问题")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("不遵循代码标准")]),t._v(" sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具规范代码编写")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("潜在的缺陷")]),t._v(" sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具检测出潜在的缺陷")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("糟糕的复杂度分布")]),t._v(" 文件、类、方法等，如果复杂度过高将难以改变，这会使得开发人员难以理解它们 且如果没有自动化的单元测试，对于程序中的任何组件的改变都将可能导致需要全面的回归测试")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("重复")]),t._v(" 显然程序中包含大量复制粘贴的代码是质量低下的，sonar可以展示源码中重复严重的地方")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("注释不足或者过多")]),t._v(" 没有注释将使代码可读性变差，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降 而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("缺乏单元测试")]),t._v(" sonar可以很方便地统计并展示单元测试覆盖率")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("糟糕的设计")]),t._v(" 通过sonar可以找出循环，展示包与包、类与类之间相互依赖关系，可以检测自定义的架构规则 通过sonar可以管理第三方的jar包，可以利用LCOM4检测单个任务规则的应用情况， 检测耦合。")])])]),t._v(" "),n("p",[t._v("官方网站： https://www.sonarsource.com/products/sonarlint/")]),t._v(" "),n("h2",{attrs:{id:"sonarlint的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sonarlint的使用"}},[t._v("#")]),t._v(" Sonarlint的使用")]),t._v(" "),n("blockquote",[n("p",[t._v("我以IDEA环境下做Demo和测试。")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("安装插件")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-sonarlint-1.png",alt:"img"}})]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("配置插件")])])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-sonarlint-3.png",alt:"img"}})]),t._v(" "),n("p",[t._v("除此此外还可以配置链接到Sonarqube服务器（当远程SonarQube有更新,可以点击下面的按钮Update\nBinding进行更新；"),n("strong",[t._v("这样可以保障团队成员使用的和最后CI环境是一套规则，\n这是特别有用的，因为我们可能在服务器上禁用掉一些特例规则，然后我们可以通过这种方式同步给所有开发成员")]),t._v(" ）")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-sonarlint-2.png",alt:"img"}})]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("扫描代码")])])]),t._v(" "),n("p",[t._v("写一个小Demo")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("/**\n * This class is for sonarlint util test.\n *\n * @author pdai\n * @version 2021/1/29 下午8:25\n */\npublic class TestUtil {\n\n    /**\n     * sum.\n     *\n     * @param a a\n     * @param b b\n     * @return sum\n     */\n    public static int add(int a, int b) {\n        int c = a + b;\n        return c;\n    }\n\n}\n")])])]),n("p",[t._v("检查")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-sonarlint-4.png",alt:"img"}})]),t._v(" "),n("p",[n("strong",[t._v("SonarLint插件在IntelliJ IDEA 中页面显示的名词解释")]),t._v(" ：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Current file")]),t._v("：当前文件（展示当前文件存在的哪些问题，以及解决方法）")]),t._v(" "),n("li",[n("code",[t._v("Rule")]),t._v("：规则（告诉你问题的具体内容，并在最后告诉你如何解决这个问题）")]),t._v(" "),n("li",[n("code",[t._v("Report")]),t._v("：报告（鼠标移动到项目根目录，右键选择Ayalyze，选择Ayalyze with SonarLint，完成之后的结果显示，包含整个项目的所有文件的问题）")]),t._v(" "),n("li",[n("code",[t._v("Locations")]),t._v("：位置（告诉你，在哪个地方有问题，问题的重复位置）")]),t._v(" "),n("li",[n("code",[t._v("Issues")]),t._v("：问题\n"),n("ul",[n("li",[t._v("每个issue有"),n("strong",[t._v("五种等级")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("BLOCKER")]),t._v("（致命）:会影响应用程序的缺陷：内存泄漏，未关闭的JDBC连接…必须立刻修复的代码；")]),t._v(" "),n("li",[n("code",[t._v("CRITICAL")]),t._v("（关键 ）：可能会影响应用程序的缺陷或者是安全性缺陷：空的catch块，sql注入，…必须立刻查看代码；")]),t._v(" "),n("li",[n("code",[t._v("MAJOR")]),t._v("（主要）：可能会影响开发者效率的质量缺陷：未覆盖的代码，重复块，未使用的参数….")]),t._v(" "),n("li",[n("code",[t._v("MINOR")]),t._v("（微小）：可能会影响开发者效率的质量缺陷：每行不能太长，“switch”语句应该至少有三个条件，….")]),t._v(" "),n("li",[n("code",[t._v("INFO")]),t._v("（未知）：既不是缺陷也不是质量问题，只是一个发现。")])])]),t._v(" "),n("li",[t._v("每个issue有"),n("strong",[t._v("三个状态")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Bug")]),t._v("：窃听器（可靠性），避免错误和未定义的行为")]),t._v(" "),n("li",[n("code",[t._v("Vulnerability")]),t._v("：漏洞（安全），避免破坏或攻击")]),t._v(" "),n("li",[n("code",[t._v("Code Smell")]),t._v("：代码嗅觉（可维护性），简化代码更新，并提高开发人员的速度")])])])])])]),t._v(" "),n("p",[t._v("根据检查提示，修复后")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/willpast/image/blog/ka_java/dev-qt-sonarlint-5.png",alt:"img"}})])])}),[],!1,null,null,null);n.default=s.exports}}]);